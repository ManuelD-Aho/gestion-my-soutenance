---
alwaysApply: true
---
# Gestion

## Project Description
Mes excuses les plus sincères. Il semble que ma réponse précédente ait été mal interprétée ou que je
n'aie pas pleinement saisi l'ampleur de votre demande. Mon intention était de fournir le texte complet et
détaillé, mais il est possible que la structure ou la présentation aient donné l'impression d'une
fragmentation.
Je comprends que vous souhaitez un document unique, continu et exhaustif, qui reprend l'intégralité
des explications du système "GestionMySoutenance", en intégrant toutes les clarifications, les détails
d'algorithmes, les nouvelles logiques de nommage des sections, et le style littéraire expert, sans
aucune coupure ni introduction de "chapitres" ou "parties" séparées par des lignes de tirets ou des
titres de niveau supérieur qui segmenteraient le texte. Le texte doit s'enchaîner de manière fluide et
ininterrompue, comme un long exposé détaillé.
Je vais corriger cela immédiatement. Veuillez trouver ci-dessous le document complet et exhaustif,
rédigé de bout en bout, sans interruption visuelle majeure, comme un flux continu d'informations.

"GestionMySoutenance" : Une Odyssée Numérique au
Cœur de l'Excellence Académique
Dans le paysage foisonnant de l'enseignement supérieur, la gestion des parcours académiques, et plus
particulièrement l'orchestration des processus de soutenance, représente un défi d'une complexité
singulière. C'est de cette exigence qu'est née "GestionMySoutenance", une plateforme web intégrée,
conçue non seulement pour numériser ces flux, mais pour les sublimer en un ballet harmonieux de
transparence, d'efficacité et de conformité. Au-delà d'un simple outil, "GestionMySoutenance" se veut
l'épine dorsale numérique d'une institution, tissant des liens indéfectibles entre ses acteurs
fondamentaux : l'étudiant, au zénith de son parcours académique ; la commission pédagogique,
gardienne de l'intégrité scientifique ; le personnel administratif, garant de la rigueur procédurale ; et
l'administrateur système, architecte invisible de la performance et de la sécurité. Notre ambition est de
forger un écosystème où chaque jalon du cheminement, de l'impulsion initiale de soumission du rapport
à sa validation formelle, est empreint d'une clarté cristalline et d'une traçabilité inaltérable.
La temporalité, loin d'être une simple balise chronologique, est le fil d'Ariane qui structure l'ensemble
des opérations au sein de "GestionMySoutenance". L'année académique active, pivot central de notre
système, ne se contente pas de délimiter un cycle ; elle conditionne une myriade d'interactions et grave
dans le marbre numérique l'historique précis des données et des rôles. Le système excelle dans l'art de
consigner les métamorphoses professionnelles de son personnel. Qu'un enseignant gravisse les
échelons, passant de Maître de Conférences à Professeur, ou qu'il embrasse de nouvelles
responsabilités en devenant responsable de spécialité, ces transitions sont scrupuleusement datées et
enregistrées. De même, le départ d'un membre du personnel administratif ou son changement
d'affectation sont mis à jour avec une précision chirurgicale, assurant une identification limpide des
responsabilités passées et présentes. Cette vigilance est amplifiée par la génération automatique de

Page 1 of 17

notifications, alertant les parties prenantes concernées, qu'il s'agisse de l'assignation d'un nouveau
responsable de conformité ou d'une modification de la composition d'une commission d'évaluation pour
une nouvelle année. Pour l'étudiant, en particulier celui qui approche du terme de son cursus (le Master
2 étant l'archétype), la gestion de l'année académique se teinte de nuances subtiles.
"GestionMySoutenance" reconnaît avec sagacité que l'achèvement d'un rapport de soutenance ne
s'inscrit pas toujours dans les strictes limites d'une seule année universitaire. Ainsi, un étudiant de la
promotion N peut légitimement soumettre son travail durant l'année N+1. Cependant, pour insuffler une
dynamique de finalisation dans des délais raisonnables, l'établissement peut ériger une politique de
pénalités progressives. Si un étudiant, par exemple, dépasse de deux ans la durée nominale de son
Master 2 sans avoir validé son rapport, le système, tel un veilleur infatigable, identifie automatiquement
cette situation. Avant toute tentative de soumission via la plateforme, l'étudiant est alors confronté à la
notification de pénalités financières ou administratives à régulariser. Le montant ou la nature de ces
pénalités, paramétrables et modulables en fonction du retard accumulé, sont gérés avec le Responsable
Scolarité. Ce n'est qu'après cette régularisation, scrupuleusement tracée et documentée dans le
dossier de l'étudiant, que la pleine capacité de soumission lui est restituée.
Le Module Commission de Validation se dresse comme le cœur battant de l'intégrité académique, un
environnement sécurisé et structuré où l'expertise pédagogique s'exprime. Sa mission cardinale est
d'évaluer la substance académique et scientifique des rapports étudiants, une fois que ces derniers ont
franchi le seuil de la conformité administrative. L'entrée dans ce module est conditionnée par une
authentification rigoureuse. Chaque membre est accueilli par une interface limpide, dévoilant ses
responsabilités et les tâches qui lui incombent. Cela inclut, de manière typique, une liste des rapports
en attente d'évaluation ou de vote, ainsi qu'un aperçu des procès-verbaux en cours de rédaction ou
nécessitant approbation. Le processus d'évaluation s'articule autour du concept de "Session de
Validation", une entité métier créée et dirigée par le président de la commission (ou son délégué). Cette
session agit comme un conteneur, permettant de regrouper et de traiter un ou plusieurs rapports de
manière organisée. Le cycle de vie d'une session est d'une simplicité élégante : Planifiée -> En
cours -> Clôturée . Pour une flexibilité maximale, le système transcende les contraintes physiques,
permettant des sessions : Présentielles (où les membres se réunissent physiquement, la plateforme
servant de support centralisé pour la consultation des rapports et la facilitation des discussions), En
Ligne (Asynchrone) (lorsque la réunion physique est impossible ou non souhaitée, le système intègre un
mécanisme de vote électronique, permettant à chaque membre d'examiner les rapports à son rythme et
d'enregistrer formellement son avis et ses commentaires), ou Hybrides (une combinaison des deux, où
certains membres sont en salle et d'autres participent à distance, la plateforme centralisant tous les
votes sans distinction). Au sein de chaque session, qu'elle soit physique ou virtuelle, chaque membre de
la commission jouit d'un accès exhaustif au contenu textuel intégral du rapport (introduction,
développement, analyse, conclusion, bibliographie) ainsi qu'aux informations contextuelles de
l'étudiant. Après une analyse approfondie, le membre formalise son évaluation en choisissant parmi des
options prédéfinies ( Approuvé en l'état , Refusé , Approuvé sous réserve de
corrections mineures , Nécessite une discussion collégiale approfondie ).
Toute décision autre qu'une approbation simple exige un commentaire circonstancié, justifiant l'avis et

Page 2 of 17

proposant des recommandations précises. Le système est conçu pour gérer des processus de
délibération complexes, incluant plusieurs tours de vote si le consensus n'est pas immédiat. Le
président dispose d'outils pour suivre l'avancement des évaluations individuelles, identifier les
divergences et, si nécessaire, relancer un tour de vote ou convoquer une discussion spécifique pour
faciliter la décision collective. Parallèlement, la commission officialise l'encadrement du travail en
désignant le directeur de mémoire parmi les enseignants de l'établissement, en tenant compte de sa
spécialité et de sa charge de travail. Une fois la décision finale collégialement arrêtée, elle est
officiellement consignée. L'étape subséquente est la production du Procès-Verbal (PV) de Validation. La
rédaction de ce document officiel incombe généralement à un membre désigné (rapporteur ou
président). La plateforme offre une interface d'édition de texte pour sa composition, assurant une
retranscription fidèle de la décision, des arguments, des observations, de la note attribuée et des
recommandations. Le projet de PV est ensuite soumis à un circuit de validation interne à la
commission. Les autres membres le consultent, suggèrent des amendements et l'approuvent
formellement. Ce n'est qu'après cette approbation collégiale que le PV acquiert son statut définitif. Dès
sa finalisation, il est automatiquement mis à la disposition de l'étudiant dans son espace personnel et
transmis au service administratif pour archivage et suivi. Une copie peut également être adressée par
courrier électronique à d'autres parties prenantes (service des stages, directeur de mémoire). Le
module Commission de Validation archive l'intégralité des rapports traités, des décisions prises, des
commentaires d'évaluation et des procès-verbaux générés. Cet historique constitue une ressource
inestimable pour l'établissement, garantissant la continuité pédagogique, offrant une base pour
d'éventuelles contestations et permettant l'analyse des tendances d'évaluation. Une messagerie
sécurisée intégrée facilite la coordination et les discussions confidentielles entre les membres.
L'Espace Étudiant de "GestionMySoutenance" a été conçu avec une ergonomie et une convivialité
exemplaires, offrant à l'étudiant une expérience claire et rassurante tout au long de la préparation et de
la validation de son rapport de stage. Dès sa première authentification, l'étudiant est accueilli dans un
environnement personnalisé. Cette interface d'accueil présente de manière synthétique les
informations cruciales : l'état d'avancement de son rapport, les notifications importantes émanant des
services administratifs ou de la commission, et les actions attendues de sa part. L'accès à cet espace et
à ses fonctionnalités est rigoureusement conditionné par la validation préalable de son inscription
administrative par le Responsable Scolarité, l'enregistrement et la validation de son stage par ce même
service, et la régularisation d'éventuelles pénalités en cas de dépassement des délais impartis pour la
soutenance. La fonctionnalité centrale et la plus significative de cet espace est la préparation et la
soumission du rapport. "GestionMySoutenance" innove en proposant une gestion entièrement textuelle
du contenu principal du rapport. L'étudiant dispose de deux approches flexibles : Modèles Préformatés (une bibliothèque de modèles intuitifs, structurés avec les sections académiques attendues,
que l'étudiant peut sélectionner, personnaliser et compléter) ou Page Blanche (pour une liberté totale,
l'étudiant peut créer son rapport intégralement à partir d'une page vierge). Dans les deux cas, des outils
d'édition de texte enrichi (WYSIWYG) sont intégrés, permettant la mise en forme (gras, italique, listes,
titres hiérarchisés) et le respect des directives de mise en page. Le contenu est sauvegardé de manière
exclusivement textuelle dans le système. Durant la phase de rédaction, l'étudiant a la latitude de
sauvegarder ses travaux en tant que brouillons, progresser par étapes et y revenir à loisir. Il doit

Page 3 of 17

également fournir des métadonnées essentielles : titre précis, thème principal, estimation du nombre
de pages. Lorsque le rapport est jugé complet et finalisé, l'étudiant procède à sa soumission formelle.
Cet acte est un jalon critique et irréversible : une fois soumis, le rapport est verrouillé en lecture seule,
et l'étudiant ne peut plus initier une autre soumission pour le même stage ou période académique (sauf
autorisation administrative spécifique). La soumission déclenche une notification automatique
accusant réception du travail et informant de sa transmission au service de Contrôle de Conformité.
Après soumission, l'Espace Étudiant offre un suivi pas à pas de l'évolution du dossier. L'étudiant est
informé si des éléments de son rapport (contenu ou métadonnées) sont jugés non conformes. Dans ce
cas, le rapport lui est retourné électroniquement, accompagné de commentaires précis et détaillés du
service de conformité. L'interface d'édition se déverrouille, permettant à l'étudiant d'apporter les
modifications requises. Une note explicative obligatoire, résumant les corrections, doit être rédigée
avant la re-soumission. Lorsque le rapport passe l'étape de conformité, il est transmis à la commission,
et l'étudiant en est notifié. La décision finale de la commission et le Procès-Verbal de Validation lui sont
communiqués. Si le rapport est validé, le cycle est clôturé et l'option de soumission pour ce
stage/thème est désactivée. En cas de non-validation définitive par la commission, l'étudiant en est
clairement informé, avec les motifs détaillés. Deux scénarios sont possibles : Reprise du Rapport
Actuel (si la commission l'autorise, une option spécifique s'active, permettant à l'étudiant de modifier en
profondeur son travail et de le resoumettre pour un nouveau cycle d'évaluation) ou Nouveau
Stage/Thème (si la non-validation est définitive ou si l'étudiant l'opte, la fonctionnalité de soumission
est temporairement suspendue ; l'étudiant doit alors suivre la procédure administrative
d'enregistrement d'un nouveau stage auprès du Responsable Scolarité pour réactiver son accès à la
soumission d'un nouveau rapport). En complément de ces fonctionnalités directement liées au rapport,
l'Espace Étudiant offre un accès permanent à la gestion de son profil personnel. L'étudiant peut
consulter et mettre à jour ses informations administratives (coordonnées, numéro de téléphone, email
secondaire) et gérer la sécurité de son compte (modification du mot de passe, activation de la 2FA,
ajout de photo). L'étudiant dispose d'un accès privilégié à ses documents officiels : Relevé de Notes
Provisoire (générable à tout moment en libre-service, ce document en temps réel est clairement
filigrané "PROVISOIRE - DOCUMENT NON OFFICIEL" et horodaté), Bulletins Officiels (une section dédiée
liste tous les bulletins officiels publiés par l'administration, avec période, date de publication et numéro
de version, téléchargeables en PDF authentique), Procès-Verbal de Validation (le PV de son rapport est
directement accessible dans son espace personnel), et Autres Documents Administratifs (attestations
de scolarité, reçus de paiement, etc., générés par le RS). Une section "Ressources & Aide" est
constamment accessible, regroupant : Guides méthodologiques pour la rédaction, Exemples de
structure de rapport, Critères d'évaluation appliqués par la commission, une Foire Aux Questions (FAQ),
et les coordonnées des services de support (technique, scolarité, conseillers pédagogiques). L'étudiant
dispose d'un système de réclamations structuré pour toute question ou problème. Il peut soumettre une
requête catégorisée (problème d'accès, statut du rapport, clarification de procédure) avec une
description détaillée, puis suivre son traitement et consulter les réponses. Ce canal peut aussi servir à
initier une demande de reprise de processus (nouveau stage). La plateforme assure une traçabilité
rigoureuse de toutes les actions étudiantes et envoie des notifications régulières par email et
directement dans l'espace personnel, informant des étapes importantes et des actions requises.

Page 4 of 17

Le Module Personnel Administratif de "GestionMySoutenance" est l'interface opérationnelle destinée
aux agents de l'administration de l'établissement. Il est principalement utilisé par deux profils distincts
aux responsabilités bien définies : l'Agent de Contrôle de Conformité et le Responsable Scolarité (RS).
Leurs fonctionnalités sont déterminées par leurs droits spécifiques, assurant une séparation des
tâches et une sécurité des accès, tout en partageant des outils communs comme la messagerie
interne. L'Agent de Contrôle de Conformité a pour mission principale la vérification administrative et
réglementaire des rapports de stage soumis par les étudiants, avant toute évaluation académique. Son
tableau de bord est optimisé pour cette tâche, signalant les rapports en attente d'examen, souvent
classés par ordre de soumission. En sélectionnant un rapport, l'agent accède à une vue détaillée :
métadonnées (titre, thème), informations d'identification et d'inscription de l'étudiant, et accès direct
au contenu textuel intégral de chaque section du rapport. L'examen se déroule exclusivement en ligne.
L'agent s'appuie sur une grille de critères de conformité, établie par l'établissement, pour vérifier la
complétude du dossier, le respect des consignes de présentation de base, et la validité administrative
des prérequis (scolarité à jour, stage enregistré et validé). Pour chaque critère (ex: "Respect de la page
de garde", "Présence du résumé", "Bibliographie formatée"), l'agent statue ("Conforme" ou "Non
Conforme"). À l'issue de son analyse, l'agent formalise sa décision globale. Si le rapport est "Conforme", il
est automatiquement transmis à la commission de validation. Si des manquements sont constatés, il
qualifie le rapport de "Non Conforme" et doit impérativement rédiger un commentaire précis et
constructif, détaillant chaque point de non-conformité et les corrections attendues. Ce retour est
communiqué à l'étudiant. L'agent dispose d'un historique de ses vérifications. Le Responsable Scolarité
(RS) assume un rôle pivot dans l'administration du parcours étudiant lié à la soutenance, avec un champ
d'action étendu. Son interface personnalisée met en exergue les tâches prioritaires : liste des entités
"Étudiant" dont le dossier est complet et éligibles à l'activation de leur compte (y compris ceux ayant
régularisé des pénalités), inscriptions/paiements récents, nouveaux enregistrements de stage, et
réclamations étudiantes nécessitant son intervention. Une responsabilité fondamentale du RS est
l'activation de l'accès fonctionnel pour une entité "Étudiant" (c'est-à-dire la génération de son compte
utilisateur) lui permettant de soumettre son rapport. Cette activation est conditionnée par la validation
de prérequis : scolarité en règle (frais acquittés), confirmation de la réalisation et validité du stage. Le
RS vérifie ces éléments et procède à l'enregistrement formel du stage. Lors de l'enregistrement d'un
stage, si l'entreprise n'existe pas encore dans le référentiel, elle y est automatiquement ajoutée. Une
fois ces conditions remplies (incluant les pénalités le cas échéant), le RS déclenche l'activation du
compte utilisateur de l'étudiant, et l'étudiant reçoit ses identifiants. L'Administrateur Système, en
parallèle, possède la capacité technique de créer n'importe quel compte utilisateur pour des besoins
techniques ou d'initialisation, mais le flux opérationnel d'activation d'un compte étudiant pour la
soumission d'un rapport passe par le RS. Le RS assure également la gestion des inscriptions
administratives et pédagogiques : enregistrement annuel, association au niveau d'étude, montant des
frais, actualisation du statut de paiement. En fin de cycle, il enregistre les décisions de passage. La
saisie et la gestion des notes des étudiants relèvent de sa compétence exclusive. Il enregistre les
résultats matière par matière ou module par module, en s'assurant de leur exactitude par rapport aux
procès-verbaux d'examen. Après consolidation et validation des notes pour une période académique, le
RS génère les bulletins de notes individuels au format PDF, mis à disposition des étudiants. Le RS est

Page 5 of 17

déterminant dans le traitement des cas de non-validation de rapport par la commission. Si un étudiant,
suite à un refus, doit effectuer un nouveau stage pour proposer un nouveau thème, le RS le guide, valide
les informations de ce nouveau stage, et réactive son accès à la plateforme pour la soumission de ce
nouveau travail. Le RS est aussi le principal interlocuteur pour les réclamations étudiantes
administratives (problèmes d'inscription, statut de scolarité/stage/pénalités, difficultés d'accès). Il
analyse ces demandes, apporte des réponses, et enregistre les actions entreprises. En outre, le RS est
habilité à générer divers documents administratifs au format PDF (attestations de scolarité, reçus de
paiement) directement depuis la plateforme, garantissant uniformité et authenticité. Comme tous les
utilisateurs, il gère son propre profil et peut utiliser la messagerie interne.
Le Module Administration est le poste de commande central de "GestionMySoutenance", accessible
exclusivement à l'Administrateur Système, détenteur des droits les plus étendus. Il est fondamental
pour la configuration initiale, la personnalisation continue, la supervision globale, la maintenance
technique et la garantie de la sécurité. Dès sa connexion, l'Administrateur accède à un tableau de bord
consolidé offrant une vision panoramique de l'état opérationnel et de l'activité : nombre d'utilisateurs
actifs par profil, volumétrie des données (rapports soumis, statuts), alertes potentielles (base de
données, performance serveur, processus automatisés, années académiques non clôturées). Des liens
directs vers les sections de gestion les plus utilisées sont proposés. La gestion des entités métier
(personnes) et des comptes utilisateurs est une prérogative centrale. L'Administrateur a une vue
exhaustive de toutes les entités enregistrées (étudiants, membres du personnel, enseignants) et de
tous les comptes utilisateurs. Il peut rechercher, consulter les profils et paramètres de compte, et
intervenir à tous les niveaux : modification d'informations de profil (y compris celles verrouillées pour
l'utilisateur final, sous réserve de procédures de vérification internes), gestion des statuts de compte
(activation, désactivation, blocage, archivage), réinitialisation de mots de passe, et affectation aux
groupes et types (conditionnant les permissions). L'Administrateur est chargé de la création initiale
des entités et de la génération des comptes utilisateurs pour le personnel administratif et les
enseignants, en leur attribuant les rôles et les droits d'accès adéquats. Il dispose également de
fonctionnalités d'importation en masse pour créer des entités "Étudiant" en début d'année
académique, à partir de fichiers structurés. Bien que le Responsable Scolarité ait la charge de
l'activation fonctionnelle des comptes étudiants une fois les prérequis métier remplis, l'Administrateur
conserve la capacité technique de créer ou modifier n'importe quelle entité ou compte en cas de
nécessité. La suppression physique d'un compte est une opération rare, exécutée avec une extrême
prudence, uniquement en cas d'erreur de création flagrante sans aucune donnée transactionnelle
associée, ou pour se conformer à des obligations légales strictes de suppression de données, et
toujours après une analyse d'impact rigoureuse. La configuration fine du Contrôle d'Accès Basé sur les
Rôles (RBAC) est entièrement maîtrisée par l'Administrateur. Il définit la nomenclature des types
d'utilisateurs (les grandes catégories), des groupes d'utilisateurs (qui matérialisent les rôles
fonctionnels spécifiques tels qu'Agent de Conformité ou Membre de Commission), et des niveaux
d'accès différenciés aux données. Surtout, il administre le catalogue des "traitements" (qui sont les
actions ou fonctionnalités atomiques protégées au sein du système). C'est lui qui établit les liens entre
ces traitements et les groupes d'utilisateurs, déterminant ainsi avec précision les permissions de
chaque rôle. L'ensemble des référentiels et des paramètres qui structurent le fonctionnement de

Page 6 of 17

"GestionMySoutenance" est également géré via ce module. L'Administrateur crée et gère les années
académiques, en définissant leurs dates et en spécifiant celle qui est active. Il administre toutes les
listes de valeurs standardisées : niveaux d'étude, spécialités de formation, grades et fonctions des
enseignants (y compris l'historisation de leurs changements de statut ou de poste), types de documents
(notamment les différentes sections textuelles attendues pour un rapport), ainsi que les divers statuts
qui jalonnent les workflows. Il configure les paramètres relatifs aux pénalités de retard de soutenance,
incluant les seuils et les montants ou types de pénalités. Pour chacun de ces référentiels, il dispose
d'interfaces permettant de créer, lire, mettre à jour et supprimer des entrées (CRUD), en veillant
toujours à l'intégrité référentielle. Les règles métier et les paramètres de comportement de l'application
sont également personnalisables par l'Administrateur. Il configure les échéances critiques (comme la
date butoir pour la soumission des rapports), les durées de validité des jetons de sécurité, les critères
de validation spécifiques, les seuils pour le déclenchement d'alertes automatiques, et les options
détaillées des processus internes. La personnalisation des communications sortantes est aussi de son
ressort. Il gère les modèles de documents PDF (attestations, procès-verbaux) et les modèles pour les
notifications, en définissant leur contenu (y compris l'utilisation de variables pour la personnalisation),
et le contexte de leur utilisation, y compris les notifications automatiques de changement de statut du
personnel. La supervision technique et la maintenance de la plateforme sont des aspects critiques
gérés par l'Administrateur. Il a un accès privilégié aux journaux d'audit et aux pistes d'accès pour
surveiller l'activité du système et investiguer en cas d'incident. Il peut consulter les journaux d'erreurs.
Des outils pour la maintenance de la base de données peuvent lui être proposés. Il est responsable de la
stratégie de sauvegarde et, en cas de nécessité absolue, de restauration de la base de données. Enfin,
il peut être impliqué dans le processus de déploiement des nouvelles versions ou des correctifs de
l'application. L'Administrateur Système peut, de plus, bénéficier d'outils de reporting avancés et de
tableaux de bord analytiques spécifiques à son rôle, lui permettant d'extraire des données consolidées
sur l'utilisation générale de la plateforme, la performance des différents processus, ou d'autres
indicateurs pertinents pour le pilotage stratégique et l'amélioration continue du système
"GestionMySoutenance".
La conception du Système de Génération d'Identifiants Uniques est un pilier fondamental. Dans le cadre
du développement de la plateforme "GestionMySoutenance", un besoin fondamental a été identifié pour
la gestion des clés primaires de l'ensemble des entités métier (étudiants, rapports, procès-verbaux,
etc.). Les approches standards, telles que l'auto-incrémentation numérique par la base de données ou
l'utilisation d'identifiants opaques de type UUID, ont été écartées. Le choix s'est porté sur une solution
plus évoluée répondant à une double problématique : garantir l'unicité technique et la pérennité des
identifiants à travers le système, et apporter une signification métier à ces identifiants afin de les
rendre lisibles, compréhensibles et facilement exploitables par les différents utilisateurs humains
(étudiants, personnel administratif, auditeurs). L'objectif est donc de concevoir un système capable de
générer des identifiants uniques, significatifs et basés sur une convention de nommage maîtrisée par
l'application. Il a été décidé d'adopter une convention de nommage structurée, dont le format est le
suivant : PREFIXE-ANNEE-SEQUENCE . Le PRÉFIXE est un code de trois lettres majuscules
identifiant sans ambiguïté la nature de l'entité ( RAP pour un Rapport de soutenance, ETU pour un

Page 7 of 17

dossier Étudiant (l'entité métier), ENS pour un dossier Enseignant (l'entité métier), PV_ pour un
Procès-Verbal, DOC pour un Document Généré (ex: attestation, bulletin)). L'ANNÉE est l'année
académique en cours (sur quatre chiffres, ex: 2025), qui fournit un contexte temporel immédiat. La
SÉQUENCE est un numéro séquentiel sur quatre chiffres (complété par des zéros à gauche, ex: 0001,
0015, 0128), garantissant l'unicité de l'identifiant pour une année et un type d'entité donnés. Cette
convention permet la création d'identifiants à la fois uniques et riches en information, comme RAP2025-0015 . Pour mettre en œuvre cette convention tout en assurant une robustesse à toute épreuve
(notamment face aux accès concurrents), une solution en deux parties a été retenue. Le cœur de la
solution réside dans une table de base de données dédiée, nommée sequences , dont le rôle exclusif
est de maintenir la dernière valeur de chaque compteur. Sa structure a été pensée pour gérer des
séquences annuelles : nom_sequence (clé primaire, varchar) : Le nom logique du compteur (ex:
'rapport', 'etudiant'), annee (clé primaire, year) : L'année concernée par le compteur,
valeur_actuelle (int) : Le dernier numéro utilisé pour cette séquence pour cette année. La clé
primaire composite ( nom_sequence , annee ) assure qu'un compteur est unique pour une année
donnée, permettant ainsi sa remise à zéro automatique au début de chaque nouvelle année. Toute la
logique de génération est centralisée dans une classe PHP utilitaire : IdentifiantGenerator . Ce
service est responsable de : Démarrer une transaction de base de données pour assurer l'intégrité de
l'opération. Verrouiller la ligne de la séquence concernée pour l'année en cours ( SELECT ... FOR
UPDATE ). Cette opération est cruciale pour empêcher que deux processus ne lisent et n'incrémentent
le même compteur simultanément, ce qui prévient la création de doublons. Créer la séquence pour une
nouvelle année si elle n'existe pas encore (cas du premier identifiant de l'année). Incrémenter la valeur
du compteur. Mettre à jour la nouvelle valeur en base de données. Valider la transaction et retourner
l'identifiant final, formaté selon la convention. Cette approche, bien que plus complexe à l'initialisation,
offre des avantages considérables à long terme : Lisibilité et Ergonomie (les identifiants deviennent un
langage commun, clair et facile à manipuler pour tous les utilisateurs, réduisant les erreurs de saisie et
de communication), Professionnalisme (les références affichées à l'écran et sur les documents PDF
générés sont propres, structurées et renforcent l'image de marque de l'institution), Traçabilité et Audit
(le suivi des actions et la consultation des journaux d'audit sont grandement simplifiés, chaque
identifiant portant en lui-même le contexte de l'entité qu'il désigne), Maintenabilité et Évolutivité (en
centralisant la logique dans un seul service, toute future modification de la convention de nommage ne
nécessitera d'intervenir qu'en un seul point du code, garantissant une maintenance aisée et une forte
évolutivité de l'application).
Le Système de Contrôle d'Accès Basé sur les Rôles (RBAC) est une citadelle des droits. La plateforme
"GestionMySoutenance" est un système multi-acteurs où les étudiants, le personnel administratif, les
membres de commissions et les administrateurs interagissent avec des données sensibles et des
fonctionnalités critiques. Il est donc impératif de mettre en place un système de gestion des droits à la
fois robuste, sécurisé et suffisamment flexible pour s'adapter aux évolutions des responsabilités au sein
de l'établissement. L'architecture du système de Contrôle d'Accès Basé sur les Rôles (RBAC) retenu pour
le projet, depuis sa modélisation en base de données jusqu'à son implémentation applicative en PHP,

Page 8 of 17

garantit sa performance et sa sécurité. Le modèle RBAC repose sur la collaboration de quatre tables
principales qui permettent de dissocier les utilisateurs de leurs permissions, en utilisant le "rôle" (ou
groupe) comme pivot. type_utilisateur assure une catégorisation générale des entités (Étudiant,
Enseignant, etc.) pour déterminer la structure des données métier associées à un compte.
groupe_utilisateur définit les rôles fonctionnels au sein de l'application (ex:
GRP_COMMISSION , GRP_AGENT_CONFORMITE ). C'est à ce groupe que les droits sont attribués.
Chaque utilisateur appartient à un seul groupe, qui matérialise son niveau de responsabilité.
traitement constitue le catalogue exhaustif de toutes les actions atomiques et protégées du
système (ex: TRAIT_RAPPORT_SOUMETTRE , TRAIT_COMMISSION_VOTER ). Cette granularité
permet un contrôle extrêmement fin des permissions. rattacher sert de matrice de permissions en
liant les groupes aux traitements. Une entrée dans cette table signifie qu'un rôle donné est autorisé à
effectuer une action spécifique. L'implémentation en PHP a été conçue pour être performante et
centralisée. La logique est principalement gérée par un service dédié, ServicePermissions ,
responsable de vérifier les droits de l'utilisateur connecté. Le fonctionnement initial repose sur une
mise en cache des permissions en session : lors de la connexion réussie d'un utilisateur, l'application
identifie son groupe. Le ServicePermissions interroge la base de données une seule fois pour
lister tous les traitements autorisés pour ce groupe. Cette liste de permissions est stockée dans la
variable de session $_SESSION['user_permissions'] . Pour chaque action ultérieure,
l'application vérifie la permission requise directement dans ce tableau en session, évitant ainsi des
requêtes répétées à la base de données. L'approche de mise en cache en session, bien que
performante, présente une faiblesse identifiée lors de la phase de conception : si les droits d'un groupe
sont modifiés par un administrateur, les utilisateurs de ce groupe déjà connectés conserveront leurs
anciennes permissions jusqu'à leur prochaine déconnexion. Cette latence, notamment en cas de
révocation d'un droit critique, représente un risque de sécurité inacceptable. Face à cette
problématique, il a été décidé d'opter pour une solution plus avancée et plus élégante, garantissant une
réactivité et une sécurité maximales. Le principe de la solution consiste à rendre les sessions actives
des utilisateurs "adressables" et "modifiables" par le système lui-même. Pour ce faire, le mécanisme de
stockage de session par défaut de PHP (basé sur des fichiers) est remplacé par une gestion centralisée
en base de données. L'implémentation technique implique la création d'une table sessions (incluant
session_id , session_data , et user_id pour lier chaque session active à un utilisateur
unique), le développement d'un DatabaseSessionHandler (une classe PHP personnalisée
implémentant SessionHandlerInterface pour interagir avec la nouvelle table sessions ), et
l'activation du gestionnaire (l'application est configurée pour utiliser ce nouveau gestionnaire,
centralisant toutes les sessions dans la base de données). Le mécanisme de mise à jour "Live" est le
suivant : grâce à cette nouvelle architecture, lorsqu'un administrateur modifie les permissions d'un
groupe, la logique applicative peut déclencher le processus suivant : identifier tous les utilisateurs
membres du groupe modifié ; pour chaque utilisateur, rechercher sa session active dans la table
sessions via son user_id ; lire les données de sa session, mettre à jour le tableau des permissions
avec les nouveaux droits, puis réécrire immédiatement les données modifiées dans la base de données.
Le résultat est que le changement de permission est répercuté instantanément dans la session de

Page 9 of 17

l'utilisateur concerné, sans que celui-ci ait besoin de se déconnecter et sans aucun délai de latence. Au
prochain clic, ses droits seront réévalués sur la base des informations fraîchement mises à jour. Le
système d'habilitation de "GestionMySoutenance" repose sur une architecture RBAC robuste et
éprouvée. Le choix d'implémenter une solution avancée de gestion de session en base de données pour
permettre la mise à jour des droits en temps réel, bien que techniquement exigeant, place la sécurité et
la réactivité au premier plan. Cette conception garantit que le contrôle d'accès est non seulement
flexible et granulaire, mais aussi dynamique et capable de s'adapter instantanément aux changements
de responsabilités, ce qui constitue un atout majeur pour la fiabilité de la plateforme.
La Traçabilité, Audit et Historisation des Données constituent la mémoire du système. La fiabilité et
l'intégrité d'un système d'information tel que "GestionMySoutenance" reposent sur sa capacité à
conserver une mémoire fidèle des actions et des évolutions de données au fil du temps. Cette section
détaille les deux piliers de cette mémoire système : la piste d'audit des actions critiques et
l'historisation des carrières du personnel. Les objectifs de ces fonctionnalités sont de : garantir une
traçabilité complète de toutes les opérations sensibles effectuées sur la plateforme, fournir un journal
d'audit détaillé pour des besoins de sécurité, de support technique et de conformité réglementaire, et
assurer une gestion précise du cycle de vie des carrières du personnel, permettant de reconstituer les
responsabilités à n'importe quel point dans le temps. Le système intègre un mécanisme de
journalisation centralisé, conçu pour intercepter et enregistrer de manière systématique toutes les
actions critiques. Plutôt que de disperser la logique d'audit, l'application s'appuie sur un service
AuditLogger ou un système d'événements découplé. Chaque fois qu'une opération sensible est
réalisée, un événement est émis et capturé par un "écouteur" d'audit, qui se charge de créer une entrée
détaillée. Ce mécanisme répond à la question fondamentale : "Qui a fait quoi, sur quoi, quand et depuis
où ?". La mise en œuvre s'articule autour de la table enregistrer , dont la structure est
spécifiquement conçue pour la journalisation : numero_utilisateur identifie l'auteur de l'action (le
"Qui"). id_action catégorise l'événement (le "Quoi", ex: CONNEXION_REUSSIE ,
CHANGEMENT_STATUT_RAPPORT ). date_action fournit l'horodatage précis (le "Quand").
id_entite_concernee et type_entite_concernee lient l'action à un objet métier spécifique
(le "Sur Quoi", ex: un rapport, une session). details_action (JSON) stocke des informations
contextuelles riches (le "Comment", ex: l'ancienne et la nouvelle valeur d'un champ). adresse_ip et
user_agent fournissent le contexte technique de l'action. Toutes les opérations critiques, telles que
les connexions, les modifications de statut, les votes, les validations de PV ou la génération de
documents, sont systématiquement interceptées et enregistrées via ce mécanisme, créant ainsi une
piste d'audit exhaustive et fiable. Le système traite les informations de grade et de fonction du
personnel non pas comme des données statiques, mais comme des données datées, valables pour une
période définie. Cette approche permet de reconstituer avec précision l'organigramme et les
responsabilités de l'établissement à n'importe quelle date passée. Cette historisation est réalisée grâce
à des tables de liaison dédiées qui enregistrent chaque changement comme une nouvelle entrée, plutôt
que de modifier une entrée existante. L'Historisation des Grades se fait via la table acquérir qui
associe un numero_enseignant à un id_grade à partir d'une date_acquisition spécifique.

Page 10 of 17

Chaque promotion ou changement de grade se traduit par l'ajout d'une nouvelle ligne, conservant ainsi
l'historique complet des grades obtenus. L'Historisation des Fonctions se fait via la table occuper qui
associe un numero_enseignant à une id_fonction pour une période délimitée par une
date_debut_occupation et une date_fin_occupation . Une date_fin_occupation
nulle ( NULL ) signifie que la fonction est actuellement occupée. Mettre fin à une fonction consiste à
renseigner cette date de fin, préservant ainsi l'enregistrement de la période de responsabilité. Grâce à
cette modélisation, le système peut répondre à des requêtes temporelles complexes, comme "Qui était
le responsable de la spécialité MIAGE en octobre 2022 ?", en interrogeant simplement les périodes de
validité enregistrées dans ces tables. Ensemble, la piste d'audit et l'historisation des carrières forment
l'épine dorsale de la mémoire institutionnelle de la plateforme "GestionMySoutenance". Elles
garantissent non seulement la sécurité et la traçabilité des opérations quotidiennes, mais aussi la
cohérence et la pérennité des données administratives sur le long terme, constituant un atout
indispensable pour la gouvernance et le pilotage de l'établissement.
L'Outil d'Importation de Données Avancé est l'usine à données. La gestion efficace des populations
d'entités "Étudiant" et "Enseignant", particulièrement lors des rentrées académiques, nécessite un outil
d'importation de données à la fois puissant, flexible et fiable. Pour répondre à ce besoin critique, la
plateforme "GestionMySoutenance" intègre un module d'importation avancé. Cette approche a été
préférée à un simple chargeur de fichiers pour sa capacité à gérer de grands volumes de données sans
dégrader l'expérience utilisateur et pour sa flexibilité face à des sources de données hétérogènes. Les
objectifs de cette conception sont les suivants : Flexibilité Maximale (libérer l'utilisateur de la
contrainte d'un modèle de fichier rigide en lui permettant de faire correspondre dynamiquement les
colonnes de son fichier aux champs attendus par le système), Expérience Utilisateur Intuitive (offrir un
processus guidé, interactif et réactif, qui permet la correction d'erreurs simples directement dans
l'interface, minimisant ainsi les allers-retours fastidieux), Robustesse et Scalabilité (garantir un
traitement fiable des fichiers de grande taille grâce à une architecture asynchrone, prévenant les
échecs liés aux délais d'attente du navigateur ou du serveur), Intégrité et Traçabilité (assurer une
importation de données atomique et entièrement auditée, garantissant la cohérence de la base de
données). Le workflow est conçu comme un assistant intelligent qui accompagne l'Administrateur ou le
Responsable Scolarité (RS) à chaque étape. La première phase, Téléversement et Mappage Interactif
des Données, vise à comprendre le fichier de l'utilisateur. L'utilisateur sélectionne le type d'entité à
importer (ex: "Étudiants") et téléverse son fichier de données (CSV, Excel). Aucune structure de colonne
n'est imposée à ce stade. L'interface de mappage analyse uniquement les en-têtes du fichier et
présente une interface de mappage. Cette interface affiche deux colonnes : à gauche, les noms des
colonnes extraites du fichier de l'utilisateur ; à droite, des menus déroulants contenant les champs
requis par la base de données (ex: "nom", "prenom", "email", "id_niveau_etude"). Une suggestion
intelligente tente de pré-remplir le mappage en se basant sur la similarité des noms (ex: "Courriel" sera
automatiquement associé à "email"). L'utilisateur peut ensuite valider ou ajuster manuellement chaque
correspondance. Cette étape cruciale rend l'outil adaptable à de multiples formats de fichiers sources.
La deuxième phase, Prévisualisation Dynamique et Correction en Ligne, une fois le mappage validé, le
système traite le fichier en mémoire pour présenter une prévisualisation interactive. Les données sont

Page 11 of 17

affichées dans un tableau, où chaque ligne est précédée d'une icône de statut (Valide, Avertissement,
Erreur) déterminée par des règles de validation de format, de référence et de logique métier. Pour les
erreurs de format simples (ex: une date mal formatée, une faute de frappe dans un email), le champ
concerné est directement éditable dans la grille. L'utilisateur peut corriger la valeur, et une revalidation est déclenchée instantanément pour la ligne modifiée, fournissant un retour immédiat. Cette
fonctionnalité élimine la nécessité de corriger le fichier source et de le téléverser à nouveau pour des
erreurs mineures. La troisième phase, Lancement du Traitement et Gestion Asynchrone, est là où la
robustesse de l'outil se manifeste pour les gros volumes. Toutes les opérations longues sont déléguées
à un système de file d'attente. Lorsqu'une telle action est déclenchée (par exemple, "Générer les
bulletins pour une promotion" ou "Envoyer une notification email à 200 étudiants"), la plateforme ne fait
qu'ajouter une "tâche" à cette file d'attente et répond immédiatement à l'utilisateur, qui peut continuer
à naviguer. Des processus serveurs indépendants, appelés "workers", surveillent en permanence cette
file d'attente. Dès qu'une nouvelle tâche apparaît, un worker la prend en charge et l'exécute en arrièreplan. Cela garantit que l'expérience utilisateur reste fluide et que les opérations lourdes sont traitées de
manière fiable, sans limite de temps. La quatrième phase, Notification et Rapport d'Opération Final,
une fois le traitement en arrière-plan terminé, le système clôt le processus de manière proactive. Une
notification est envoyée à l'utilisateur via la messagerie interne de la plateforme et par courrier
électronique. La notification contient un lien vers une page de rapport qui synthétise le résultat de
l'opération : nombre d'enregistrements créés avec succès, nombre d'avertissements et nombre
d'échecs. Cette page de rapport propose un lien pour télécharger un fichier contenant uniquement les
lignes qui n'ont pas pu être importées, enrichi d'une colonne expliquant la cause précise de chaque
erreur. Ce fichier est directement exploitable pour une correction et une nouvelle tentative
d'importation. Cette approche avancée transforme l'outil d'importation d'un simple chargeur de données
en un véritable assistant d'intégration. En privilégiant la flexibilité du mappage, l'interactivité de la
correction et la robustesse du traitement asynchrone, "GestionMySoutenance" se dote d'une
fonctionnalité essentielle, capable de s'adapter aux contraintes opérationnelles de l'établissement tout
en offrant une expérience utilisateur optimisée, fiable et efficace.
La Checklist de Conformité Traçable est le crible de la qualité. Le processus de validation d'un rapport
au sein de la plateforme "GestionMySoutenance" débute par une étape administrative fondamentale,
pilotée par l'Agent de Contrôle de Conformité. Avant toute évaluation académique du fond, ce dernier a
pour mission de réaliser une vérification rigoureuse de la conformité administrative et réglementaire du
rapport soumis par l'étudiant. L'objectif de cette fonctionnalité est de structurer et de standardiser
cette vérification en s'appuyant sur une checklist prédéfinie. Ce mécanisme vise à garantir :
L'Objectivité (tous les rapports sont évalués sur la base des mêmes critères standards établis par
l'établissement), La Rigueur (l'agent est guidé point par point pour n'omettre aucune vérification
essentielle), La Traçabilité (chaque décision de conformité, pour chaque critère, est enregistrée, créant
une piste d'audit claire), La Clarté de la Rétroaction (en cas de non-conformité, le retour fait à l'étudiant
est précis, constructif et basé sur les points de la checklist). Le processus est intégré à l'interface de
travail de l'Agent de Conformité et se déroule en plusieurs phases séquentielles. La première phase,
Prise en Charge du Rapport, se déroule lorsqu'un étudiant soumet son rapport, celui-ci apparaît dans le
tableau de bord de l'Agent de Conformité comme étant "en attente d'examen". En sélectionnant le

Page 12 of 17

rapport, l'agent accède à une interface dédiée qui lui présente le contenu textuel intégral du travail de
l'étudiant. La deuxième phase, Évaluation via la Checklist, se déroule parallèlement à la consultation du
rapport, l'interface affiche une grille de conformité. Cette grille liste l'ensemble des points de contrôle
standards que l'agent doit vérifier. Pour chaque critère de la liste (ex: "Respect de la page de garde",
"Présence du résumé", "Bibliographie formatée", "Validité du stage associée"), l'agent doit statuer en
choisissant une option, typiquement "Conforme" ou "Non Conforme". La troisième phase, Formalisation
de la Décision, se déroule à l'issue de son analyse, l'agent formalise sa décision globale pour le rapport :
Cas 1 : Rapport "Conforme" (si tous les critères de la checklist sont validés, l'agent déclare le rapport
comme étant "Conforme". Le système automatise alors la transmission du rapport à l'étape suivante :
l'évaluation par la commission de validation). Cas 2 : Rapport "Non Conforme" (si un ou plusieurs
critères ne sont pas respectés, l'agent doit qualifier le rapport de "Non Conforme". Cette action est
conditionnée par une obligation : il doit impérativement rédiger un commentaire précis et constructif.
Ce commentaire doit détailler chaque point de non-conformité constaté et expliquer clairement les
corrections attendues de la part de l'étudiant). La quatrième phase, Traçabilité et Boucle de
Rétroaction, se déroule lorsque la décision finale de l'agent est enregistrée et auditée, garantissant la
traçabilité de la vérification. Si le rapport a été jugé non-conforme, le système notifie l'étudiant et lui
retourne électroniquement son travail. L'étudiant peut alors consulter dans son espace personnel le
détail des points de non-conformité et les commentaires de l'agent. Après avoir apporté les corrections
nécessaires, il pourra soumettre à nouveau son rapport, qui réintégrera le circuit de validation pour une
nouvelle vérification de conformité. Le système s'appuie sur une modélisation qui sépare la définition
des critères de leur application. Une table de référence contient la liste exhaustive et standardisée de
tous les points de contrôle constituant la checklist officielle de l'établissement. Une seconde table de
liaison est utilisée pour enregistrer le résultat de chaque vérification pour chaque rapport, associant
l'identifiant du rapport, l'identifiant du critère vérifié, et le statut donné par l'agent. Cette structure
assure la pérennité et la cohérence du processus de vérification dans le temps. Cette approche de la
checklist de conformité, bien que directe, est une méthode robuste et éprouvée. Elle apporte la
structure et la rigueur indispensables à une étape administrative critique du parcours de l'étudiant. En
standardisant les critères, en traçant les décisions et en formalisant la communication, elle garantit
l'équité de traitement entre les étudiants et l'efficacité du workflow global de validation des rapports.
La Symphonie des Notes est le Système Avancé de Génération et de Gestion des Bulletins. La gestion
des résultats académiques est au cœur des processus d'un établissement d'enseignement supérieur. Le
système de "GestionMySoutenance" adopte une architecture avancée pour cette fonction, conçue pour
répondre simultanément aux exigences de contrôle de l'administration et au besoin d'autonomie et de
réactivité des étudiants. Cette approche met en place un écosystème où deux types de documents
coexistent : le Bulletin de Notes Officiel, document formel et certifié, et le Relevé de Notes Provisoire,
un outil de consultation en libre-service. La conception de ce module vise les objectifs suivants :
Efficacité Administrative (doter le Responsable Scolarité d'outils de génération en masse pour
optimiser son temps de travail), Autonomie de l'Étudiant (permettre aux étudiants d'accéder à leurs
résultats en temps réel, à tout moment, sans solliciter l'administration), Intégrité et Contrôle (garantir
l'authenticité et la traçabilité des documents officiels grâce à un processus de génération exclusif et à
un système de gestion des versions), Sécurité de la Diffusion (assurer que les documents officiels ne

Page 13 of 17

sont accessibles qu'aux destinataires légitimes via un canal sécurisé). Le bulletin officiel, qui engage la
responsabilité de l'établissement, reste sous le contrôle exclusif du RS. Le processus est cependant
optimisé pour être le plus efficace possible. La Génération en Masse et Asynchrone permet au RS de
lancer la génération des bulletins pour une promotion entière en une seule action. Le système traite
cette lourde tâche en arrière-plan, de manière asynchrone, ce qui permet au RS de continuer à travailler
sans être bloqué. Une notification lui est envoyée lorsque tous les documents ont été générés et
distribués. La Gestion des Versions et Archivage est intégrée : si une note doit être corrigée après une
première publication, le RS peut régénérer le bulletin. Le nouveau document sera estampillé comme la
version la plus récente (ex: v1.1), tandis que l'ancien sera conservé dans les archives mais clairement
marqué comme "Remplacé". Cela assure une piste d'audit complète et garantit que seule la dernière
version valide est considérée comme officielle. La Mise à Disposition est automatique : l'acte de
génération par le RS déclenche la mise à disposition automatique du PDF officiel dans l'espace
personnel de chaque étudiant concerné. L'étudiant bénéficie d'une double fonctionnalité qui lui offre à
la fois information instantanée et accès aux documents officiels. Le Relevé de Notes Provisoire en
Libre-Service est générable à tout moment et en libre-service. Ce document est produit en temps réel
à partir des données de la base. Pour prévenir toute utilisation abusive, il porte systématiquement des
marques distinctives claires : un filigrane "PROVISOIRE - DOCUMENT NON OFFICIEL" et la date/heure de
sa génération. La Consultation et Téléchargement des Bulletins Officiels se fait dans une section
distincte de son portail, intitulée "Mes Documents Officiels", l'étudiant accède à la liste de tous les
bulletins officiels générés pour lui par l'administration. Pour chaque bulletin, il peut voir la période
concernée, la date de publication par le RS et le numéro de version. Un bouton "Télécharger" lui permet
de récupérer une copie du fichier PDF officiel et authentique pour ses propres archives ou ses
démarches. Cette architecture synergique représente la meilleure synthèse possible des besoins de
chaque partie. Elle garantit le contrôle et la sécurité indispensables à l'administration grâce à la
génération centralisée et à la gestion des versions des documents officiels. Simultanément, elle offre à
l'étudiant l'autonomie et la réactivité qu'il attend, tout en réduisant la charge administrative. En
dissociant le besoin d'information (le relevé provisoire) de l'acte de certification (le bulletin officiel), le
système gagne en efficacité, en clarté et en satisfaction pour tous ses utilisateurs.
La Sentinelle des Accès est le Système de Mécanismes de Sécurité des Comptes. La sécurité des accès
et la fiabilité des informations de contact sont des piliers fondamentaux pour la confiance et le bon
fonctionnement de la plateforme "GestionMySoutenance". Pour renforcer ces aspects, deux
mécanismes complémentaires sont mis en œuvre : un processus de validation des adresses
électroniques pour garantir l'acheminement des communications, et un système de blocage de compte
temporaire pour prémunir la plateforme contre les tentatives d'accès non autorisées. La mise en place
de ces systèmes est cruciale pour maintenir la confiance des utilisateurs et protéger les données de
l'établissement. Le processus de Validation de l'Adresse Email par Jeton a pour but de confirmer que
chaque utilisateur a bien le contrôle de la boîte de réception de l'adresse email associée à son compte.
C'est une condition indispensable pour des communications fiables, notamment pour la réinitialisation
de mot de passe et l'envoi de notifications importantes. Le workflow détaillé est le suivant : le
Déclenchement du Processus se fait dès la génération d'un compte ou lors d'un changement d'adresse
email par l'utilisateur dans son profil personnel. Le statut de l'adresse email est alors positionné sur

Page 14 of 17

"non-vérifiée". La Génération et Stockage du Jeton implique que le système génère un jeton (token)
cryptographiquement sécurisé, à usage unique, et avec une durée de validité limitée (par exemple, 24
heures). Ce jeton est stocké dans la base de données, dans la colonne token_validation_email
de la table utilisateur . La date d'expiration du jeton est également enregistrée pour permettre la
vérification de sa validité temporelle. L'Envoi de l'Email de Confirmation est immédiat et automatique à
l'adresse en attente de validation. Le contenu de l'email est clair et direct, invitant l'utilisateur à cliquer
sur un lien pour confirmer l'appartenance de l'adresse email. L'Action de l'Utilisateur et Validation se
fait lorsque l'utilisateur clique sur le lien reçu. Le système reçoit la requête contenant le jeton. Le
serveur vérifie que le jeton existe, qu'il correspond à l'utilisateur et qu'il n'a pas expiré. Si toutes les
conditions sont remplies, le statut de l'email est changé à "vérifié", et le jeton
token_validation_email est immédiatement effacé de la base de données pour empêcher
toute réutilisation. En cas de non-validation, un bandeau d'information permanent peut être affiché
dans l'espace de l'utilisateur, l'invitant à consulter ses emails et lui offrant la possibilité de renvoyer le
lien de validation. La table utilisateur sera enrichie des colonnes email_valide (BOOLEAN),
token_validation_email (VARCHAR), et date_expiration_token (DATETIME). La
Protection contre les Attaques par Force Brute prévient les tentatives de connexion automatisées en
verrouillant temporairement un compte après un nombre excessif d'échecs. Le workflow détaillé est le
suivant : le Suivi des Tentatives Échouées se fait via la colonne
tentatives_connexion_echouees dans la table utilisateur , qui est incrémentée à chaque
échec de connexion consécutif. La Réinitialisation en cas de Succès se fait lorsque, dès qu'une
connexion est réussie, le compteur tentatives_connexion_echouees est immédiatement remis
à 0. L'Activation du Verrouillage se fait lorsque le système compare le compteur à un seuil défini par
l'Administrateur (par exemple, 5 tentatives). Si ce seuil est atteint, le mécanisme de blocage se
déclenche. Le Processus de Blocage du Compte implique que le système inscrit dans la colonne
compte_bloque_jusqua la date et l'heure exactes jusqu'auxquelles le compte sera inaccessible. Le
compteur tentatives_connexion_echouees est remis à 0. Un message d'erreur explicite et
rassurant est affiché à l'utilisateur. Pendant la Période de Verrouillage, à chaque nouvelle tentative de
connexion, le système vérifie compte_bloque_jusqua . Si la date actuelle est antérieure à la date de
fin du blocage, l'accès est immédiatement refusé. Une fois le délai écoulé, le champ
compte_bloque_jusqua est ignoré et le processus de connexion normal peut reprendre. La table
utilisateur gère cette logique via tentatives_connexion_echouees (TINYINT) et
compte_bloque_jusqua (DATETIME).
La Relève des Responsabilités est la Gestion de la Délégation et des Transitions de Rôles. La continuité
des processus métier et la flexibilité organisationnelle sont essentielles. Pour répondre aux réalités
opérationnelles (absences temporaires, évolutions de carrière), le système intègre des fonctionnalités
avancées de délégation et de gestion des transitions de rôles, assurant qu'aucune tâche critique ne
reste en suspens, tout en maintenant sécurité et traçabilité. La Délégation de Responsabilités
Spécifiques permet à un utilisateur de transférer des responsabilités de manière contrôlée, partielle et
temporaire. Le workflow détaillé est le suivant : l'Initiation de la Délégation se fait lorsque le délégant

Page 15 of 17

accède à une interface dédiée et initie une nouvelle délégation. La Configuration de la Délégation se
fait via un formulaire permettant de définir précisément le cadre du mandat : Bénéficiaire (sélection du
délégué), Tâches Déléguées (choix de permissions spécifiques), Périmètre (Optionnel) (restriction à un
contexte particulier), Durée (dates de début et de fin obligatoires). L'Activation et Exercice de la
Délégation se fait lorsque, une fois validée, le système accorde temporairement au délégué les droits
correspondants. L'interface du délégué affiche une notification claire. Chaque action effectuée par le
délégué est consignée dans le journal d'audit. La Fin de la Délégation se fait lorsque les permissions
additionnelles sont automatiquement et instantanément révoquées à la date de fin programmée. Le
délégant peut aussi mettre fin à la délégation de manière anticipée. La Procédure de Gestion des
Transitions de Rôles encadre les cas de départs ou de changements de fonction d'un utilisateur,
garantissant que les tâches dont il avait la charge ne deviennent pas orphelines. Le workflow détaillé
est le suivant : le Déclenchement par l'Administrateur se fait lorsque l'Administrateur modifie le statut
d'un compte utilisateur. La Détection Automatique des Tâches en Cours se fait lorsque cette action
déclenche une analyse par le système, qui identifie toutes les tâches actives et en attente
spécifiquement assignées à cet utilisateur. L'Interface de Gestion de la Transition se fait lorsque
l'Administrateur est dirigé vers un tableau de bord listant ces "tâches orphelines". La Réassignation
Manuelle et Contrôlée se fait lorsque, pour chaque tâche, l'Administrateur doit obligatoirement
désigner un remplaçant parmi les utilisateurs éligibles. La Finalisation et Notification se fait lorsque,
une fois toutes les tâches réassignées, la transition est considérée comme terminée. Les utilisateurs
nouvellement assignés reçoivent une notification. L'ensemble est enregistré dans le journal d'audit.
La Voix du Système est le Système de Notifications et Communications. Une communication efficace
est essentielle au bon déroulement des processus. Le système est doté d'un module de notification
configurable et d'une gestion du cycle de vie des communications internes, assurant que les
informations pertinentes sont acheminées de manière fiable et opportune, tout en offrant aux
utilisateurs un contrôle sur le flux de notifications. Le Catalogue des Événements et la Matrice de
Diffusion Centralisée offre à l'administration un contrôle total et granulaire sur le système de
notification. Le workflow détaillé est le suivant : le Catalogue d'Événements est un panneau de
configuration où l'Administrateur a accès à tous les événements métier susceptibles de générer une
notification. La Matrice de Diffusion permet à l'Administrateur de configurer une matrice de diffusion
pour chaque événement, en sélectionnant les Destinataires (rôles à notifier) et les Canaux (Notification
interne, Courrier électronique). Cette gestion centralisée garantit une politique de communication
cohérente et modifiable. Les Préférences de Notification Personnalisables offrent aux utilisateurs la
flexibilité d'ajuster les notifications à leurs habitudes. Le workflow détaillé est le suivant : l'Interface de
Préférences est une section dédiée dans le profil de chaque utilisateur. Les Options de
Personnalisation permettent à l'utilisateur de demander un email de résumé quotidien ou de désactiver
l'envoi par email pour les notifications secondaires. La Protection des Communications Critiques
assure qu'une liste de notifications "critiques" ne peut être désactivée. Le Cycle de Vie et l'Archivage de
la Messagerie Interne gère la performance et la clarté de la messagerie. Le workflow détaillé est le
suivant : l'Archivage Manuel par l'Utilisateur permet à un utilisateur de choisir d'archiver une
conversation, la déplaçant vers un dossier "Archives". L'Archivage Automatique par le Système est une
politique configurable par l'Administrateur (ex: conversations inactives depuis 12 mois). La Distinction

Page 16 of 17

avec la Suppression est claire : l'archivage est réversible, la suppression définitive est rare et soumise à
des droits spécifiques.
Le Moteur du Système est la Performance, Robustesse et Supervision Technique. Au-delà de ses
fonctionnalités métier, la viabilité à long terme de la plateforme "GestionMySoutenance" repose sur sa
capacité à offrir une expérience utilisateur fluide, à gérer les montées en charge et à être maintenue de
manière proactive. L'Optimisation de la Performance se fait par des Tests de Charge périodiques pour
identifier les goulots d'étranglement, et une Stratégie de Mise en Cache (Caching) utilisant des
technologies comme Redis ou Memcached pour stocker temporairement les données fréquemment
consultées. La Gestion des Tâches Asynchrones délègue les opérations longues et coûteuses. Un
Système de File d'Attente (Queue) permet d'ajouter des "tâches" qui sont ensuite traitées par des
Workers Asynchrones (processus serveurs indépendants) en arrière-plan, garantissant fluidité et
fiabilité. La Supervision (Monitoring) et l'Alerting assurent une haute disponibilité. Le Monitoring en
Temps Réel surveille les indicateurs clés de santé (CPU, RAM, temps de réponse DB). Un Système
d'Alerting envoie des alertes automatiques à l'équipe technique si des seuils critiques sont dépassés.
La Centralisation des Logs regroupe tous les journaux d'événements et d'erreurs pour un diagnostic
rapide.
L'Intelligence des Données est la Recherche Avancée et le Pilotage. Une fois collectées et sécurisées,
les données brutes sont transformées en informations actionnables. La Recherche Globale Avancée
est une barre de recherche disponible pour les utilisateurs habilités (personnel administratif, membres
de commissions) pour retrouver rapidement n'importe quelle information. Son Périmètre de Recherche
s'étend à de multiples entités (étudiants, rapports, enseignants). Le Filtrage et Affinage des résultats
se fait par des filtres contextuels (période académique, statut du rapport). Le Module de Reporting et
les Tableaux de Bord fournissent aux instances de direction et de pilotage pédagogique les indicateurs
clés de performance (KPIs). Les Tableaux de Bord Opérationnels sont destinés aux administrateurs et
responsables de service (RS, président de commission), avec des indicateurs comme le nombre de
rapports en attente. Les Tableaux de Bord Stratégiques sont destinés à la direction, agrégeant les
données sur des périodes plus longues pour analyser les tendances (taux de réussite, évolution des
pénalités). Ces données, présentées graphiquement, sont un outil précieux d'aide à la décision pour
l'amélioration continue des processus pédagogiques et administratifs.

Page 17 of 17
Module Administrateur ( GRP_ADMIN_SYS ) : Contrôle et Supervision
Absolus
Le principe fondamental de ce module est que l'Administrateur possède un accès illimité et une
capacité d'intervention totale sur chaque aspect de la plateforme. Il peut non seulement configurer le
système, mais aussi agir directement sur les processus et les données de tous les autres modules.
I. Accès et Intervention Globale (La "Vue Administrateur")
L'administrateur dispose d'une capacité unique à naviguer et à interagir avec les modules des autres
rôles, non pas en tant que simple spectateur, mais comme un opérateur disposant de droits ultimes.
1. Accès Universel aux Modules : Naviguer vers et interagir avec les tableaux de bord et les
interfaces des Étudiants, des Membres de la Commission et du Personnel Administratif.
2. Consultation Complète des Données : Visualiser n'importe quel rapport d'étudiant, à n'importe
quelle étape de son cycle de vie.
3. Visualisation des Sessions de Commission : Accéder aux détails de n'importe quelle session de
validation, y compris la liste des rapports traités et les votes individuels.
4. Consultation des Réclamations : Voir l'historique et le statut de toutes les réclamations
étudiantes.
5. Modification Directe des Entités : Forcer la modification de l'état d'un rapport (ex: le faire passer
de "Soumis" à "En correction" manuellement).
6. Intervention sur les Votes : En cas de blocage, l'administrateur peut visualiser les votes et
collaborer avec un président de session pour résoudre la situation.
7. Gestion des PV : Modifier le contenu, le statut ou le rédacteur d'un Procès-Verbal à tout moment.
8. Action au Nom d'un Utilisateur : Capacité à effectuer des actions au nom d'un autre utilisateur
(impersonation) pour des besoins de support technique ou de résolution de problèmes critiques,
avec une traçabilité renforcée.
II. Gestion des Entités Métier et des Comptes Utilisateurs (RBAC)
L'administrateur est le maître de la sécurité et des accès, gérant à la fois les données des personnes
(entités métier) et leurs accès à la plateforme (comptes utilisateurs).
9. Lister toutes les entités métier (étudiants, enseignants, personnels administratifs) et tous les
comptes utilisateurs sans restriction, avec des outils de recherche et de filtrage avancés.
Gestion des Entités Métier (Personnes)
10. Créer une entité "Étudiant" (enregistrer les informations administratives de base d'un étudiant, sans
lui créer de compte de connexion à ce stade).

Page 1 of 16

11. Créer une entité "Enseignant" (enregistrer les informations de base d'un enseignant).
12. Créer une entité "Personnel Administratif" (enregistrer les informations de base d'un membre du
personnel administratif).
13. Modifier les informations de n'importe quelle entité métier (ex: nom, prénom, date de naissance,
coordonnées).
14. Supprimer une entité métier (opération critique, avec vérification des dépendances).
Gestion des Comptes Utilisateurs (Accès à la plateforme)
15. Générer un compte utilisateur pour une entité "Étudiant" (création du login, mot de passe
temporaire, et liaison à l'entité étudiant existante).
16. Générer un compte utilisateur pour une entité "Enseignant".
17. Générer un compte utilisateur pour une entité "Personnel Administratif".
18. Générer un compte utilisateur pour une entité "Administrateur Système".
19. Modifier le login d'un compte utilisateur.
20. Modifier l'email principal d'un compte utilisateur.
21. Changer le groupe (rôle) d'un compte utilisateur.
22. Réinitialiser le mot de passe de n'importe quel compte utilisateur.
23. Activer un compte utilisateur manuellement.
24. Désactiver un compte utilisateur.
25. Bloquer un compte utilisateur pour des raisons de sécurité.
26. Archiver un compte utilisateur en fin de parcours.
27. Supprimer définitivement un compte utilisateur (opération critique, avec vérification des
dépendances).
28. Gérer l'outil d'importation en masse des entités "Étudiant" via fichier CSV/Excel (création des
entités, la génération des comptes utilisateurs se fera ensuite par le RS ou l'Admin).
29. Définir la correspondance des colonnes lors d'un import (mappage interactif).
30. Prévisualiser les données importées et corriger les erreurs en ligne avant validation.
31. Lancer le traitement asynchrone des fichiers d'importation volumineux.
32. Consulter les rapports d'importation (succès, échecs).
33. Créer, lire, mettre à jour et supprimer des Groupes d'Utilisateurs (rôles).
34. Créer, lire, mettre à jour et supprimer des Types d'Utilisateurs.
35. Créer, lire, mettre à jour et supprimer des Niveaux d'Accès aux Données.
36. Créer, lire, mettre à jour et supprimer des Traitements (permissions atomiques).
37. Assigner une permission à un groupe via la matrice de rattachement.
38. Retirer une permission d'un groupe.
39. Visualiser l'ensemble de la matrice des permissions (qui a le droit de faire quoi).
40. Gérer les transitions de rôles en réassignant les tâches orphelines lors du départ d'un employé.
41. Créer et gérer les délégations de responsabilités entre utilisateurs.
III. Configuration Intégrale du Système et des Règles Métier
L'administrateur sculpte le comportement de l'application pour l'adapter aux besoins de l'établissement.

Page 2 of 16

42. Mettre à jour les paramètres généraux du système (ex: MAX_LOGIN_ATTEMPTS ,
LOCKOUT_TIME_MINUTES , PASSWORD_MIN_LENGTH ).
43. Créer des années académiques avec leurs dates de début et de fin.
44. Modifier une année académique.
45. Supprimer une année académique (avec vérification des dépendances).
46. Définir l'année académique active, qui conditionne de nombreux processus.
47. Gérer l'intégralité des référentiels du système via des interfaces CRUD dédiées (Créer, Lire,
Mettre à Jour, Supprimer).
48. Gérer le référentiel des Niveaux d'Étude.
49. Gérer le référentiel des Spécialités de formation.
50. Gérer le référentiel des Grades des enseignants.
51. Gérer le référentiel des Fonctions du personnel (avec historisation).
52. Gérer le référentiel des Types de documents.
53. Gérer le référentiel des Statuts de rapport (et leur ordre dans le workflow).
54. Gérer le référentiel des Statuts de PV.
55. Gérer le référentiel des Statuts de conformité.
56. Gérer le référentiel des Statuts de paiement.
57. Gérer le référentiel des Statuts de pénalité.
58. Gérer le référentiel des Statuts de réclamation.
59. Gérer le référentiel des Décisions de vote pour la commission.
60. Gérer le référentiel des Unités d'Enseignement (UE).
61. Gérer le référentiel des Éléments Constitutifs d'UE (ECUE).
62. Configurer les règles des pénalités de retard (seuils, montants, progressivité).
63. Configurer les échéances critiques (ex: date butoir pour la soumission des rapports).
64. Configurer la durée de validité des jetons de sécurité (réinitialisation de mot de passe, validation
d'email).
65. Créer des modèles de documents PDF à partir de zéro.
66. Importer des modèles de documents (ex: depuis un format Word) pour une mise en page
avancée.
67. Modifier les modèles de documents PDF (attestations, bulletins, PV).
68. Gérer les modèles pour les notifications et les emails, y compris l'utilisation de variables
dynamiques.
69. Configurer la matrice de diffusion des notifications (quel événement notifie quel rôle et par quel
canal).
IV. Supervision Technique, Maintenance et Audit
L'administrateur dispose des outils pour assurer la santé technique et la sécurité de la plateforme.
70. Consulter la piste d'audit complète de toutes les actions sensibles effectuées sur la plateforme.
71. Filtrer les journaux d'audit par utilisateur, par date, par type d'action ou par entité concernée.
72. Reconstituer l'historique complet d'un rapport, d'un utilisateur ou d'un PV.

Page 3 of 16

73. Consulter les journaux d'erreurs de l'application (PHP) et du serveur.
74. Purger les anciens journaux pour la maintenance.
75. Superviser la file d'attente des tâches asynchrones ( queue ).
76. Visualiser les tâches en attente, en cours, réussies ou échouées.
77. Forcer la ré-exécution d'une tâche qui a échoué.
78. Consulter le payload (données) d'une tâche pour le débogage.
79. Gérer la stratégie de sauvegarde de la base de données.
80. Lancer une procédure de restauration en cas d'incident majeur.
81. Accéder aux outils de maintenance de la base de données.
82. Archiver les anciennes données (comme les PV) pour maintenir les performances.
83. Déployer les mises à jour et les correctifs de l'application.
V. Pilotage Stratégique, Reporting et Exports
L'administrateur peut extraire de la valeur des données collectées.
84. Générer des rapports sur les taux de validation des soutenances.
85. Analyser les délais moyens de traitement par étape de workflow.
86. Générer des statistiques sur l'utilisation de la plateforme.
87. Créer des rapports personnalisés pour répondre à des besoins spécifiques de la direction.
88. Accéder à des tableaux de bord analytiques pour le pilotage stratégique.
89. Exporter n'importe quelle liste de données au format PDF.
90. Exporter n'importe quelle liste de données au format CSV.
91. Filtrer les rapports par année académique ou autres critères.
92. Configurer des alertes basées sur des seuils de performance (KPIs).
93. Analyser les tendances d'une année sur l'autre (ex: évolution des pénalités).
94. Extraire des statistiques sur les thèmes de mémoires.
VI. Gestion de l'Environnement de l'Application
L'administrateur est le seul à pouvoir gérer la configuration profonde de l'environnement de
l'application.
95. Gestion des Variables d'Environnement : Il est responsable de la configuration des fichiers .env
en production.
96. Configuration SMTP : Il configure les paramètres du serveur d'envoi d'emails.
97. Configuration des Chemins de Stockage : Il définit les chemins où les fichiers téléversés sont
stockés.
98. Configuration de la Durée des Sessions : Il peut ajuster la durée de vie des sessions utilisateurs.
99. Gestion des Dépendances : Il supervise les dépendances du projet via composer.json .
100. Configuration du Serveur Web : Il peut ajuster les fichiers de configuration de Nginx ou Apache.

Page 4 of 16

101. Configuration PHP : Il peut modifier les paramètres du php.ini pour optimiser la performance
ou les limites (upload, mémoire).
102. Gestion du Schéma de la Base de Données : Il est responsable de l'application des migrations et
des mises à jour du schéma SQL.
103. Initialisation des Données : Il peut lancer des scripts de seeding (comme seeds.php ) pour
peupler la base avec des données initiales.
104. Configuration des Tâches Planifiées (CRON) : Il met en place les tâches CRON sur le serveur pour
les opérations automatiques (ex: détection des pénalités, basculement d'année académique).

Module Étudiant ( GRP_ETUDIANT )
I. Accès à la Plateforme et Tableau de Bord
1. Se connecter à la plateforme avec un identifiant et un mot de passe.
2. Utiliser la fonction "Mot de passe oublié" pour réinitialiser son mot de passe via email.
3. Valider son adresse email en cliquant sur un lien contenant un jeton sécurisé.
4. Recevoir une notification claire si le compte est temporairement bloqué après trop de tentatives
de connexion.
5. Accéder à un tableau de bord d'accueil personnalisé après connexion.
6. Visualiser un résumé synthétique de l'état d'avancement de son rapport sur le tableau de bord.
7. Voir les notifications importantes et les actions requises directement sur le tableau de bord.
8. Être informé que l'accès à la soumission de rapport est conditionné par la validation
administrative (paiement à jour, etc.).
9. Être informé que l'accès est conditionné par l'enregistrement et la validation de son stage.
10. Être informé que l'accès est conditionné par la régularisation de toute pénalité de retard.
11. Voir un bandeau d'information permanent tant que son adresse email principale n'a pas été
vérifiée.
12. Bénéficier d'une expérience utilisateur claire, simple et rassurante.
13. Se déconnecter de la plateforme de manière sécurisée.
II. Gestion du Profil Personnel et Sécurité
14. Consulter ses informations personnelles (nom, prénom, date de naissance, etc.).
15. Mettre à jour son numéro de téléphone personnel.
16. Mettre à jour son adresse email de contact secondaire.
17. Mettre à jour son adresse postale.
18. Mettre à jour ses contacts d'urgence.
19. Télécharger et modifier sa photo de profil.
20. Modifier son propre mot de passe depuis son profil.
21. Activer l'authentification à deux facteurs (2FA) pour son compte.
22. Visualiser un QR code et une clé secrète pour configurer son application d'authentification.

Page 5 of 16

23. Confirmer l'activation de la 2FA en saisissant un code TOTP valide.
24. Désactiver l'authentification à deux facteurs pour son compte.
25. Gérer ses préférences de notification (ex: choisir entre emails instantanés ou résumé quotidien).
26. Désactiver sélectivement les notifications par email pour les événements jugés secondaires.
27. Comprendre que les notifications "critiques" (sécurité, corrections) ne peuvent pas être
désactivées.
III. Processus de Rédaction du Rapport
28. Initialiser un nouveau rapport de stage à partir d'une page blanche pour une liberté totale.
29. Choisir d'initialiser son rapport à partir d'une bibliothèque de modèles pré-formatés.
30. Utiliser une structure de rapport prédéfinie avec les sections académiques attendues (résumé,
introduction, etc.).
31. Utiliser un éditeur de texte riche (WYSIWYG) pour la rédaction, similaire à un traitement de texte
moderne.
32. Mettre en forme son texte (gras, italique, etc.).
33. Créer des listes à puces ou numérotées.
34. Structurer ses idées avec des titres et sous-titres hiérarchisés.
35. Rédiger le contenu du rapport section par section directement en ligne.
36. Bénéficier d'un mécanisme de sauvegarde automatique et transparente pour ne perdre aucune
donnée.
37. Sauvegarder manuellement le rapport à l'état de "brouillon".
38. Travailler sur son rapport par étapes et y revenir autant de fois que nécessaire avant soumission.
39. Saisir les métadonnées de son rapport.
40. Saisir le titre précis du rapport.
41. Saisir le thème principal de l'étude.
42. Saisir une estimation du nombre de pages.
IV. Soumission du Rapport et Suivi du Workflow
43. Procéder à la soumission formelle du rapport via une action dédiée.
44. Comprendre que l'action de soumission est significative et verrouille le contenu en lecture seule.
45. Être notifié automatiquement par le système, qui accuse réception du travail soumis.
46. Être informé que le rapport est désormais transmis au service de Contrôle de Conformité.
47. Être soumis à la règle d'un seul rapport soumis par stage ou période académique (sauf
autorisation).
48. Suivre pas à pas l'évolution de son dossier après soumission.
49. Visualiser le parcours de validation via une ligne de temps verticale et graphique ("Stepper").
50. Voir clairement les étapes déjà terminées, avec une icône de validation et la date de
franchissement.
51. Identifier instantanément l'étape actuelle du dossier, mise en exergue visuellement.
52. Consulter les étapes futures pour connaître les jalons à venir.

Page 6 of 16

53. Lire des messages explicatifs rassurants pour les statuts d'attente (ex: "En Commission, aucune
action requise de votre part").
54. Être notifié lorsque le rapport est transmis à la commission de validation après l'étape de
conformité.
V. Gestion des Corrections et de la Non-Validation
55. Être notifié si le rapport est jugé "Non Conforme" par le service administratif.
56. Accéder aux commentaires précis et détaillés de l'évaluateur (Agent de Conformité ou
Commission).
57. Voir l'interface d'édition de son rapport se déverrouiller automatiquement pour y apporter les
corrections.
58. Rédiger une note explicative obligatoire résumant les corrections apportées, pour faciliter le
travail de ré-évaluation.
59. Re-soumettre son rapport corrigé, qui réintègre alors le circuit de validation.
60. Avoir une traçabilité complète de chaque cycle de correction dans son historique.
61. Recevoir une notification claire et les motifs détaillés en cas de non-validation définitive par la
commission.
62. Voir sa fonctionnalité de soumission suspendue temporairement après une non-validation
définitive.
63. Être guidé pour suivre la procédure administrative d'enregistrement d'un nouveau stage si
nécessaire.
64. Voir son accès à la soumission d'un nouveau rapport réactivé par le RS après confirmation du
nouveau stage.
65. Avoir la possibilité, si la commission l'autorise, de reprendre son rapport actuel pour des
corrections substantielles sans changer de stage.
VI. Accès aux Documents Officiels et Administratifs
66. Accéder à une section dédiée à ses documents officiels.
67. Pouvoir générer à tout moment et en libre-service un relevé de notes provisoire.
68. Voir que le relevé provisoire est clairement identifié par un filigrane "PROVISOIRE - DOCUMENT
NON OFFICIEL".
69. Voir que le relevé provisoire est horodaté pour prévenir toute utilisation abusive.
70. Accéder à la liste de tous les bulletins de notes officiels publiés par l'administration.
71. Consulter la période et la date de publication de chaque bulletin officiel.
72. Voir le numéro de version de chaque bulletin officiel (en cas de correction par l'administration).
73. Télécharger une copie du fichier PDF officiel et authentique de ses bulletins.
74. Recevoir le Procès-Verbal (PV) de validation de son rapport directement dans son espace
personnel.
75. Consulter d'autres documents administratifs générés par le RS (attestations de scolarité, reçus,
etc.).

Page 7 of 16

VII. Communication et Support
76. Accéder à une section "Ressources & Aide".
77. Consulter des guides méthodologiques pour la rédaction de rapports.
78. Visualiser des exemples de structure de rapport.
79. Lire les critères d'évaluation précis qui seront appliqués par la commission.
80. Consulter une Foire Aux Questions (FAQ) pour trouver des réponses rapides.
81. Trouver facilement les coordonnées des différents services de support (technique, scolarité,
conseillers).
82. Utiliser un système de réclamations structuré pour toute question ou problème.
83. Soumettre une nouvelle réclamation via une interface dédiée.
84. Catégoriser sa réclamation pour l'adresser au bon service (problème d'accès, statut du rapport,
etc.).
85. Fournir une description détaillée de sa situation.
86. Suivre l'évolution du traitement de sa réclamation.
87. Consulter les réponses apportées par les services compétents.
88. Utiliser le canal de réclamation pour initier une demande de reprise de processus (ex: nouveau
stage).
89. Recevoir des notifications régulières par courrier électronique.
90. Recevoir des notifications directement dans son espace personnel sur la plateforme.
91. Être tenu informé de toutes les étapes importantes de son parcours.
92. Être alerté de toutes les actions requises de sa part.
93. Pouvoir archiver manuellement les conversations dans la messagerie interne.
94. Être informé que les conversations inactives sont archivées automatiquement par le système.
95. Télécharger le PDF de son propre rapport après qu'il a été généré pour soumission.
96. Visualiser les commentaires des évaluateurs directement dans l'interface de correction.
97. Accéder à son profil pour modifier ses préférences.
98. Visualiser le nom du ou des directeurs de mémoire désignés par la commission.
99. Avoir la certitude que toutes ses actions sur la plateforme sont tracées de manière rigoureuse.
100. Être notifié de la clôture de son cycle de soumission une fois le rapport validé définitivement.
101. Avoir accès à une expérience utilisateur conviviale pour le processus de soutenance.

Module Commission
Cette section décrit le socle de base des fonctionnalités accessibles à toute personne agissant en tant
que membre d'une commission.
I. Fonctionnalités Communes à Tous les Membres (Président inclus)
A. Accès et Tableau de Bord

Page 8 of 16

1. Se connecter à la plateforme avec ses identifiants personnels.
2. Accéder à un tableau de bord dédié à l'activité de la commission.
3. Visualiser une liste personnelle des rapports en attente de son vote.
4. Visualiser la liste des Procès-Verbaux (PV) en attente de son approbation.
5. Recevoir des notifications pour les nouvelles sessions, les rappels de vote et les PV à valider.
6. Consulter son historique personnel d'activités (votes émis, sessions passées).
7. Accéder aux profils des étudiants et des autres enseignants impliqués dans les rapports assignés.
B. Évaluation et Vote
8. Accéder aux rapports qui lui sont assignés pour évaluation.
9. Consulter en ligne le contenu textuel intégral de chaque section du rapport.
10. Consulter les informations contextuelles de l'étudiant (parcours académique, etc.).
11. Exprimer son avis via un système de vote électronique formel.
12. Choisir une décision parmi une liste d'options prédéfinies (ex: "Approuvé", "Refusé", "Approuvé
sous réserve").
13. Rédiger un commentaire circonstancié pour justifier son vote, ce qui est obligatoire pour toute
décision autre qu'une approbation simple.
14. Voir le numéro du tour de scrutin en cours pour un rapport donné.
15. Être empêché par le système de voter plus d'une fois pour un même rapport lors d'un même tour
de scrutin.
C. Processus Collaboratif du Procès-Verbal (PV)
16. Prendre l'initiative de la rédaction d'un PV après la clôture d'une session (le premier à cliquer
devient le "propriétaire-rédacteur").
17. Utiliser un éditeur de texte riche pour compléter les sections narratives du PV.
18. Consulter un projet de PV soumis à la validation par un autre membre.
19. Approuver formellement un projet de PV.
20. Demander une modification sur un projet de PV, en fournissant un commentaire obligatoire pour
justifier sa demande.
D. Communication
21. Utiliser la messagerie interne pour communiquer de manière sécurisée avec les autres membres.
22. Créer des conversations de groupe pour discuter de cas spécifiques.

II. Fonctionnalités Spécifiques au Président de Session
Le Président de Session dispose de toutes les fonctionnalités d'un membre, augmentées de pouvoirs
étendus de gestion, de pilotage et d'arbitrage pour garantir le bon déroulement des évaluations.

Page 9 of 16

E. Pilotage et Gestion des Sessions de Validation
23. Créer une nouvelle session de validation pour organiser le travail.
24. Définir un nom/libellé pour la session.
25. Définir les dates de début et de fin prévisionnelle de la session.
26. Choisir le mode de la session (présentiel, en ligne, hybride).
27. Composer la session en y ajoutant des rapports depuis la liste des rapports éligibles.
28. Retirer des rapports d'une session avant son démarrage.
29. Consulter la liste des membres affectés à la session.
30. Gérer les membres suppléants en cas d'absence.
31. Définir le nombre de votants requis pour atteindre le consensus pour cette session spécifique.
32. Démarrer la session, ce qui verrouille sa composition et notifie les membres.
33. Prolonger la date de fin d'une session en cours si nécessaire.
34. Clôturer la session une fois toutes les délibérations terminées.
35. Envoyer des convocations et des rappels manuels aux membres.
F. Orchestration des Délibérations et Arbitrage des Votes
36. Suivre en temps réel l'avancement des votes pour chaque rapport de la session.
37. Visualiser le décompte des votes et identifier les divergences.
38. Être notifié automatiquement en cas de désaccord (non-unanimité) sur un rapport.
39. Analyser les commentaires de chaque votant pour comprendre les points de blocage.
40. Lancer un nouveau tour de vote pour un rapport, réinitialisant ainsi le processus de vote pour les
membres.
41. Retirer un rapport d'une session si une délibération plus approfondie ou hors-ligne est
nécessaire.
42. Initier et superviser le workflow simplifié pour les rapports "Approuvés sous réserve".
43. Être le seul validateur des corrections mineures soumises par l'étudiant dans ce cas de figure.
G. Responsabilité et Gestion des Procès-Verbaux (PV)
44. Avoir une vue d'ensemble de tous les PV liés à ses sessions.
45. Déléguer la responsabilité de la rédaction d'un PV à un autre membre si nécessaire.
46. Superviser le circuit d'approbation collégiale du PV.
47. Être alerté si un PV est bloqué en attente d'approbation après la date limite.
48. Avoir le pouvoir exceptionnel de finaliser le processus en cas de blocage :
49.
Effectuer une "Approbation par Substitution" au nom d'un membre non répondant, avec
justification obligatoire.
50.
Forcer une "Validation avec Quorum" si les règlements de l'établissement le permettent.

Page 10 of 16

51. Envoyer manuellement le PDF final du PV à des parties prenantes externes (ex: direction
pédagogique).
H. Formalisation Post-Validation (Rôle Final)
52. Une fois qu'un rapport est définitivement validé par la commission, formaliser la désignation du
directeur de mémoire.
53. Accéder à la liste des enseignants pour choisir le directeur le plus pertinent en fonction de la
spécialité et de la charge de travail.
54. Valider cette assignation dans le système, ce qui notifie officiellement l'enseignant et l'étudiant.

III. Liste Détaillée des Micro-Fonctionnalités (Pour Exhaustivité)
55. Consulter le statut de chaque rapport (ex: "En attente de vote", "En délibération", "Décision finale").
56. Filtrer la liste des rapports par session ou par statut.
57. Trier la liste des rapports par date de soumission ou par nom d'étudiant.
58. Accéder aux informations fournies avec le rapport de l'étudiant.
59. Voir une icône ou un indicateur visuel sur les rapports où l'on a déjà voté.
60. Accéder à l'interface de vote directement depuis le tableau de bord.
61. Visualiser le nombre de tours de vote déjà effectués pour un rapport.
62. Le système empêche le président de clôturer une session si un rapport est encore
"EN_DELIBERATION".
63. Le système pré-remplit le PV avec la liste des membres présents/votants.
64. Le système agrège automatiquement tous les commentaires de vote dans le projet de PV.
65. Pouvoir modifier son propre vote tant que le tour de scrutin n'est pas terminé.
66. Le statut du rapport passe automatiquement à RAP_VALID ou RAP_REFUSE après un vote
unanime.
67. Recevoir une notification de confirmation après avoir soumis son propre vote.
68. Recevoir une notification quand un rapport qu'on a évalué atteint une décision finale.
69. Recevoir une notification quand un PV qu'on doit approuver est modifié et soumis à nouveau.
70. Le champ de commentaire pour le rejet d'un PV est rendu obligatoire par l'interface.
71. Consulter la date et l'heure de chaque vote soumis par les autres membres (si les règles le
permettent).
72. (Président) Voir la liste des membres n'ayant pas encore voté pour une session.
73. (Président) Envoyer un rappel de vote ciblé à un ou plusieurs membres spécifiques.
74. (Président) Modifier les propriétés d'une session (nom, dates) tant qu'elle n'est pas démarrée.
75. (Président) Assigner un rapporteur spécifique pour un rapport au sein de la session.
76. (Président) Consulter les statistiques de la session (nombre de rapports traités, temps moyen de
vote).
77. (Président) Avoir un accès en lecture seule à tous les rapports de l'établissement, même ceux hors
de ses sessions, pour consultation.

Page 11 of 16

78. (Président) Visualiser un log des événements clés d'une session (création, démarrage, ajout de
rapport, clôture).
79. Le système vérifie que le "propriétaire-rédacteur" d'un PV est bien membre de la session
concernée.
80. La délégation de rédaction de PV n'est possible qu'à un autre membre de la même commission.
81. L'interface affiche clairement "Rédigé par [Nom]" et "En attente d'approbation de [Liste des
noms]" sur un PV.
82. Le contenu d'un PV validé est verrouillé et ne peut plus être modifié, seulement consulté.
83. Recevoir une notification finale lorsque le PV a été approuvé par tous et diffusé.
84. Pouvoir ajouter des points à l'ordre du jour ou des remarques générales dans une section "Divers"
du PV.
85. Le système enregistre la date et l'heure de chaque approbation de PV.
86. Le système enregistre qui a demandé une modification sur un PV et son commentaire.
87. Le président peut voir l'historique des versions d'un PV s'il a subi plusieurs cycles de correction.
88. Accéder à un guide ou une aide contextuelle expliquant le processus de vote et de validation.
89. L'interface de vote peut afficher une "note de conformité" si l'agent de conformité en a laissé une.
90. Visualiser le pourcentage de progression des votes pour une session.
91. (Président) Avoir la possibilité de créer des sessions "privées" ou "publiques" au sein de la
commission.
92. (Président) Dupliquer la configuration d'une session passée pour en créer une nouvelle
rapidement.
93. (Président) Voir la charge de travail de chaque membre (nombre de rapports assignés).
94. Le système empêche d'ajouter un rapport déjà assigné à une autre session active.
95. Le système affiche une alerte de confirmation avant de lancer un nouveau tour de vote.
96. Le système affiche une alerte de confirmation avant de clôturer définitivement une session.
97. Un membre peut se récuser d'un vote en laissant un commentaire, ce qui alerte le président.
98. Le vote est horodaté de manière sécurisée côté serveur pour garantir l'intégrité.
99. Le PV final généré en PDF inclut une page de garde standardisée avec les informations de la
session.
100. Le PV PDF peut inclure une section "Signatures" listant les membres approbateurs.

Module Personnel Administratif
Le Module Personnel Administratif est un pilier opérationnel de la plateforme, avec des responsabilités
distinctes mais complémentaires pour l'Agent de Contrôle de Conformité et le Responsable Scolarité
(RS).
I. Fonctionnalités de l'Agent de Contrôle de Conformité ( GRP_AGENT_CONFORMITE )
Ce rôle est spécialisé dans la première étape de vérification administrative et réglementaire des
rapports soumis par les étudiants. L'objectif est d'assurer que le document respecte les standards de

Page 12 of 16

l'établissement avant d'être transmis pour une évaluation académique.
A. Tableau de Bord et Interface de Travail
1. Se connecter à la plateforme avec ses identifiants de personnel administratif.
2. Accéder à un tableau de bord optimisé pour la tâche de vérification.
3. Visualiser une liste claire des rapports en attente de son examen.
4. Voir les rapports classés par ordre de soumission pour un traitement équitable.
5. Consulter l'historique des vérifications qu'il a déjà effectuées.
6. Filtrer la liste des rapports (par étudiant, par date, par statut).
7. Recevoir des notifications lorsqu'un nouveau rapport est soumis et prêt pour vérification.
8. Sélectionner un rapport de la liste pour accéder à une vue détaillée.
9. Disposer d'une interface de travail entièrement en ligne pour effectuer les vérifications.
B. Processus de Vérification de la Conformité
10. Accéder au contenu textuel intégral de chaque section du rapport soumis.
11. Consulter toutes les métadonnées saisies par l'étudiant (titre, thème, nombre de pages).
12. Visualiser les informations d'identification et d'inscription de l'étudiant associé au rapport.
13. Vérifier que la situation de scolarité de l'étudiant est à jour.
14. Confirmer que le stage associé au rapport a bien été enregistré et validé par le RS.
15. Utiliser une grille de critères de conformité (checklist) standardisée par l'établissement pour
guider son évaluation.
16. Valider la conformité de la page de garde du rapport.
17. Vérifier la présence effective du résumé (abstract).
18. S'assurer que la bibliographie est correctement formatée selon les consignes.
19. Vérifier la complétude générale du dossier soumis.
20. Valider le respect des consignes de présentation de base.
21. Statuer sur la conformité de chaque critère de la checklist (Conforme, Non Conforme, Non
Applicable).
22. Enregistrer le résultat de chaque vérification de critère pour une traçabilité complète.
C. Décision et Communication
23. Rendre une décision finale sur la conformité globale du rapport.
24. Qualifier un rapport de "Conforme" si tous les critères sont respectés.
25. Comprendre que la qualification "Conforme" déclenche la transmission automatique du rapport à
la commission de validation.
26. Qualifier un rapport de "Non Conforme" si un ou plusieurs critères ne sont pas respectés.
27. Avoir l'obligation de rédiger un commentaire précis et constructif en cas de non-conformité.
28. Détailler dans le commentaire chaque point de non-conformité constaté.
29. Expliquer clairement dans le commentaire les corrections attendues de la part de l'étudiant.

Page 13 of 16

30. Comprendre que ce retour est communiqué à l'étudiant pour qu'il puisse amender son travail.
31. Être notifié lorsqu'un étudiant a re-soumis un rapport après correction.
II. Fonctionnalités du Responsable Scolarité (RS) ( GRP_RS )
Le RS joue un rôle pivot et dispose de droits étendus pour gérer le parcours administratif complet de
l'étudiant, de son inscription à la finalisation de sa soutenance.
D. Tableau de Bord et Vue d'Ensemble
32. Accéder à une interface personnalisée qui met en exergue les tâches prioritaires.
33. Visualiser la liste des étudiants dont le dossier est complet et qui sont éligibles à l'activation de
leur compte.
34. Suivre les nouvelles inscriptions et les paiements récents.
35. Être alerté des nouveaux enregistrements de stage à valider.
36. Voir la liste des réclamations étudiantes qui nécessitent son intervention.
37. Avoir une vue sur les étudiants ayant des pénalités à régulariser.
E. Gestion des Accès Étudiants à la Plateforme
38. Détenir la responsabilité fondamentale d'activer l'accès fonctionnel d'une entité "Étudiant" à
"Gestion MySoutenance" (générer son compte utilisateur).
39. Utiliser une interface dédiée listant les dossiers d'entités "Étudiant" en attente de création de
compte.
40. Consulter une "checklist" visuelle validant chaque prérequis pour un étudiant.
41. Vérifier que la situation de scolarité de l'étudiant est en règle pour l'année académique.
42. Confirmer que les frais d'inscription ont été acquittés et enregistrés.
43. Valider la réalisation et l'authenticité d'un stage en lien avec le cursus, en s'appuyant sur les
informations fournies par l'étudiant.
44. Activer le compte d'un étudiant via une action dédiée (ex: un bouton "Activer") une fois tous les
prérequis remplis.
45. Comprendre que son action d'activation déclenche l'envoi de ses identifiants à l'étudiant.
46. Gérer l'activation par lots, en sélectionnant plusieurs étudiants éligibles et en activant en une
seule action.
47. L'interface empêche la sélection (case à cocher grisée) d'un étudiant si un de ses prérequis n'est
pas rempli.
48. Superviser et valider les informations d'un nouveau stage pour un étudiant qui doit se réorienter
après un refus de la commission.
49. Réactiver l'accès à la soumission pour cet étudiant une fois le nouveau stage validé.
F. Gestion des Dossiers Académiques
50. Enregistrer les inscriptions administratives et pédagogiques annuelles des étudiants.

Page 14 of 16

51. Associer chaque inscription à un niveau d'étude et au montant des frais dus.
52. Actualiser le statut de paiement, une information cruciale pour l'activation du compte.
53. Enregistrer les décisions de passage en fin de cycle (ex: admis, redoublant).
54. Avoir la compétence exclusive pour la saisie et la gestion des notes des étudiants sur la
plateforme.
55. Enregistrer, matière par matière ou module par module, les résultats obtenus par chaque
étudiant.
56. S'assurer de l'exactitude des notes par rapport aux relevés officiels et PV d'examen.
57. Consolider et valider l'ensemble des notes pour une période académique.
58. Modifier ou corriger une note si nécessaire, avec une justification.
59. Enregistrer les informations détaillées d'un stage (entreprise, dates, sujet, tuteur).
60. Modifier les informations d'un stage si besoin.
G. Gestion des Pénalités de Retard
61. Être l'interlocuteur principal de l'étudiant pour la régularisation de ses pénalités.
62. Disposer d'une interface pour visualiser les étudiants ayant des pénalités dues ( PEN_DUE ).
63. Utiliser son interface pour mettre à jour manuellement le statut d'une pénalité de "Due" à "Réglée"
( PEN_REGLEE ) après avoir reçu la confirmation du paiement ou de la régularisation
administrative.
64. Comprendre que cette action de mise à jour est le déclencheur qui rend l'étudiant à nouveau
éligible à la création de son compte ou à la soumission de son rapport.
65. Consulter l'historique des pénalités (création, motif, date de régularisation) pour un étudiant.
H. Génération de Documents Administratifs
66. Générer en masse les bulletins de notes individuels pour une promotion entière en une seule
action.
67. Comprendre que cette génération s'exécute en tâche de fond (asynchrone) pour ne pas bloquer
son interface.
68. Générer des attestations de scolarité au format PDF pour les étudiants qui en font la demande.
69. Générer des reçus de paiement au format PDF.
70. Gérer les versions des documents : pouvoir régénérer un bulletin corrigé qui sera estampillé
comme une nouvelle version, tandis que l'ancien est archivé mais marqué comme "Remplacé".
71. Savoir que la génération d'un document officiel par ses soins déclenche sa mise à disposition
automatique dans l'espace de l'étudiant.
I. Traitement des Réclamations Étudiantes
72. Être le principal interlocuteur pour les réclamations liées aux aspects administratifs.
73. Recevoir et analyser les demandes des étudiants concernant des problèmes d'inscription ou de
statut.

Page 15 of 16

74. Traiter les questions sur le statut du stage ou des pénalités.
75. Apporter des réponses aux étudiants via la plateforme et enregistrer les actions entreprises.
76. Assigner une réclamation à un autre service ou agent si elle ne relève pas de sa compétence.
77. Changer le statut d'une réclamation (ex: "En cours", "Résolue", "Clôturée").
J. Fonctionnalités Communes de la Plateforme
78. Gérer son propre profil utilisateur.
79. Utiliser la messagerie interne pour communiquer avec les étudiants, les enseignants ou d'autres
membres du personnel.
80. Accéder aux profils des étudiants pour consulter leurs informations complètes.
81. Accéder aux profils des enseignants.
82. Consulter la liste des rapports soumis, même après vérification, pour avoir une vue d'ensemble.
83. Exporter des listes (étudiants, inscriptions) au format CSV ou PDF.
84. Recevoir des notifications système pertinentes pour son rôle (ex: nouveau stage à valider,
réclamation reçue, fin d'une session de commission).
85. Accéder à l'historique des actions qu'il a personnellement effectuées sur la plateforme.
86. Avoir une vue sur les décisions finales de la commission pour chaque rapport.
87. Rechercher un étudiant par son nom ou son matricule.
88. Consulter les notes et moyennes d'un étudiant sur plusieurs années académiques.
89. Enregistrer des informations au dossier administratif d'un étudiant (justificatifs, etc.).
90. Vérifier la validité des informations de stage fournies avant de valider le stage.
91. Accéder à l'annuaire des entreprises partenaires pour l'enregistrement des stages.
92. Modifier les informations d'une entreprise (une fois qu'elle a été ajoutée implicitement via un
enregistrement de stage).
93. Gérer les informations des tuteurs en entreprise.
94. Consulter le planning général des soutenances.
95. Visualiser la charge de travail des directeurs de mémoire.
96. Enregistrer une dispense pour un étudiant.
97. Accéder aux ressources et à la documentation interne de la plateforme.
98. Gérer les cas de reprise de processus impliquant un nouveau stage.
99. Valider que le paiement des pénalités a été effectué avant de marquer la pénalité comme réglée.
100. Communiquer directement avec l'Agent de Conformité via la messagerie pour clarifier un point sur
un dossier.
101. Consulter le PV de validation final d'un rapport pour archivage.
102. Le système audite rigoureusement toutes ses actions (activation de compte, validation de stage,
régularisation de pénalité).

Page 16 of 16





## Product Requirements Document
Le présent document, dans sa conception même, s'inscrit comme la pierre angulaire de la vision et des exigences fonctionnelles et non-fonctionnelles qui animent le développement de "GestionMySoutenance", une odyssée numérique au cœur de l'excellence académique. Il vise à transcrire, avec une précision chirurgicale et une fluidité narrative, l'intégralité des aspirations et des spécifications techniques de cette plateforme web intégrée, sans recourir aux segmentations formelles habituelles de chapitres ou de parties.

**Introduction : "GestionMySoutenance" – L'Écosystème Numérique de l'Excellence Académique**
L'ambition première de "GestionMySoutenance" est de transformer radicalement la gestion des parcours académiques, et plus spécifiquement l'orchestration des processus de soutenance, en un ballet harmonieux de transparence, d'efficacité et de conformité. Le projet est né de l'exigence pressante de numériser ces flux et de les sublimer, pour ainsi forger l'épine dorsale numérique d'une institution, tissant des liens indéfectibles entre ses acteurs fondamentaux : l'étudiant, la commission pédagogique, le personnel administratif, et l'administrateur système. Notre quête est d'atteindre un écosystème où chaque jalon du cheminement, de l'impulsion initiale de soumission du rapport à sa validation formelle, est empreint d'une clarté cristalline et d'une traçabilité inaltérable. Le périmètre fonctionnel englobe l'intégralité du cycle de vie du rapport de soutenance, depuis sa rédaction et sa soumission par l'étudiant jusqu'à sa validation par la commission, en passant par les étapes de contrôle administratif et de gestion des pénalités, ainsi que l'archivage et la production de documents officiels. Le public cible de cette plateforme est intrinsèquement multidisciplinaire, incluant les étudiants de Master 2, le corps enseignant impliqué dans les commissions de validation et l'encadrement des mémoires, l'ensemble du personnel administratif (notamment l'Agent de Contrôle de Conformité et le Responsable Scolarité), et les administrateurs système garants de la performance et de la sécurité de l'infrastructure.

**Modélisation des Rôles et Interactions des Acteurs**
Au sein de cette architecture, la temporalité se révèle être le fil d'Ariane, structurant l'ensemble des opérations. L'année académique active est le pivot central qui conditionne une myriade d'interactions et grave dans le marbre numérique l'historique précis des données et des rôles. Le système excelle également dans l'art de consigner les métamorphoses professionnelles de son personnel : les transitions de grade ou de responsabilités pour un enseignant ou un membre du personnel administratif sont scrupuleusement datées et enregistrées, assurant une identification limpide des responsabilités passées et présentes. Cette vigilance est amplifiée par la génération automatique de notifications.
**L'Étudiant (GRP_ETUDIANT) : Parcours et Autonomie.** L'Espace Étudiant est conçu pour offrir une expérience claire et rassurante. Après une authentification rigoureuse (incluant la gestion des mots de passe oubliés et une validation d'adresse email par jeton), l'étudiant accède à un tableau de bord personnalisé résumant l'état d'avancement de son rapport, les notifications et les actions attendues. Son accès fonctionnel à la soumission du rapport est strictement conditionné par la validation préalable de son inscription administrative et de son stage par le Responsable Scolarité, ainsi que la régularisation d'éventuelles pénalités de retard. L'étudiant peut gérer son profil personnel (coordonnées, photo) et la sécurité de son compte (changement de mot de passe, activation 2FA).
**La Commission Pédagogique (GRP_COMMISSION) : Intégrité et Délibération.** Ce module est le cœur battant de l'intégrité académique. Chaque membre, après authentification, visualise ses responsabilités (rapports en attente d'évaluation ou de vote, PV à approuver). Le processus s'articule autour de "Sessions de Validation" (Planifiée -> En cours -> Clôturée, Présentielles, En Ligne (Asynchrone), ou Hybrides) créées et dirigées par le Président de la commission. Chaque membre a un accès exhaustif au rapport et aux informations contextuelles de l'étudiant, formalise son évaluation par des options prédéfinies (Approuvé en l'état, Refusé, Approuvé sous réserve, Nécessite une discussion), avec des commentaires obligatoires pour les décisions négatives. Le système gère les tours de vote et le Président orchestre la délibération. Après décision, le PV est rédigé, soumis à un circuit de validation interne à la commission, puis officialisé et diffusé. L'historisation des décisions et des PV est intégrée, de même qu'une messagerie sécurisée pour les discussions confidentielles.
**Le Personnel Administratif : Les Piliers Opérationnels.** Ce module est l'interface opérationnelle pour deux profils distincts.
*   **L'Agent de Contrôle de Conformité (GRP_AGENT_CONFORMITE)** a pour mission la vérification administrative et réglementaire des rapports. Son tableau de bord signale les rapports en attente, et il accède à leur contenu et métadonnées. L'examen s'appuie sur une grille de critères de conformité où il statue "Conforme" ou "Non Conforme" pour chaque point. En cas de non-conformité, un commentaire précis et constructif est obligatoire pour détailler les manquements et les corrections attendues. Un historique des vérifications est conservé.
*   **Le Responsable Scolarité (RS) (GRP_RS)** assume un rôle pivot dans l'administration du parcours étudiant. Son interface met en exergue les tâches prioritaires : activation des comptes étudiants (après validation des prérequis : scolarité à jour, stage enregistré et validé, pénalités régularisées), gestion des inscriptions administratives et pédagogiques (enregistrement annuel, association niveau d'étude, frais, statut paiement), saisie et gestion des notes (matière par matière), traitement des cas de non-validation de rapport (guidage pour nouveau stage, réactivation d'accès), et interlocuteur principal pour les réclamations étudiantes administratives. Le RS est également habilité à générer divers documents administratifs (attestations de scolarité, reçus de paiement, bulletins de notes individuels).
**L'Administrateur Système (GRP_ADMIN_SYS) : Architecte et Gardien.** Le Module Administration est le poste de commande central. Il dispose d'un tableau de bord consolidé, d'un accès illimité et d'une capacité d'intervention totale sur chaque aspect de la plateforme. Il peut naviguer et interagir avec les modules de tous les autres rôles, visualiser et modifier n'importe quelle donnée ou état d'un rapport, d'une session de commission ou d'un PV. Il peut intervenir sur les votes, et, pour des besoins de support critiques, effectuer des actions au nom d'un autre utilisateur (impersonation) avec une traçabilité renforcée. Ses prérogatives incluent la gestion exhaustive de toutes les entités métier (étudiants, enseignants, personnel administratif) et de tous les comptes utilisateurs (création, modification, activation, désactivation, blocage, archivage, réinitialisation de mots de passe, affectation de rôles). Il maîtrise la configuration fine du Contrôle d'Accès Basé sur les Rôles (RBAC) en définissant les types, groupes, niveaux d'accès et les traitements (actions atomiques) permis pour chaque rôle. Il gère l'intégralité des référentiels (années académiques, niveaux d'étude, spécialités, grades/fonctions du personnel avec historisation, types de documents, statuts de workflow, etc.), configure les règles métier (pénalités, échéances, durées de jetons), personnalise les communications (modèles PDF, emails, matrice de diffusion des notifications), et assure la supervision technique, la maintenance (journaux d'audit et d'erreurs, file d'attente des tâches, sauvegarde/restauration DB) et le déploiement. Il bénéficie également d'outils de reporting avancés pour le pilotage stratégique de la plateforme.

**Description Détaillée des Fonctionnalités Fondamentales**
La **gestion de la temporalité et l'historisation des carrières** est un élément clé. L'année académique active conditionne l'ensemble des interactions. Les métamorphoses professionnelles du personnel sont scrupuleusement datées et enregistrées, assurant une identification limpide des responsabilités passées et présentes. La **politique des pénalités de retard**, paramétrable et modulable, identifie automatiquement les étudiants ayant dépassé les délais, les confrontant à la notification de pénalités financières ou administratives à régulariser avant toute soumission.
Le **Module Commission de Validation** orchestre le processus d'évaluation. Les sessions de validation, entités métier dirigées par le président, regroupent et traitent les rapports, avec un cycle de vie Planifiée -> En cours -> Clôturée, et peuvent être Présentielles, En Ligne (Asynchrone) ou Hybrides. Chaque membre accède au rapport, formalise son évaluation avec des options prédéfinies et des commentaires circonstanciés obligatoires. Le système gère les tours de vote. La décision collégiale est consignée dans un Procès-Verbal (PV) de validation, rédigé via une interface d'édition, soumis à approbation interne, puis diffusé. La commission désigne également le directeur de mémoire, tenant compte de sa spécialité et charge. L'intégralité des rapports, décisions, commentaires et PV est archivée, constituant une ressource inestimable.
L'**Espace Étudiant** offre une expérience utilisateur optimisée. La préparation et la soumission du rapport se font via une gestion entièrement textuelle du contenu principal, offrant des modèles préformatés ou une page blanche avec des outils d'édition WYSIWYG. Le contenu est sauvegardé exclusivement en texte, avec gestion des brouillons et métadonnées essentielles. La soumission est un acte irréversible qui verrouille le rapport en lecture seule et déclenche sa transmission au service de Conformité, notifiant l'étudiant. Le suivi du workflow est pas à pas, avec des notifications claires en cas de non-conformité, permettant à l'étudiant d'apporter des corrections (avec note explicative obligatoire) et de resoumettre. La décision finale de la commission est communiquée, et en cas de non-validation définitive, l'étudiant est informé des scénarios possibles (Reprise du Rapport Actuel si autorisé, ou Nouveau Stage/Thème avec réactivation de la soumission par le RS). L'espace donne accès permanent à la gestion de son profil personnel, et à ses documents officiels (Relevé de Notes Provisoire filigrané, Bulletins Officiels authentiques, Procès-Verbal de Validation, autres attestations générées par le RS). Une section "Ressources & Aide" regroupe guides, exemples, critères d'évaluation, FAQ et contacts support. Un système de réclamations structuré permet de soumettre des requêtes catégorisées et d'en suivre le traitement, pouvant même initier une demande de reprise de processus. La plateforme assure une traçabilité rigoureuse de toutes les actions étudiantes et des notifications régulières par email et dans l'espace personnel.
Le **Module Personnel Administratif** est essentiel aux opérations. L'Agent de Contrôle de Conformité, via sa checklist traçable, vérifie la complétude du dossier, le respect des consignes de présentation de base, et la validité administrative des prérequis. Toute non-conformité requiert un commentaire détaillé. Le Responsable Scolarité (RS) active les comptes étudiants après vérification des prérequis (scolarité, stage, pénalités régularisées). Il enregistre les inscriptions, gère les notes, et guide les étudiants en cas de non-validation. Il génère aussi des documents PDF officiels (attestations, reçus, bulletins).

**Architecture Technique et Exigences Transverses**
Le **Système de Génération d'Identifiants Uniques** est un pilier fondamental. Ayant écarté l'auto-incrémentation et les UUID pour la gestion des clés primaires, "GestionMySoutenance" adopte une convention `PREFIXE-ANNEE-SEQUENCE` (ex: RAP2025-0015) pour des identifiants uniques, significatifs et lisibles. Cette logique est centralisée dans une classe PHP `IdentifiantGenerator` et s'appuie sur une table `sequences` (`nom_sequence`, `annee`, `valeur_actuelle`) pour maintenir les compteurs, avec une gestion transactionnelle et un verrouillage de ligne (`SELECT ... FOR UPDATE`) pour assurer la robustesse face aux accès concurrents. Cette approche optimise la lisibilité, le professionnalisme, la traçabilité et la maintenabilité.
Le **Système de Contrôle d'Accès Basé sur les Rôles (RBAC)** est une citadelle des droits. Il repose sur quatre tables : `type_utilisateur` (catégorisation générale), `groupe_utilisateur` (rôles fonctionnels, ex: GRP_COMMISSION), `traitement` (actions atomiques protégées), et `rattacher` (matrice des permissions). L'implémentation en PHP via le service `ServicePermissions` utilise une mise en cache des permissions en session pour la performance. Pour remédier à la latence identifiée lors de modifications de droits, une solution avancée a été choisie : remplacer le gestionnaire de session PHP par défaut par une gestion centralisée en base de données (table `sessions` avec `session_id`, `session_data`, `user_id`). Ainsi, lorsqu'un administrateur modifie des permissions, la logique applicative met à jour instantanément la session active des utilisateurs concernés en base de données, assurant une réactivité et une sécurité maximales.
La **Traçabilité, Audit et Historisation des Données** constituent la mémoire du système. Un mécanisme de journalisation centralisé, via une table `enregistrer` (`numero_utilisateur`, `id_action`, `date_action`, `id_entite_concernee`, `type_entite_concernee`, `details_action` (JSON), `adresse_ip`, `user_agent`), intercepte et enregistre systématiquement toutes les actions critiques. Parallèlement, l'historisation des carrières du personnel (grades et fonctions) est assurée par des tables de liaison `acquérir` et `occuper`, permettant de reconstituer les responsabilités à n'importe quel point dans le temps.
L'**Outil d'Importation de Données Avancé** est l'usine à données pour les entités Étudiant et Enseignant, offrant flexibilité et robustesse. Le workflow, conçu comme un assistant intelligent, inclut un téléversement et mappage interactif des colonnes de fichiers CSV/Excel vers les champs du système, une prévisualisation dynamique avec correction en ligne des erreurs simples, un lancement du traitement en tâche asynchrone via un système de file d'attente (avec des "workers" indépendants), et enfin, une notification avec un rapport d'opération final détaillant succès et échecs, avec un fichier exploitable pour les corrections.
La **Checklist de Conformité Traçable** est le crible de la qualité administrative. Intégrée à l'interface de l'Agent de Conformité, elle structure la vérification sur des critères prédéfinis, garantissant objectivité et rigueur. Chaque décision "Conforme"/"Non Conforme" est enregistrée. En cas de non-conformité, un commentaire précis est obligatoire et est communiqué à l'étudiant pour correction. Le système s'appuie sur une table de référence des critères et une table de liaison pour les résultats de chaque vérification, assurant pérennité et cohérence.
La **Symphonie des Notes**, un système avancé de génération et de gestion des bulletins, répond aux besoins de l'administration et des étudiants. Le Bulletin de Notes Officiel est généré en masse et de manière asynchrone par le RS, avec une gestion intégrée des versions et un archivage, puis automatiquement mis à disposition dans l'espace étudiant. Le Relevé de Notes Provisoire, quant à lui, est générable à tout moment en libre-service par l'étudiant, produit en temps réel avec un filigrane "PROVISOIRE - DOCUMENT NON OFFICIEL" et horodaté, pour une information instantanée sans usage abusif.
La **Sentinelle des Accès** implémente des mécanismes de sécurité robustes. La validation de l'adresse email par jeton sécurisé, stocké temporairement dans la table `utilisateur` (`token_validation_email`, `date_expiration_token`, `email_valide`), garantit l'authenticité des communications. La protection contre les attaques par force brute est assurée par un blocage temporaire du compte après un nombre excessif de tentatives échouées (`tentatives_connexion_echouees`, `compte_bloque_jusqua`), avec remise à zéro du compteur après une connexion réussie.
La **Relève des Responsabilités** gère la délégation et les transitions de rôles. La délégation de responsabilités spécifiques permet à un utilisateur de transférer des droits de manière contrôlée, partielle et temporaire, avec audit de chaque action du délégué. La procédure de gestion des transitions de rôles encadre les départs ou changements de fonction, détectant les tâches orphelines et guidant l'Administrateur pour une réaffectation manuelle et contrôlée à des remplaçants éligibles, avec notifications et traçabilité.
La **Voix du Système** est un système de notifications et communications configurable. Un catalogue des événements et une matrice de diffusion centralisée (gérés par l'Administrateur) permettent de définir quel rôle est notifié par quel canal (interne, email) pour chaque événement. Les utilisateurs peuvent personnaliser leurs préférences de notification, à l'exception des communications "critiques" non désactivables. La messagerie interne gère un cycle de vie avec archivage manuel ou automatique des conversations inactives.
Le **Moteur du Système** met l'accent sur la performance, la robustesse et la supervision technique. L'optimisation de la performance passe par des tests de charge, une stratégie de mise en cache (Redis, Memcached) et la gestion des tâches asynchrones via un système de file d'attente (`queue`) et des `workers` pour les opérations coûteuses. La supervision (monitoring) en temps réel des indicateurs clés (CPU, RAM, temps de réponse DB), un système d'alerting automatique et la centralisation des logs (événements, erreurs) assurent une haute disponibilité et un diagnostic rapide.
Enfin, l'**Intelligence des Données** est assurée par une recherche avancée et des outils de pilotage. Une recherche globale avancée est disponible pour les utilisateurs habilités (personnel administratif, commission) sur toutes les entités, avec des filtres contextuels. Un module de reporting et des tableaux de bord (opérationnels pour les responsables, stratégiques pour la direction) fournissent des KPIs, statistiques d'utilisation, analyses de délais et tendances, servant d'aide précieuse à la décision pour l'amélioration continue des processus.

**Exigences Non Fonctionnelles (ENF)**
*   **Performances** : Le système doit garantir des temps de réponse inférieurs à 2 secondes pour 90% des requêtes utilisateur, même en période de forte affluence (e.g., soumissions de rapports en fin de semestre). La génération de bulletins en masse pour une promotion (ex: 200 étudiants) doit être complétée en tâche de fond en moins de 10 minutes. La base de données doit supporter un minimum de 100 utilisateurs simultanés sans dégradation notable des performances.
*   **Sécurité** : La plateforme doit être conforme aux meilleures pratiques de sécurité web (OWASP Top 10) et de sécurité des données. Tous les mots de passe doivent être hachés et salés. L'authentification à deux facteurs (2FA) doit être proposée aux utilisateurs. Les données sensibles (notes, PV) doivent être chiffrées au repos dans la base de données. Les journaux d'audit ne doivent pas être modifiables et doivent être conservés pour une durée minimale de 5 ans.
*   **Usabilité et Expérience Utilisateur** : L'interface utilisateur doit être intuitive, ergonomique et offrir une expérience « claire, simple et rassurante », comme décrit. Elle doit être pleinement responsive, s'adaptant à différentes tailles d'écran (ordinateurs, tablettes, mobiles). La plateforme doit être accessible aux personnes en situation de handicap, en respectant les directives WCAG 2.1 niveau AA. Des guides contextuels et une FAQ exhaustive doivent être intégrés.
*   **Fiabilité et Disponibilité** : Le système doit viser une disponibilité de 99,5% (hors maintenances planifiées). Une stratégie de sauvegarde et de restauration de la base de données doit être mise en place avec un Objectif de Temps de Restauration (RTO) de 4 heures et un Objectif de Point de Restauration (RPO) de 24 heures. Un système d'alerting proactif doit notifier l'équipe technique en cas de dysfonctionnement ou de dépassement de seuils critiques (CPU, RAM, espace disque, erreurs applicatives).
*   **Maintenabilité et Évolutivité** : L'architecture doit être modulaire, permettant des évolutions et l'ajout de nouvelles fonctionnalités sans réécritures majeures. Le code doit suivre les standards PHP (PSR) et les bonnes pratiques de Laravel, être documenté et couvert par des tests unitaires et fonctionnels. La gestion des dépendances via Composer doit être rigoureusement suivie. L'implémentation des files d'attente asynchrones et du système de cache doit permettre une montée en charge horizontale.
*   **Intégration** : Le système doit, à terme, pouvoir s'intégrer avec les systèmes d'information existants de l'établissement (Système d'Information Étudiant - SIS, Système de Gestion des Ressources Humaines - GRH, annuaires LDAP/Active Directory pour le SSO, systèmes de paiement pour les pénalités), idéalement via des APIs pour des échanges de données automatisés, réduisant la duplication d'informations et les imports manuels.
*   **Confidentialité et Conformité (RGPD)** : Le système doit être conçu en pleine conformité avec les réglementations sur la protection des données personnelles (ex: RGPD), incluant le droit à l'oubli (avec procédures d'archivage et de suppression), le droit à la portabilité, et la minimisation des données. Des politiques de rétention des données claires doivent être définies et appliquées, et la possibilité de purger les journaux par l'administrateur doit être encadrée par des procédures strictes et auditables.

**Hypothèses, Contraintes et Risques Identifiés**
*   **Hypothèses** : La participation active et la formation des utilisateurs (étudiants, personnel, commission) sont acquises. Les règles métier de l'établissement sont stables pour la durée initiale du projet, ou les modifications sont gérables via les paramètres administrateur. Les infrastructures techniques requises (serveurs, réseau) sont disponibles et dimensionnées adéquatement. Les fichiers d'importation fournis par les systèmes externes sont structurés et conformes à des formats définis.
*   **Contraintes** : Le développement doit s'opérer avec la pile technologique Laravel 10 (PHP 8.1+), Laravel Jetstream, Livewire 3, Filament 3.0, et Spatie Laravel Permission 5.10. La gestion des pénalités doit être paramétrable sans intervention sur le code. Le contenu des rapports est géré exclusivement en mode textuel WYSIWYG dans la base de données. Le système doit fonctionner avec une année académique active à la fois.
*   **Risques** :
    *   **Risque d'intégration** : L'absence d'intégrations automatiques (API) avec les systèmes existants (SIS, GRH, SSO) peut entraîner une surcharge administrative et des incohérences de données. Il existe un risque que les données soient dupliquées et désynchronisées si les imports manuels ne sont pas rigoureusement gérés.
    *   **Risque d'adoption** : Une forte résistance au changement des utilisateurs (personnel habitué aux processus manuels, étudiants peu à l'aise avec le numérique) pourrait freiner l'adoption de la plateforme.
    *   **Risque fonctionnel** : L'absence de spécifications détaillées pour les cas limites complexes (circonstances atténuantes pour pénalités, règles de quorum fines, diplômes conjoints, détection de plagiat) pourrait rendre le système incomplet ou rigide face à la réalité métier.
    *   **Risque de performance** : Sans NFRs de performance chiffrées et une stratégie de tests de charge continue, il y a un risque que le système ne supporte pas la charge utilisateur réelle lors des pics d'activité.
    *   **Risque de conformité** : Le manque de précision sur les politiques de rétention, le chiffrement des données au repos, et l'anonymisation pourrait exposer l'institution à des risques réglementaires (RGPD).

## Technology Stack
# TECHSTACK

Le succès de la plateforme "GestionMySoutenance" repose sur une sélection rigoureuse et stratégique de technologies éprouvées et de frameworks modernes, conçus pour garantir la robustesse, la sécurité, l'évolutivité et une expérience utilisateur optimale. La pile technologique a été choisie pour répondre aux exigences complexes de la gestion académique, en privilégiant la fiabilité des données, l'efficacité des processus administratifs et la traçabilité des actions.

## 1. Architecture Logicielle et Langages

*   **Langage de Programmation Backend : PHP 8.1+**
    *   **Justification :** PHP, dans ses versions modernes, est un langage mature, performant et largement adopté pour le développement d'applications web d'entreprise. Sa vaste communauté et son écosystème riche garantissent une grande disponibilité de ressources, de bibliothèques et de support. La version 8.1+ apporte des améliorations significatives en termes de performance et de nouvelles fonctionnalités de langage, contribuant à la robustesse de l'application.

*   **Framework Backend : Laravel 10**
    *   **Justification :** Laravel est un framework PHP MVC (Model-View-Controller) élégant et puissant, reconnu pour sa syntaxe expressive et ses fonctionnalités intégrées. Il accélère considérablement le développement tout en imposant de bonnes pratiques architecturales. Laravel 10 offre un ORM (Eloquent) performant pour une interaction intuitive avec la base de données, des mécanismes de sécurité robustes (protection CSRF, XSS), un système de routage flexible, et un support natif pour la gestion des files d'attente (queues) et la mise en cache, essentiels pour les tâches asynchrones et la performance de "GestionMySoutenance".

*   **Technologies Frontend : Livewire 3, Alpine.js (impliqué par Filament), Tailwind CSS (impliqué par Filament)**
    *   **Justification :** La combinaison du "TALL stack" (Tailwind CSS, Alpine.js, Livewire, Laravel) est privilégiée pour le développement de l'interface utilisateur.
        *   **Livewire 3 :** Permet de construire des interfaces utilisateur dynamiques et réactives en utilisant uniquement PHP, réduisant ainsi la dépendance à des frameworks JavaScript complexes. Cela simplifie le développement des fonctionnalités interactives (ex: gestion des votes en commission, formulaires de soumission de rapport) et assure une cohérence forte entre le backend et le frontend.
        *   **Alpine.js :** Une bibliothèque JavaScript légère qui fournit de la réactivité pour les interactions UI côté client, complétant Livewire sans alourdir le projet avec un framework JavaScript complet.
        *   **Tailwind CSS :** Un framework CSS utilitaire qui permet une création rapide et personnalisable d'interfaces, assurant un design cohérent et professionnel sans effort de stylisation excessif.

## 2. Base de Données et Stockage

*   **Système de Gestion de Base de Données Relationnelle (SGBDR) : MySQL 8.0+**
    *   **Justification :** MySQL est un SGBDR open-source très populaire, fiable et performant. Il est parfaitement adapté à la gestion des données structurées et relationnelles complexes de "GestionMySoutenance" (profils utilisateurs, rapports, sessions, historiques, etc.). Sa conformité ACID (Atomicity, Consistency, Isolation, Durability) garantit l'intégrité des données, essentielle pour un système académique critique. Des alternatives comme PostgreSQL ou MariaDB pourraient être envisagées pour des raisons de licence ou de préférences spécifiques, mais MySQL est le choix de référence pour sa maturité et ses performances éprouvées.

*   **Serveur Web : Nginx ou Apache HTTP Server**
    *   **Justification :** Ces deux serveurs web sont des standards de l'industrie, reconnus pour leur stabilité et leurs performances. Ils sont tous deux parfaitement capables de servir des applications PHP basées sur Laravel, offrant une flexibilité de configuration pour la gestion des requêtes, la sécurité (certificats SSL/TLS) et l'optimisation des performances.

*   **Stockage de Fichiers : Système de Fichiers Serveur (avec gestion par Laravel Storage)**
    *   **Justification :** Pour le stockage des documents générés (PDF des PV, bulletins, attestations) et potentiellement des fichiers importés/exportés. Laravel propose un système de fichiers abstrait via son composant `Storage` qui permet de basculer facilement entre le stockage local, S3 (Amazon Web Services), ou d'autres pilotes de stockage objet si les besoins d'évolutivité ou de distribution augmentent.

## 3. Outils et Bibliothèques Spécifiques

*   **Panneau d'Administration : Filament 3.0**
    *   **Justification :** Filament est un ensemble de composants et de bibliothèques basés sur Livewire, conçus pour créer rapidement des interfaces d'administration élégantes et puissantes. C'est un choix idéal pour les modules Administrateur, Personnel Administratif et Commission, réduisant considérablement le temps de développement de ces interfaces complexes tout en assurant une expérience utilisateur cohérente et riche en fonctionnalités. Il intègre naturellement des fonctionnalités comme les CRUD, la gestion des filtres et la personnalisation.

*   **Gestion des Permissions et Rôles (RBAC) : Spatie Laravel Permission**
    *   **Justification :** Cette bibliothèque est un standard de facto dans l'écosystème Laravel pour la gestion des rôles et des permissions. Elle implémente une architecture RBAC complète, permettant de définir des rôles granulaires (GRP\_ADMIN\_SYS, GRP\_RS, GRP\_AGENT\_CONFORMITE, GRP\_COMMISSION) et d'y associer des "traitements" (permissions atomiques) spécifiques, garantissant un contrôle d'accès fin et sécurisé. Son intégration native avec Laravel et sa flexibilité répondent parfaitement aux exigences de sécurité et de gestion des droits de "GestionMySoutenance", y compris la mise à jour des droits en temps réel via la gestion des sessions en base de données.

*   **Génération de Documents PDF : Barryvdh Laravel Dompdf**
    *   **Justification :** Indispensable pour la génération des documents officiels de l'établissement (Procès-Verbaux de validation, Relevés de notes, Bulletins officiels, Attestations de scolarité). Cette bibliothèque s'intègre parfaitement à Laravel et permet de convertir des vues HTML/Blade en fichiers PDF, assurant ainsi une mise en page personnalisée et conforme aux standards institutionnels.

*   **Import/Export de Données (CSV/Excel) : Maatwebsite Excel**
    *   **Justification :** Essentiel pour la fonctionnalité d'importation de données en masse des entités "Étudiant" et "Enseignant", ainsi que pour l'exportation de rapports statistiques au format CSV ou Excel. Cette bibliothèque offre une API simple et puissante pour gérer ces opérations, optimisant l'efficacité administrative.

*   **Gestion de l'Impersonation : Lab404 Laravel Impersonate**
    *   **Justification :** Permet à l'Administrateur Système d'assumer temporairement l'identité d'un autre utilisateur (étudiant, personnel) à des fins de support technique ou de débogage, tout en maintenant une traçabilité complète des actions. Cette fonctionnalité est cruciale pour le dépannage et la gestion des incidents.

*   **Authentification et Sécurité Avancées : Laravel Jetstream, Laravel Sanctum**
    *   **Justification :**
        *   **Jetstream :** Sert de point de départ pour la gestion des utilisateurs, intégrant des fonctionnalités robustes comme l'enregistrement, la connexion, la gestion de profil, la vérification d'adresse email, et nativement l'authentification à deux facteurs (2FA), essentielle pour la sécurité des comptes utilisateurs.
        *   **Sanctum :** Fournit un système d'authentification par jeton léger et efficace pour les API, ouvrant la voie à de futures intégrations avec des applications tierces ou des clients mobiles si nécessaire.

*   **Système de File d'Attente (Queue) et Caching : Redis (ou Memcached)**
    *   **Justification :**
        *   **Redis :** Un magasin de données en mémoire, clé-valeur, utilisé comme pilote pour le système de file d'attente de Laravel et comme backend de cache. Il permet de déléguer les tâches longues (génération massive de PDF, envois d'emails groupés, traitements d'importation volumineux) à des processus d'arrière-plan (workers), assurant ainsi une réactivité maximale de l'interface utilisateur.
        *   **Caching :** Améliore considérablement les performances de l'application en stockant temporairement les résultats de requêtes coûteuses ou de données fréquemment consultées, réduisant ainsi la charge sur la base de données.

## 4. Outils de Développement et de Supervision

*   **Gestionnaire de Dépendances : Composer**
    *   **Justification :** Le gestionnaire de dépendances standard pour PHP, utilisé pour installer et gérer les bibliothèques et frameworks du projet. Il assure l'auto-chargement des classes et la cohérence de l'environnement de développement.

*   **Environnement de Développement : Laravel Sail / Docker**
    *   **Justification :** Laravel Sail fournit un environnement de développement Docker léger et préconfiguré, garantissant une reproductibilité de l'environnement entre les développeurs et facilitant le déploiement. Docker permet de conteneuriser l'application et ses dépendances (PHP, Nginx, MySQL, Redis), simplifiant la gestion de l'infrastructure.

*   **Tests Automatisés : PHPUnit, Pest**
    *   **Justification :** Des frameworks de test unitaires et d'intégration essentiels pour assurer la qualité du code, la fiabilité des fonctionnalités et prévenir les régressions lors des évolutions. PHPUnit est le standard PHP, et Pest offre une syntaxe plus concise et conviviale pour les tests.

*   **Outil de Débogage et de Monitoring : Laravel Telescope**
    *   **Justification :** Un tableau de bord élégant pour surveiller l'activité de l'application en temps réel (requêtes HTTP, requêtes SQL, tâches en file d'attattente, emails, notifications, événements, etc.). Il est un atout inestimable pour le débogage, l'optimisation des performances et la supervision proactive du système.

*   **Analyse Statique et Style de Code : Laravel Pint, PHPStan**
    *   **Justification :**
        *   **Laravel Pint :** Un outil de correction de style de code automatique, basé sur PHP-CS-Fixer, pour maintenir une cohérence et une lisibilité élevées du code base.
        *   **PHPStan :** Un analyseur statique qui détecte les erreurs potentielles et les problèmes de type dans le code PHP avant même l'exécution, améliorant la robustesse et la qualité du logiciel.

## 5. Principes Architecturaux et Modèles de Conception

La sélection de cette stack est guidée par l'adoption de principes architecturaux modernes :

*   **Architecture Modulaire et Orientée Services :** Favorise la séparation des préoccupations, rendant le code plus maintenable, testable et évolutif. Des services dédiés comme `IdentifiantGenerator`, `AuditLogger` ou `ServicePermissions` encapsulent des logiques métier spécifiques.
*   **Contrôle d'Accès Basé sur les Rôles (RBAC) Granulaire :** Une implémentation robuste avec mise à jour en temps réel des permissions via la gestion des sessions en base de données pour une sécurité maximale.
*   **Traçabilité et Audit Étendue :** Un mécanisme de journalisation centralisé et détaillé pour toutes les actions critiques, assurant la conformité et la capacité d'investigation.
*   **Historisation des Données Clés :** Une approche basée sur l'historisation des changements de carrière du personnel permet de reconstruire l'état du système à n'importe quel point dans le temps.
*   **Programmation Asynchrone et Événementielle :** Utilisation intensive des files d'attente et des événements pour découpler les opérations et garantir la performance et la résilience, même sous forte charge.

En somme, la "TECHSTACK" de "GestionMySoutenance" est un assemblage cohérent et puissant, capable de supporter les exigences actuelles du projet tout en offrant une base solide et flexible pour les évolutions futures.

## Project Structure
Le projet "GestionMySoutenance" est structuré autour d'une architecture PHP robuste basée sur le framework Laravel 10, intégrant une approche modulaire pour gérer les différentes facettes du processus de soutenance. La structure des fichiers et des dossiers est conçue pour garantir la clarté, la maintenabilité, l'évolutivité et la séparation des préoccupations, alignée sur les meilleures pratiques de développement web.

```
gestion-mysoutenance/
├── app/
│   ├── Console/
│   │   └── Commands/
│   │       ├── ActivateStudentAccounts.php      # Commande Artisan pour l'activation groupée de comptes étudiants (déclenchée par RS ou CRON).
│   │       ├── CheckPenaltyStatus.php          # Commande Artisan pour la détection et l'application des pénalités (CRON).
│   │       ├── YearlyAcademicRollover.php      # Commande Artisan pour la transition entre années académiques (CRON).
│   │       └── ...                             # Autres commandes d'administration ou de maintenance.
│   ├── Http/
│   │   ├── Controllers/
│   │   │   ├── Admin/                          # Contrôleurs spécifiques au Module Administration.
│   │   │   │   ├── UserController.php          # Gestion des utilisateurs et entités métier.
│   │   │   │   ├── ReferentialController.php   # CRUD pour les référentiels (grades, statuts, années académiques).
│   │   │   │   ├── ImportController.php        # Gestion de l'outil d'importation de données.
│   │   │   │   └── ...
│   │   │   ├── Auth/                           # Contrôleurs d'authentification (Jetstream).
│   │   │   ├── Student/                        # Contrôleurs spécifiques à l'Espace Étudiant.
│   │   │   │   ├── DashboardController.php     # Tableau de bord de l'étudiant.
│   │   │   │   ├── ReportController.php        # Rédaction et soumission de rapport.
│   │   │   │   ├── ProfileController.php       # Gestion du profil étudiant.
│   │   │   │   └── DocumentController.php      # Accès aux documents officiels et relevés provisoires.
│   │   │   ├── Commission/                     # Contrôleurs spécifiques au Module Commission.
│   │   │   │   ├── SessionController.php       # Création et gestion des sessions de validation.
│   │   │   │   ├── VoteController.php          # Gestion des votes et délibérations.
│   │   │   │   └── PvController.php            # Rédaction et validation des procès-verbaux.
│   │   │   ├── Personnel/                      # Contrôleurs spécifiques au Module Personnel Administratif.
│   │   │   │   ├── ConformityController.php    # Vérification de la conformité des rapports.
│   │   │   │   ├── ScolariteController.php     # Gestion des inscriptions, stages, notes et pénalités.
│   │   │   │   └── ...
│   │   │   └── ...                             # Contrôleurs génériques ou communs.
│   │   ├── Middleware/
│   │   │   ├── Authenticate.php                # Gestion de l'authentification.
│   │   │   ├── AuthorizeRole.php               # Middleware de vérification des rôles (utilisé par Spatie/Laravel-Permission).
│   │   │   ├── EnsureEmailIsVerified.php       # Vérification de l'adresse email.
│   │   │   └── ...
│   │   └── Requests/                           # Classes pour la validation des requêtes HTTP.
│   │       ├── Admin/
│   │       ├── Student/
│   │       ├── Commission/
│   │       └── Personnel/
│   ├── Models/
│   │   ├── User.php                            # Modèle principal des utilisateurs.
│   │   ├── Etudiant.php                        # Entité métier étudiant.
│   │   ├── Enseignant.php                      # Entité métier enseignant.
│   │   ├── Personnel.php                       # Entité métier personnel administratif.
│   │   ├── Rapport.php                         # Modèle pour les rapports de soutenance.
│   │   ├── SessionValidation.php               # Modèle pour les sessions de commission.
│   │   ├── ProcesVerbal.php                    # Modèle pour les procès-verbaux.
│   │   ├── Penalite.php                        # Modèle pour la gestion des pénalités.
│   │   ├── Grade.php                           # Référentiel des grades d'enseignants.
│   │   ├── Fonction.php                        # Référentiel des fonctions du personnel.
│   │   ├── AuditEntry.php                      # Enregistrements de la piste d'audit.
│   │   ├── Sequence.php                        # Table de gestion des identifiants uniques (PREFIXE-ANNEE-SEQUENCE).
│   │   ├── Reclamations.php                    # Modèle pour le système de réclamations.
│   │   ├── Entreprise.php                      # Référentiel des entreprises de stage.
│   │   ├── Stage.php                           # Modèle pour les informations de stage.
│   │   ├── Note.php                            # Modèle pour les notes des étudiants.
│   │   ├── TypeUtilisateur.php                 # Modèle pour les types d'utilisateurs (RBAC).
│   │   ├── GroupeUtilisateur.php               # Modèle pour les groupes/rôles d'utilisateurs (RBAC).
│   │   ├── Traitement.php                      # Modèle pour les actions atomiques/permissions (RBAC).
│   │   ├── Rattacher.php                       # Modèle de liaison Groupes <-> Traitements (RBAC).
│   │   └── ...
│   ├── Providers/
│   │   ├── AppServiceProvider.php              # Fournisseur de services général.
│   │   ├── AuthServiceProvider.php             # Définition des politiques d'autorisation.
│   │   ├── BroadcastServiceProvider.php
│   │   ├── EventServiceProvider.php            # Enregistrement des événements et de leurs écouteurs.
│   │   ├── RouteServiceProvider.php            # Chargement des routes.
│   │   └── SessionServiceProvider.php          # Enregistrement du DatabaseSessionHandler.
│   ├── Services/                               # Classes de logique métier complexes et réutilisables.
│   │   ├── IdentifiantGenerator.php            # Service pour la génération d'identifiants uniques.
│   │   ├── AuditLogger.php                     # Service de journalisation des actions.
│   │   ├── ServicePermissions.php              # Service de gestion des permissions (RBAC).
│   │   ├── DocumentGenerator.php               # Service pour la génération de documents PDF (attestations, bulletins, PV).
│   │   ├── NotificationService.php             # Service centralisé pour l'envoi de notifications.
│   │   ├── ImportService.php                   # Logique d'importation de données avancée.
│   │   ├── PenaltyCalculator.php               # Calcul et gestion des pénalités.
│   │   ├── SessionManager.php                  # Gestion des sessions de commission.
│   │   ├── ReportWorkflowManager.php           # Gestion des transitions de statut des rapports.
│   │   └── DatabaseSessionHandler.php          # Handler personnalisé pour les sessions en base de données.
│   ├── Jobs/                                   # Tâches asynchrones (queues).
│   │   ├── GenerateBulkBulletins.php           # Génération de bulletins en masse.
│   │   ├── SendNotificationEmail.php           # Envoi d'emails (notifications, réinitialisation mdp).
│   │   ├── ProcessDataImport.php               # Traitement asynchrone des fichiers d'importation.
│   │   └── ...
│   ├── Events/                                 # Classes d'événements déclenchés dans l'application.
│   │   ├── UserLoggedIn.php
│   │   ├── ReportStatusUpdated.php
│   │   ├── PvApproved.php
│   │   ├── SessionCreated.php
│   │   └── ...
│   ├── Listeners/                              # Classes d'écouteurs d'événements.
│   │   ├── LogUserAction.php                   # Écouteur pour la piste d'audit.
│   │   ├── SendReportStatusNotification.php    # Écouteur pour les notifications.
│   │   ├── UpdateLiveUserPermissions.php       # Écouteur pour la mise à jour des droits RBAC en temps réel.
│   │   └── ...
│   ├── Notifications/                          # Classes de notifications Laravel (email, base de données).
│   │   ├── ReportSubmitted.php
│   │   ├── ReportNonConforme.php
│   │   ├── PasswordResetNotification.php
│   │   ├── EmailVerificationNotification.php
│   │   └── ...
│   └── Exceptions/                             # Gestion des exceptions personnalisées.
│       └── Handler.php
├── bootstrap/                                  # Fichiers de démarrage du framework.
│   └── app.php
├── config/                                     # Fichiers de configuration de l'application.
│   ├── app.php
│   ├── auth.php
│   ├── database.php
│   ├── mail.php
│   ├── queue.php
│   ├── services.php
│   ├── filament.php                            # Configuration de Filament (interface admin).
│   ├── dompdf.php                              # Configuration de DomPDF pour la génération de PDF.
│   ├── permissions.php                         # Définition des permissions (Spatie/Laravel-Permission).
│   ├── gestion.php                             # Configuration spécifique à GestionMySoutenance (seuils de pénalités, dates académiques, etc.).
│   └── ...
├── database/
│   ├── migrations/                             # Scripts de migration de la base de données.
│   │   ├── 2023_01_01_create_users_table.php
│   │   ├── 2023_01_02_create_etudiants_table.php
│   │   ├── ... (Toutes les tables métiers et référentiels)
│   │   ├── 2023_01_15_create_sequences_table.php # Table pour IdentifiantGenerator.
│   │   ├── 2023_01_20_create_audits_table.php    # Table pour la piste d'audit.
│   │   ├── 2023_02_01_create_sessions_table.php  # Table pour la gestion des sessions Laravel en DB.
│   │   ├── 2023_02_05_create_permission_tables.php # Migrations de Spatie/Laravel-Permission.
│   │   └── ...
│   ├── seeders/                                # Scripts d'initialisation des données (seeds).
│   │   ├── DatabaseSeeder.php
│   │   ├── AdminUserSeeder.php                 # Création de l'administrateur initial.
│   │   ├── ReferentialDataSeeder.php           # Données initiales pour les référentiels.
│   │   └── ...
│   └── factories/                              # Factories pour générer des données de test.
├── public/                                     # Racine web du projet.
│   ├── index.php                               # Point d'entrée de l'application.
│   ├── css/                                    # Fichiers CSS compilés (TailwindCSS, etc.).
│   ├── js/                                     # Fichiers JavaScript compilés.
│   └── uploads/                                # Stockage des fichiers téléchargés par les utilisateurs (rapports, PV finaux, profils).
│       ├── reports/
│       ├── pvs/
│       ├── profiles/
│       └── tmp_imports/                        # Fichiers temporaires d'importation.
├── resources/
│   ├── views/                                  # Templates Blade pour l'interface utilisateur.
│   │   ├── auth/                               # Vues d'authentification (login, register, etc.).
│   │   ├── admin/                              # Vues spécifiques au Module Administration.
│   │   ├── student/                            # Vues spécifiques à l'Espace Étudiant.
│   │   │   ├── dashboard.blade.php
│   │   │   ├── report_editor.blade.php         # Éditeur WYSIWYG pour le rapport.
│   │   │   ├── document_list.blade.php
│   │   │   └── ...
│   │   ├── commission/                         # Vues spécifiques au Module Commission.
│   │   ├── personnel/                          # Vues spécifiques au Module Personnel Administratif.
│   │   ├── components/                         # Composants Blade réutilisables (modals, alerts, forms).
│   │   ├── layouts/                            # Layouts principaux (app.blade.php, guest.blade.php).
│   │   ├── emails/                             # Templates d'emails pour les notifications.
│   │   ├── pdf_templates/                      # Gabarits HTML pour la génération de PDF (DomPDF).
│   │   └── ...
│   ├── css/                                    # Fichiers source CSS (Tailwind CSS, PostCSS).
│   └── js/                                     # Fichiers source JavaScript (Vue.js/Livewire, Alpine.js).
├── routes/
│   ├── web.php                                 # Définition des routes web (pour tous les modules).
│   ├── api.php                                 # Définition des routes API (si des services externes devaient interagir).
│   └── console.php                             # Définition des commandes Artisan.
├── storage/
│   ├── app/
│   │   ├── public/                             # Fichiers publics stockés (symlink vers public/uploads).
│   │   └── temp/                               # Dossier pour les fichiers temporaires.
│   ├── framework/
│   │   ├── cache/                              # Cache Laravel.
│   │   ├── sessions/                           # Fichiers de session (si non en DB).
│   │   ├── views/                              # Vues compilées.
│   │   └── ...
│   └── logs/                                   # Journaux d'erreurs de l'application.
├── tests/                                      # Tests unitaires et fonctionnels.
│   ├── Unit/
│   │   ├── IdentifiantGeneratorTest.php
│   │   ├── RbacTest.php
│   │   └── ...
│   └── Feature/
│       ├── AuthenticationTest.php
│       ├── ReportSubmissionTest.php
│       ├── AdminPanelTest.php
│       └── ...
├── vendor/                                     # Dépendances Composer (gérées par composer.json).
├── .env                                        # Fichier de configuration des variables d'environnement.
├── .env.example                                # Exemple de fichier .env.
├── composer.json                               # Définition des dépendances PHP.
├── composer.lock                               # Liste exacte des dépendances installées.
├── package.json                                # Dépendances JavaScript (Node.js).
├── webpack.mix.js                              # Configuration pour la compilation des assets.
├── artisan                                     # Script Artisan pour les commandes CLI.
├── phpunit.xml                                 # Configuration des tests PHPUnit.
├── README.md                                   # Fichier README du projet.
└── ...
```

**Explications des Répertoires et Fichiers Clés:**

*   **`app/`**: Le cœur de l'application. Il contient toute la logique métier, les modèles de données, les contrôleurs, les services, les jobs et les événements. Sa structure reflète la modularité de "GestionMySoutenance" avec des sous-dossiers pour chaque module (Admin, Student, Commission, Personnel) à l'intérieur de `Controllers`.
    *   **`app/Services/`**: Ce répertoire est crucial. Il abrite les classes de services qui encapsulent des logiques métier complexes et transversales, telles que la génération d'identifiants uniques (`IdentifiantGenerator`), la gestion de la piste d'audit (`AuditLogger`), ou le contrôle d'accès (`ServicePermissions`), garantissant la réutilisabilité et la testabilité. Le `DatabaseSessionHandler` y réside également pour la gestion des sessions en base de données.
    *   **`app/Jobs/`, `app/Events/`, `app/Listeners/`**: Ces répertoires implémentent le traitement asynchrone et l'architecture événementielle. Les `Jobs` sont des tâches longues exécutées en arrière-plan (ex: génération de bulletins en masse, importations). Les `Events` sont des points d'intérêt où des actions significatives se produisent, et les `Listeners` réagissent à ces événements, notamment pour l'audit ou les notifications.
    *   **`app/Models/`**: Contient tous les modèles Eloquent qui représentent les entités de la base de données et leurs relations. Les modèles `Sequence`, `AuditEntry`, et les tables du RBAC (`TypeUtilisateur`, `GroupeUtilisateur`, `Traitement`, `Rattacher`) sont des exemples clés de la spécification.
*   **`config/`**: Contient l'ensemble des fichiers de configuration. Le fichier `gestion.php` serait dédié aux paramètres spécifiques du projet (règles de pénalités, années académiques, seuils, etc.), permettant une personnalisation facile sans modifier le code source. Les configurations de `filament.php` et `dompdf.php` sont également présentes, reflétant les dépendances utilisées.
*   **`database/`**: Gère tout ce qui est lié à la base de données.
    *   **`migrations/`**: Chaque fichier de migration représente une modification du schéma de la base de données. Les migrations pour les tables de gestion des sessions (`sessions`) et du système de contrôle d'accès basé sur les rôles (RBAC) sont des exemples concrets de la mise en œuvre des spécifications.
    *   **`seeders/`**: Permet de peupler la base de données avec des données initiales ou de test, comme l'utilisateur administrateur ou les référentiels métiers.
*   **`public/`**: Le dossier racine accessible par le serveur web. Il contient l'application front-end compilée (`css/`, `js/`) et le répertoire `uploads/` qui est le point de stockage public et accessible des documents générés ou téléversés (rapports, PV, photos de profil).
*   **`resources/`**: Contient les ressources non compilées de l'application.
    *   **`views/`**: Les templates Blade pour l'interface utilisateur. La division en sous-dossiers par rôle (`admin/`, `student/`, `commission/`, `personnel/`) assure une organisation logique des vues par module fonctionnel. Les `pdf_templates/` sont des gabarits HTML/CSS utilisés par DOMPDF pour générer les documents officiels.
*   **`routes/`**: Définit les différentes routes de l'application (`web.php` pour le front-end et les APIs, `console.php` pour les commandes Artisan).
*   **`storage/`**: Répertoire pour le stockage des fichiers générés par l'application qui ne sont pas censés être accessibles directement via le web, ainsi que les logs. `storage/app/public` est souvent lié symboliquement à `public/storage` pour les fichiers que l'on veut rendre publics après traitement.
*   **`tests/`**: Les tests automatisés du projet, divisés en tests unitaires (pour les petites unités de code comme les services) et tests de fonctionnalités (pour tester les flux d'utilisation complets).
*   **`vendor/`**: Ce répertoire contient toutes les bibliothèques tierces installées via Composer, comme Laravel, Filament, Livewire, DomPDF, Maatwebsite/Excel, Lab404/Laravel-Impersonate, et Spatie/Laravel-Permission, essentiels aux fonctionnalités de la plateforme.
*   **`.env` et `composer.json`**: Le fichier `.env` gère les configurations spécifiques à l'environnement de déploiement (connexion base de données, clés API, etc.). `composer.json` liste toutes les dépendances PHP du projet, assurant la cohérence de l'environnement de développement.

Cette structure permet une gestion claire des responsabilités, facilite le travail en équipe et prépare le terrain pour l'implémentation robuste de toutes les fonctionnalités complexes décrites dans la documentation "GestionMySoutenance".

## Database Schema Design
SCHEMADESIGN

Le présent document détaille la conception du schéma de base de données pour la plateforme "GestionMySoutenance". Ce schéma reflète l'organisation des données, les relations entre les différentes entités métier, et les mécanismes sous-jacents qui garantissent l'intégrité, la traçabilité et la performance du système. La modélisation a été élaborée pour supporter l'ensemble des fonctionnalités décrites, incluant la gestion des utilisateurs et de leurs rôles, les flux de validation des rapports, le suivi académique, et les outils d'administration.

I. Modèle Entité-Relation Conceptuel

Le système s'articule autour de plusieurs domaines clés, chacun représentant un ensemble d'entités métier interconnectées:

*   **Gestion des Personnes et Utilisateurs**: Centralise les informations sur les individus (étudiants, enseignants, personnel administratif) et gère leurs accès à la plateforme via des comptes utilisateurs et un système de Contrôle d'Accès Basé sur les Rôles (RBAC).
*   **Contexte Académique**: Définit les années académiques et les structures de formation (niveaux d'étude, spécialités).
*   **Parcours Étudiant**: Englobe l'inscription, la gestion des pénalités, les stages et la soumission des rapports de soutenance.
*   **Validation des Rapports**: Gère le processus d'évaluation des rapports par les commissions, incluant les sessions de validation, les votes et la production des procès-verbaux.
*   **Suivi Académique**: Permet la saisie des notes, la consolidation des résultats et la génération des bulletins officiels.
*   **Communication et Audit**: Assure la traçabilité des actions, la gestion des réclamations et la diffusion des notifications.
*   **Référentiels et Configuration Système**: Contient toutes les données de référence et les paramètres configurables de l'application.

II. Schéma de Base de Données Logique

Le schéma est présenté sous forme de tables, détaillant leurs colonnes (avec types de données et contraintes) et leurs relations (clés primaires et étrangères).

**1. Tables des Référentiels et Paramètres Système**

*   **`annee_academique`**
    *   Description: Gère les années académiques avec leurs dates de début et de fin, et l'indication de l'année active.
    *   `id_annee_academique` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `code_annee` (VARCHAR(9), UNIQUE, NOT NULL) - Ex: "2024-2025"
    *   `date_debut` (DATE, NOT NULL)
    *   `date_fin` (DATE, NOT NULL)
    *   `est_active` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)

*   **`type_utilisateur`**
    *   Description: Catégories génériques d'utilisateurs.
    *   `id_type_utilisateur` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Etudiant", "Enseignant", "Personnel Administratif", "Admin Systeme"

*   **`groupe_utilisateur`**
    *   Description: Rôles fonctionnels dans le système (RBAC).
    *   `id_groupe_utilisateur` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `code` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "GRP_ETUDIANT", "GRP_AGENT_CONFORMITE", "GRP_ADMIN_SYS"
    *   `libelle` (VARCHAR(100), NOT NULL)

*   **`traitement`**
    *   Description: Actions atomiques et protégées dans le système (permissions).
    *   `id_traitement` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `code` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "TRAIT_RAPPORT_SOUMETTRE", "TRAIT_COMMISSION_VOTER"
    *   `description` (TEXT, NULL)

*   **`niveau_etude`**
    *   Description: Niveaux d'étude académiques.
    *   `id_niveau_etude` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Master 2"

*   **`specialite_formation`**
    *   Description: Spécialités de formation.
    *   `id_specialite_formation` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(200), UNIQUE, NOT NULL)

*   **`statut_paiement`**
    *   Description: Statuts de paiement pour les inscriptions.
    *   `id_statut_paiement` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Acquitte", "Impaye"

*   **`statut_penalite`**
    *   Description: Statuts des pénalités.
    *   `id_statut_penalite` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Due", "Reglee", "Exoneree"

*   **`grade`**
    *   Description: Grades des enseignants.
    *   `id_grade` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Maitre de Conferences", "Professeur"

*   **`fonction`**
    *   Description: Fonctions du personnel administratif (et des enseignants ayant des responsabilités admin).
    *   `id_fonction` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Responsable Scolarite", "Agent de Controle de Conformite"

*   **`statut_rapport`**
    *   Description: Statuts d'un rapport dans son workflow.
    *   `id_statut_rapport` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Brouillon", "Soumis", "En Correction", "Valide"
    *   `ordre_workflow` (INT, UNIQUE, NOT NULL)

*   **`type_document_section`**
    *   Description: Types de sections pour le contenu textuel des rapports.
    *   `id_type_section` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Introduction", "Bibliographie"
    *   `ordre` (INT, NOT NULL)

*   **`checklist_critere`**
    *   Description: Critères de la checklist de conformité.
    *   `id_critere` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `description` (TEXT, NULL)
    *   `applicable_pour` (ENUM('Conformite','Academique','All'), DEFAULT 'Conformite', NOT NULL)

*   **`statut_conformite`**
    *   Description: Statuts de conformité.
    *   `id_statut_conformite` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Conforme", "Non Conforme"

*   **`decision_vote`**
    *   Description: Options de décision pour les votes en commission.
    *   `id_decision_vote` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Approuve en l'etat", "Refuse", "Approuve sous reserve"
    *   `est_requiert_commentaire` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `est_final` (BOOLEAN, DEFAULT FALSE, NOT NULL)

*   **`statut_pv`**
    *   Description: Statuts d'un procès-verbal.
    *   `id_statut_pv` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Brouillon", "En Attente Approbation", "Valide"

*   **`unite_enseignement`**
    *   Description: Unités d'Enseignement (UE).
    *   `id_ue` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `code_ue` (VARCHAR(50), UNIQUE, NOT NULL)

*   **`element_constitutif_ue`**
    *   Description: Éléments Constitutifs d'UE (ECUE).
    *   `id_ecue` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_ue` (INT, FK to `unite_enseignement`, NOT NULL)
    *   `libelle` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `code_ecue` (VARCHAR(50), UNIQUE, NOT NULL)
    *   `coefficient` (DECIMAL(4,2), DEFAULT 1.0, NOT NULL)

*   **`document_administratif_type`**
    *   Description: Types de documents administratifs générés.
    *   `id_doc_type` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "Attestation de Scolarite", "Reçu de Paiement"

*   **`canal_diffusion`**
    *   Description: Canaux pour les notifications.
    *   `id_canal` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Interne", "Email"

*   **`modele_notification`**
    *   Description: Modèles pour les notifications et emails.
    *   `id_modele` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `code_evenement` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "RAPPORT_SOUMIS", "PV_VALIDE"
    *   `sujet_email` (VARCHAR(255), NULL)
    *   `corps_notification` (TEXT, NOT NULL)
    *   `est_critique` (BOOLEAN, DEFAULT FALSE, NOT NULL)

*   **`statut_reclamation`**
    *   Description: Statuts des réclamations.
    *   `id_statut_reclamation` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `libelle` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Ouverte", "Resolue"

*   **`sequences`**
    *   Description: Table pour la génération d'identifiants uniques (PREFIX-ANNEE-SEQUENCE).
    *   `nom_sequence` (VARCHAR(50), PK, NOT NULL) - Ex: "rapport", "etudiant"
    *   `annee` (YEAR, PK, NOT NULL)
    *   `valeur_actuelle` (INT, DEFAULT 0, NOT NULL)
    *   `CONSTRAINT UC_SequenceAnnee UNIQUE (nom_sequence, annee)`

*   **`parametre_systeme`**
    *   Description: Paramètres configurables de l'application.
    *   `cle` (VARCHAR(100), PK, NOT NULL) - Ex: "MAX_LOGIN_ATTEMPTS"
    *   `valeur` (TEXT, NULL)
    *   `description` (TEXT, NULL)
    *   `type_donnee` (VARCHAR(50), NULL)

*   **`modele_document_pdf`**
    *   Description: Références des modèles de documents PDF.
    *   `id_modele_pdf` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `code_modele` (VARCHAR(100), UNIQUE, NOT NULL) - Ex: "BULLETIN_NOTES"
    *   `nom_fichier_template` (VARCHAR(255), NOT NULL)
    *   `description` (TEXT, NULL)

**2. Tables des Entités Principales et Relations**

*   **`personne`**
    *   Description: Entité centrale pour tout individu.
    *   `id_personne` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `nom` (VARCHAR(100), NOT NULL)
    *   `prenom` (VARCHAR(100), NOT NULL)
    *   `date_naissance` (DATE, NULL)
    *   `genre` (ENUM('M','F','Autre'), NULL)
    *   `adresse_postale` (VARCHAR(255), NULL)
    *   `code_postal` (VARCHAR(10), NULL)
    *   `ville` (VARCHAR(100), NULL)
    *   `pays` (VARCHAR(100), NULL)
    *   `telephone` (VARCHAR(20), NULL)
    *   `email_secondaire` (VARCHAR(255), UNIQUE, NULL)
    *   `photo_profil_path` (VARCHAR(255), NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)

*   **`utilisateur`**
    *   Description: Compte de connexion lié à une personne.
    *   `id_utilisateur` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_personne` (INT, FK to `personne`, UNIQUE, NOT NULL)
    *   `login` (VARCHAR(100), UNIQUE, NOT NULL)
    *   `password_hash` (VARCHAR(255), NOT NULL)
    *   `email_principal` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `email_valide` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `token_validation_email` (VARCHAR(255), NULL)
    *   `date_expiration_token` (DATETIME, NULL)
    *   `tentatives_connexion_echouees` (TINYINT, DEFAULT 0, NOT NULL)
    *   `compte_bloque_jusqua` (DATETIME, NULL)
    *   `est_actif` (BOOLEAN, DEFAULT TRUE, NOT NULL)
    *   `date_derniere_connexion` (DATETIME, NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)
    *   `two_factor_secret` (TEXT, NULL)
    *   `two_factor_recovery_codes` (TEXT, NULL)

*   **`utilisateur_groupe`**
    *   Description: Liaison entre un utilisateur et son groupe/rôle principal.
    *   `id_utilisateur_groupe` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_utilisateur` (INT, FK to `utilisateur`, UNIQUE, NOT NULL)
    *   `id_groupe_utilisateur` (INT, FK to `groupe_utilisateur`, NOT NULL)
    *   `date_attribution` (DATETIME, DEFAULT CURRENT_TIMESTAMP)

*   **`groupe_traitement`** (Correspond à `rattacher` dans le texte)
    *   Description: Attribution des permissions (traitements) aux groupes (rôles).
    *   `id_groupe_traitement` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_groupe_utilisateur` (INT, FK to `groupe_utilisateur`, NOT NULL)
    *   `id_traitement` (INT, FK to `traitement`, NOT NULL)
    *   `date_attribution` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_GroupeTraitement UNIQUE (id_groupe_utilisateur, id_traitement)`

*   **`sessions`**
    *   Description: Stockage des sessions utilisateur pour la mise à jour des droits en temps réel.
    *   `session_id` (VARCHAR(255), PK, NOT NULL)
    *   `user_id` (INT, FK to `utilisateur`, NULL)
    *   `session_data` (LONGTEXT, NULL)
    *   `last_activity` (INT, NOT NULL)

*   **`etudiant`**
    *   Description: Informations spécifiques aux étudiants.
    *   `id_etudiant` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_personne` (INT, FK to `personne`, UNIQUE, NOT NULL)
    *   `numero_etudiant` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: ETU-2025-0001 (généré)
    *   `id_niveau_etude` (INT, FK to `niveau_etude`, NOT NULL)
    *   `id_specialite_formation` (INT, FK to `specialite_formation`, NULL)
    *   `promotion` (VARCHAR(10), NULL)
    *   `date_inscription_initiale` (DATE, NOT NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)

*   **`inscription`**
    *   Description: Inscriptions annuelles d'un étudiant.
    *   `id_inscription` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_annee_academique` (INT, FK to `annee_academique`, NOT NULL)
    *   `id_statut_paiement` (INT, FK to `statut_paiement`, NOT NULL)
    *   `montant_frais` (DECIMAL(10, 2), NULL)
    *   `date_inscription` (DATE, NOT NULL)
    *   `decision_passage` (VARCHAR(50), NULL)
    *   `CONSTRAINT UC_EtudiantAnneeInscription UNIQUE (id_etudiant, id_annee_academique)`

*   **`penalite_regle`**
    *   Description: Règles de calcul des pénalités de retard.
    *   `id_regle_penalite` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `type_retard` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: "Retard_1_An"
    *   `seuil_mois` (INT, NOT NULL)
    *   `montant_penalite` (DECIMAL(10, 2), NULL)
    *   `type_penalite_txt` (VARCHAR(255), NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)

*   **`penalite_etudiant`**
    *   Description: Instances de pénalités appliquées aux étudiants.
    *   `id_penalite_etudiant` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_regle_penalite` (INT, FK to `penalite_regle`, NULL)
    *   `montant_du` (DECIMAL(10, 2), NULL)
    *   `description` (TEXT, NULL)
    *   `date_declaration` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `id_statut_penalite` (INT, FK to `statut_penalite`, NOT NULL)
    *   `date_regularisation` (DATETIME, NULL)
    *   `document_preuve_regularisation_path` (VARCHAR(255), NULL)

*   **`enseignant`**
    *   Description: Informations spécifiques aux enseignants.
    *   `id_enseignant` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_personne` (INT, FK to `personne`, UNIQUE, NOT NULL)
    *   `numero_enseignant` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: ENS-2025-0001 (généré)
    *   `date_recrutement` (DATE, NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)

*   **`acquerir_grade`**
    *   Description: Historique des grades académiques des enseignants.
    *   `id_acquerir_grade` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_enseignant` (INT, FK to `enseignant`, NOT NULL)
    *   `id_grade` (INT, FK to `grade`, NOT NULL)
    *   `date_acquisition` (DATE, NOT NULL)
    *   `date_fin_grade` (DATE, NULL)
    *   `CONSTRAINT UC_EnseignantGradeAcquisition UNIQUE (id_enseignant, id_grade, date_acquisition)`

*   **`personnel_administratif`**
    *   Description: Informations spécifiques au personnel administratif.
    *   `id_personnel_administratif` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_personne` (INT, FK to `personne`, UNIQUE, NOT NULL)
    *   `numero_personnel` (VARCHAR(50), UNIQUE, NOT NULL)
    *   `date_embauche` (DATE, NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)

*   **`occuper_fonction`**
    *   Description: Historique des fonctions occupées par le personnel (y compris enseignants ayant rôle admin).
    *   `id_occuper_fonction` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_personne` (INT, FK to `personne`, NOT NULL)
    *   `id_fonction` (INT, FK to `fonction`, NOT NULL)
    *   `date_debut_occupation` (DATE, NOT NULL)
    *   `date_fin_occupation` (DATE, NULL)
    *   `CONSTRAINT UC_PersonneFonctionOccupation UNIQUE (id_personne, id_fonction, date_debut_occupation)`

*   **`entreprise`**
    *   Description: Informations sur les entreprises de stage.
    *   `id_entreprise` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `nom_entreprise` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `adresse` (VARCHAR(255), NULL)
    *   `ville` (VARCHAR(100), NULL)
    *   `pays` (VARCHAR(100), NULL)
    *   `contact_email` (VARCHAR(255), NULL)
    *   `contact_telephone` (VARCHAR(20), NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)

*   **`stage`**
    *   Description: Détails du stage effectué par l'étudiant.
    *   `id_stage` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_entreprise` (INT, FK to `entreprise`, NOT NULL)
    *   `sujet_stage` (VARCHAR(255), NOT NULL)
    *   `date_debut` (DATE, NOT NULL)
    *   `date_fin` (DATE, NOT NULL)
    *   `tuteur_entreprise_nom` (VARCHAR(100), NULL)
    *   `tuteur_entreprise_email` (VARCHAR(255), NULL)
    *   `est_valide_rs` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `date_validation_rs` (DATETIME, NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_mise_a_jour` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_EtudiantStageUnique UNIQUE (id_etudiant, sujet_stage, date_debut)`

*   **`rapport_soutenance`**
    *   Description: Rapport de soutenance soumis par l'étudiant.
    *   `id_rapport` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_stage` (INT, FK to `stage`, UNIQUE, NOT NULL)
    *   `numero_rapport` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: RAP-2025-0001 (généré)
    *   `titre` (VARCHAR(500), NOT NULL)
    *   `theme_principal` (VARCHAR(255), NULL)
    *   `estimation_pages` (INT, NULL)
    *   `id_statut_rapport` (INT, FK to `statut_rapport`, NOT NULL)
    *   `date_soumission` (DATETIME, NULL)
    *   `date_derniere_modification` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)
    *   `id_directeur_memoire` (INT, FK to `enseignant`, NULL)

*   **`rapport_section_contenu`**
    *   Description: Contenu textuel détaillé des sections du rapport.
    *   `id_rapport_section_contenu` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_rapport` (INT, FK to `rapport_soutenance`, NOT NULL)
    *   `id_type_section` (INT, FK to `type_document_section`, NOT NULL)
    *   `contenu_texte` (LONGTEXT, NULL)
    *   `date_derniere_modification` (DATETIME, DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_RapportSectionUnique UNIQUE (id_rapport, id_type_section)`

*   **`rapport_conformite_verif`**
    *   Description: Résultats des vérifications de conformité d'un rapport.
    *   `id_verif` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_rapport` (INT, FK to `rapport_soutenance`, NOT NULL)
    *   `id_critere` (INT, FK to `checklist_critere`, NOT NULL)
    *   `id_agent_conformite` (INT, FK to `personnel_administratif`, NOT NULL)
    *   `id_statut_conformite` (INT, FK to `statut_conformite`, NOT NULL)
    *   `commentaire_agent` (TEXT, NULL)
    *   `date_verification` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_RapportCritereUnique UNIQUE (id_rapport, id_critere)`

*   **`commission_validation`**
    *   Description: Représente une commission de validation académique.
    *   `id_commission` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `nom_commission` (VARCHAR(255), UNIQUE, NOT NULL)
    *   `description` (TEXT, NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)

*   **`session_validation`**
    *   Description: Une session spécifique d'évaluation des rapports par une commission.
    *   `id_session` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_commission` (INT, FK to `commission_validation`, NOT NULL)
    *   `nom_session` (VARCHAR(255), NOT NULL)
    *   `date_debut_prevue` (DATETIME, NOT NULL)
    *   `date_fin_prevue` (DATETIME, NOT NULL)
    *   `mode_session` (ENUM('Presentiel', 'En Ligne', 'Hybride'), NOT NULL)
    *   `id_president_session` (INT, FK to `enseignant`, NULL)
    *   `nombre_votants_requis` (TINYINT, NULL)
    *   `statut_session` (ENUM('Planifiee', 'En cours', 'Cloturee'), DEFAULT 'Planifiee', NOT NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_cloture_reelle` (DATETIME, NULL)

*   **`session_rapport`**
    *   Description: Association des rapports à une session de validation.
    *   `id_session_rapport` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_session` (INT, FK to `session_validation`, NOT NULL)
    *   `id_rapport` (INT, FK to `rapport_soutenance`, UNIQUE, NOT NULL)
    *   `date_ajout_session` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `ordre_passage` (INT, NULL)

*   **`membre_commission_session`**
    *   Description: Membres (enseignants) affectés à une session.
    *   `id_membre_session` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_session` (INT, FK to `session_validation`, NOT NULL)
    *   `id_enseignant` (INT, FK to `enseignant`, NOT NULL)
    *   `date_affectation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `est_rapporteur` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `CONSTRAINT UC_MembreSession UNIQUE (id_session, id_enseignant)`

*   **`vote_rapport`**
    *   Description: Votes individuels des membres sur les rapports.
    *   `id_vote` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_session_rapport` (INT, FK to `session_rapport`, NOT NULL)
    *   `id_enseignant` (INT, FK to `enseignant`, NOT NULL)
    *   `id_decision_vote` (INT, FK to `decision_vote`, NOT NULL)
    *   `commentaire` (TEXT, NULL)
    *   `tour_scrutin` (TINYINT, DEFAULT 1, NOT NULL)
    *   `date_vote` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_VoteUniqueParMembreTour UNIQUE (id_session_rapport, id_enseignant, tour_scrutin)`

*   **`proces_verbal`**
    *   Description: Procès-verbaux officiels des sessions de validation.
    *   `id_pv` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `numero_pv` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: PV_2025-0001 (généré)
    *   `id_session` (INT, FK to `session_validation`, UNIQUE, NOT NULL)
    *   `id_redacteur` (INT, FK to `enseignant`, NOT NULL)
    *   `contenu_texte` (LONGTEXT, NULL)
    *   `note_attribuee` (DECIMAL(4,2), NULL)
    *   `recommandations` (TEXT, NULL)
    *   `id_statut_pv` (INT, FK to `statut_pv`, NOT NULL)
    *   `date_redaction` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_validation_finale` (DATETIME, NULL)
    *   `version` (INT, DEFAULT 1, NOT NULL)

*   **`pv_approbation`**
    *   Description: Enregistrement des approbations du PV par les membres.
    *   `id_approbation` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_pv` (INT, FK to `proces_verbal`, NOT NULL)
    *   `id_enseignant` (INT, FK to `enseignant`, NOT NULL)
    *   `est_approuve` (BOOLEAN, NOT NULL)
    *   `commentaire` (TEXT, NULL)
    *   `date_approbation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `CONSTRAINT UC_PVApprobationUnique UNIQUE (id_pv, id_enseignant)`

*   **`note`**
    *   Description: Notes obtenues par les étudiants pour les ECUEs.
    *   `id_note` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_ecue` (INT, FK to `element_constitutif_ue`, NOT NULL)
    *   `note_valeur` (DECIMAL(4,2), NOT NULL)
    *   `date_saisie` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `saisie_par_id_personnel` (INT, FK to `personnel_administratif`, NULL)
    *   `id_annee_academique` (INT, FK to `annee_academique`, NOT NULL)
    *   `CONSTRAINT UC_EtudiantECUEAnneeNote UNIQUE (id_etudiant, id_ecue, id_annee_academique)`

*   **`bulletin_note`**
    *   Description: Bulletins de notes officiels générés.
    *   `id_bulletin` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_annee_academique` (INT, FK to `annee_academique`, NOT NULL)
    *   `numero_bulletin` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: DOC-2025-0001 (généré)
    *   `chemin_fichier_pdf` (VARCHAR(255), NOT NULL)
    *   `date_publication` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `version` (INT, DEFAULT 1, NOT NULL)
    *   `saisie_par_id_rs` (INT, FK to `personnel_administratif`, NULL)
    *   `est_remplace` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `CONSTRAINT UC_EtudiantAnneeBulletinVersion UNIQUE (id_etudiant, id_annee_academique, version)`

*   **`document_administratif`**
    *   Description: Autres documents administratifs générés.
    *   `id_document` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `numero_document` (VARCHAR(50), UNIQUE, NOT NULL) - Ex: DOC-2025-0002 (généré)
    *   `id_doc_type` (INT, FK to `document_administratif_type`, NOT NULL)
    *   `id_personne_concernee` (INT, FK to `personne`, NOT NULL)
    *   `chemin_fichier_pdf` (VARCHAR(255), NOT NULL)
    *   `date_generation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `genere_par_id_personnel` (INT, FK to `personnel_administratif`, NULL)

*   **`notification`**
    *   Description: Notifications envoyées aux utilisateurs.
    *   `id_notification` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_utilisateur_destinataire` (INT, FK to `utilisateur`, NOT NULL)
    *   `id_modele` (INT, FK to `modele_notification`, NULL)
    *   `sujet` (VARCHAR(255), NULL)
    *   `message` (TEXT, NOT NULL)
    *   `date_envoi` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `est_lue` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `id_canal` (INT, FK to `canal_diffusion`, NOT NULL)
    *   `contexte_id` (INT, NULL)
    *   `contexte_type` (VARCHAR(50), NULL)

*   **`parametre_notification_utilisateur`**
    *   Description: Préférences de notification de l'utilisateur.
    *   `id_param_notif` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_utilisateur` (INT, FK to `utilisateur`, UNIQUE, NOT NULL)
    *   `recevoir_email_quotidien` (BOOLEAN, DEFAULT FALSE, NOT NULL)
    *   `desactiver_emails_secondaires` (BOOLEAN, DEFAULT FALSE, NOT NULL)

*   **`reclamation`**
    *   Description: Réclamations et demandes des étudiants.
    *   `id_reclamation` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_etudiant` (INT, FK to `etudiant`, NOT NULL)
    *   `id_personnel_administratif_assigne` (INT, FK to `personnel_administratif`, NULL)
    *   `sujet` (VARCHAR(255), NOT NULL)
    *   `description` (TEXT, NOT NULL)
    *   `date_soumission` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `id_statut_reclamation` (INT, FK to `statut_reclamation`, NOT NULL)
    *   `date_cloture` (DATETIME, NULL)
    *   `reponse_admin` (TEXT, NULL)

*   **`enregistrer_audit`** (Correspond à `enregistrer` dans le texte)
    *   Description: Journal d'audit détaillé de toutes les actions sensibles.
    *   `id_audit` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_utilisateur` (INT, FK to `utilisateur`, NULL)
    *   `id_action` (VARCHAR(100), NOT NULL) - Code de l'action
    *   `date_action` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `id_entite_concernee` (VARCHAR(50), NULL)
    *   `type_entite_concernee` (VARCHAR(50), NULL)
    *   `details_action_json` (JSON, NULL)
    *   `adresse_ip` (VARCHAR(45), NULL)
    *   `user_agent` (VARCHAR(500), NULL)

*   **`delegation_responsabilite`**
    *   Description: Gestion des délégations temporaires de responsabilités.
    *   `id_delegation` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `id_delegant` (INT, FK to `utilisateur`, NOT NULL)
    *   `id_delegataire` (INT, FK to `utilisateur`, NOT NULL)
    *   `date_debut` (DATETIME, NOT NULL)
    *   `date_fin` (DATETIME, NOT NULL)
    *   `permissions_deleguees_json` (JSON, NULL)
    *   `perimetre_concerne` (VARCHAR(255), NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `est_active` (BOOLEAN, DEFAULT TRUE, NOT NULL)

*   **`tache_asynchrone`**
    *   Description: Suivi des tâches exécutées en arrière-plan.
    *   `id_tache` (INT, PK, AUTO_INCREMENT, NOT NULL)
    *   `nom_tache` (VARCHAR(255), NOT NULL)
    *   `payload_json` (JSON, NULL)
    *   `statut` (ENUM('En attente', 'En cours', 'Reussie', 'Echouee'), DEFAULT 'En attente', NOT NULL)
    *   `date_creation` (DATETIME, DEFAULT CURRENT_TIMESTAMP)
    *   `date_debut_execution` (DATETIME, NULL)
    *   `date_fin_execution` (DATETIME, NULL)
    *   `message_erreur` (TEXT, NULL)
    *   `nombre_tentatives` (TINYINT, DEFAULT 0, NOT NULL)
    *   `id_utilisateur_initiateur` (INT, FK to `utilisateur`, NULL)

III. Intégrité et Règles Métier Clés Reflétées dans le Schéma

Le schéma est conçu pour faire respecter les règles métier suivantes via des contraintes de base de données et des relations claires:

*   **Unicité des Identifiants**: L'utilisation de la table `sequences` couplée aux colonnes `numero_etudiant`, `numero_rapport`, `numero_pv`, `numero_bulletin`, et `numero_document` garantit des identifiants uniques et lisibles.
*   **Historisation des Fonctions et Grades**: Les tables `acquerir_grade` et `occuper_fonction` avec leurs dates de début et de fin (`date_fin_occupation` NULL pour la fonction actuelle) permettent de reconstituer l'historique des carrières du personnel.
*   **Intégrité des Rapports**: Un rapport est lié de manière unique à un stage (`id_stage` UNIQUE dans `rapport_soutenance`). Le contenu est segmenté par section (`UC_RapportSectionUnique` dans `rapport_section_contenu`).
*   **Conformité des Rapports**: Chaque critère de la checklist est enregistré pour un rapport spécifique (`UC_RapportCritereUnique` dans `rapport_conformite_verif`), assurant la traçabilité des décisions de conformité.
*   **Workflow des Sessions**: Une session est liée à une commission. Un rapport ne peut être dans une seule session active à la fois.
*   **Validation des Votes et PV**: Un membre ne peut voter qu'une fois par rapport par tour de scrutin (`UC_VoteUniqueParMembreTour`). Un PV est unique par session (`id_session` UNIQUE dans `proces_verbal`) et son approbation est tracée par membre (`UC_PVApprobationUnique`).
*   **Gestion des Notes**: Les notes sont enregistrées par étudiant, ECUE et année académique (`UC_EtudiantECUEAnneeNote`). Les bulletins ont un système de versionnement pour gérer les corrections (`UC_EtudiantAnneeBulletinVersion`).
*   **Sécurité des Accès**: Les tables `utilisateur_groupe`, `groupe_traitement` et `traitement` implémentent le modèle RBAC, définissant précisément les permissions. La table `sessions` permet la révocation des droits en temps réel. Les colonnes `tentatives_connexion_echouees` et `compte_bloque_jusqua` dans `utilisateur` gèrent la protection contre les attaques par force brute.
*   **Audit Complet**: La table `enregistrer_audit` capture systématiquement les actions cruciales, répondant aux besoins de traçabilité et de sécurité.

Ce schéma constitue le fondement structurel de "GestionMySoutenance", garantissant la cohérence des données et la robustesse des opérations métier.

## User Flow
USERFLOW

The "GestionMySoutenance" platform is designed to streamline academic processes through clearly defined user journeys, intuitive interfaces, and robust interaction patterns tailored to each actor's role. This section details the primary user flows, providing a step-by-step walkthrough of typical interactions and highlighting key system responses.

***

### 1. User Flow: Étudiant (GRP_ETUDIANT)

**Objective:** To enable students to prepare, submit, track, and manage their academic reports and related documents with clarity and autonomy.

**1.1. Inscription, Connexion et Accès Initial**

*   **Entry Point:** Student receives an email with account activation details after their administrative inscription and stage validation by the Responsable Scolarité (RS).
*   **Steps:**
    1.  **Receives Credentials:** Student receives an email containing their login and temporary password.
    2.  **First Login & Password Reset:** Student navigates to the "GestionMySoutenance" login page.
        *   **Interaction:** Enters provided login and temporary password. If it's the first login, the system prompts for a new, secure password.
        *   **UI Element:** Login form with "Mot de passe oublié" link. Password strength indicator for new password.
        *   **System Response:** Successful login directs to the personalized dashboard. Multiple failed attempts trigger a temporary account lock, with a clear notification on the login page.
    3.  **Email Validation:**
        *   **Interaction:** Clicks on a secure token link sent to their registered email.
        *   **UI Element:** Persistent banner on dashboard until email is verified, offering a "Renvoyer lien de validation" option.
        *   **System Response:** Email status is updated to "vérifié", ensuring reliable future communications (e.g., password reset, critical notifications).
*   **Dashboard View:** Upon successful login, the student is greeted by a personalized dashboard.
    *   **UI Elements:**
        *   "État d'avancement de mon rapport": A visual progress tracker (stepper) showing stages like "Soumis", "En contrôle de conformité", "En commission", "Décision finale".
        *   "Notifications importantes": A chronological feed of alerts from administrative staff or the commission.
        *   "Actions attendues de ma part": Prompts for pending tasks (e.g., "Mettre à jour mon profil", "Corriger mon rapport").
        *   Information regarding prerequisites for report submission (validated inscription, registered stage, regularized penalties).
*   **Interaction Pattern:** Conditional access; clear, actionable notifications.

**1.2. Préparation et Soumission du Rapport**

*   **Entry Point:** Student accesses the "Mon Rapport" section from the dashboard.
*   **Steps:**
    1.  **Initiation du Rapport:**
        *   **Interaction:** Chooses between "Modèle Préformaté" (structured sections like "Introduction", "Développement", "Conclusion") or "Page Blanche".
        *   **UI Element:** Two distinct buttons/options on the "Créer un nouveau rapport" screen.
    2.  **Rédaction du Contenu:**
        *   **Interaction:** Utilizes the integrated WYSIWYG editor to write the report's content directly online. Applies formatting (bold, italic, lists, hierarchical titles).
        *   **UI Element:** Rich text editor interface with standard formatting toolbar. Clearly delineated sections (e.g., "Résumé", "Introduction").
        *   **System Response:** Automatic and frequent saving as a "brouillon" (draft) to prevent data loss.
    3.  **Saisie des Métadonnées:**
        *   **Interaction:** Fills in essential details: "Titre précis", "Thème principal", "Estimation du nombre de pages".
        *   **UI Element:** Dedicated input fields for metadata, separate from the main text editor.
    4.  **Soumission Formelle:**
        *   **Interaction:** Clicks the "Soumettre mon Rapport" button.
        *   **UI Element:** Prominent "Soumettre" button. Confirmation dialog explaining the irreversibility of the action (report becomes read-only).
        *   **System Response:**
            *   Report status changes from "Brouillon" to "Soumis".
            *   Content is locked in read-only mode for the student.
            *   An automatic notification confirms receipt of the submission.
            *   The report is automatically transmitted to the "Agent de Contrôle de Conformité".
            *   The system prevents the student from initiating another submission for the same stage/academic period unless explicitly authorized by an administrator.
*   **Interaction Pattern:** Guided creation; multi-step process with clear saving and submission points; status changes and automatic triggers.

**1.3. Suivi du Workflow et Gestion des Corrections**

*   **Entry Point:** Post-submission, the "État d'avancement de mon rapport" on the dashboard.
*   **Steps:**
    1.  **Contrôle de Conformité:**
        *   **System Response:** The "Agent de Contrôle de Conformité" reviews the report based on a checklist.
        *   **UI Element:** The visual stepper updates to show "En contrôle de conformité".
    2.  **Rapport Non Conforme:**
        *   **System Response:** If the report fails conformity, the student receives a notification (email and in-app).
        *   **UI Element:** Stepper moves back or highlights "Corrections requises (Conformité)". Detailed comments from the agent are displayed on the report view. The editing interface for the report is re-unlocked.
        *   **Interaction:** Student reviews comments, makes necessary corrections directly in the online editor. A mandatory "Note explicative des corrections apportées" field must be filled.
        *   **System Response:** Re-submission by the student triggers a new conformity check cycle.
    3.  **Validation par la Commission:**
        *   **System Response:** Once "Conforme", the report is transmitted to the "Commission de Validation". Student is notified. The stepper updates to "En Commission".
        *   **UI Element:** The stepper updates to "En Commission" with a reassuring message like "Votre rapport est en cours d'évaluation par la commission. Aucune action n'est requise de votre part pour l'instant."
    4.  **Décision Finale de la Commission:**
        *   **System Response:** The commission reaches a final decision. The "Procès-Verbal (PV) de Validation" is generated. Student is notified (email and in-app) and the PV is made available.
        *   **UI Element:** Stepper updates to "Validé" or "Non-Validé". A link to the PV appears in the "Mes Documents Officiels" section.
        *   **Interaction:** Student consults the PV.
*   **Scénarios de Non-Validation Définitive:**
    *   **Case 1: Reprise du Rapport Actuel (si autorisé):**
        *   **UI Element:** A specific option becomes active in the student's interface, allowing deep modifications.
        *   **Interaction:** Student modifies, re-submits for a new evaluation cycle.
    *   **Case 2: Nouveau Stage/Thème:**
        *   **UI Element:** Submission functionality is suspended. Guidance provided to contact the RS for a new stage registration.
        *   **Interaction:** Student follows administrative procedure with RS.
        *   **System Response:** RS re-activates submission access only after the new stage is officially registered.
*   **Interaction Pattern:** Iterative correction loop; clear status indicators; conditional actions based on workflow stage.

**1.4. Accès aux Documents Officiels et Support**

*   **Entry Point:** "Mes Documents Officiels" and "Ressources & Aide" sections from the dashboard.
*   **Steps:**
    1.  **Relevé de Notes Provisoire:**
        *   **Interaction:** Clicks "Générer un relevé de notes provisoire".
        *   **UI Element:** Button to generate. The generated PDF clearly displays a "PROVISOIRE - DOCUMENT NON OFFICIEL" watermark and is horodaté.
        *   **System Response:** Real-time PDF generation.
    2.  **Bulletins Officiels:**
        *   **Interaction:** Views a list of official bulletins. Clicks "Télécharger" for a specific bulletin.
        *   **UI Element:** Table listing bulletins with "Période", "Date de publication", "Numéro de version". Download button next to each.
        *   **System Response:** Provides an authentic PDF copy.
    3.  **Procès-Verbal de Validation:**
        *   **Interaction:** Accesses the PV directly from its dedicated section.
        *   **UI Element:** Link to the final, approved PV of their report.
    4.  **Autres Documents Administratifs:**
        *   **Interaction:** Views and downloads attestations, payment receipts, etc., generated by the RS.
        *   **UI Element:** List of other downloadable documents.
    5.  **Ressources & Aide:**
        *   **Interaction:** Navigates through guides, examples, evaluation criteria, FAQ. Accesses contact information for support services.
        *   **UI Element:** Navigable sections for various resources. Search bar for FAQ.
    6.  **Système de Réclamations:**
        *   **Interaction:** Submits a new claim (categorized, detailed description). Tracks its status and reads responses.
        *   **UI Element:** Form for new claim, table for tracking existing claims with status updates.
        *   **System Response:** Routes the claim to the appropriate service. Notifications upon status change or response.
*   **Interaction Pattern:** Self-service document generation/access; clear categorization of support resources; structured communication channel.

***

### 2. User Flow: Personnel Administratif

This module serves two distinct profiles: Agent de Contrôle de Conformité and Responsable Scolarité (RS).

**2.1. Agent de Contrôle de Conformité (GRP_AGENT_CONFORMITE)**

**Objective:** To efficiently verify the administrative and regulatory compliance of student reports before academic evaluation.

*   **Entry Point:** Agent logs into "GestionMySoutenance".
*   **Steps:**
    1.  **Tableau de Bord de Conformité:**
        *   **UI Element:** Dashboard optimized for compliance tasks, showing "Rapports en attente d'examen" (sorted by submission date). "Historique de mes vérifications".
        *   **System Response:** Notifications for newly submitted reports.
    2.  **Sélection et Examen du Rapport:**
        *   **Interaction:** Selects a report from the "en attente" list.
        *   **UI Element:** Dedicated full-screen interface. Left panel: Student information, report metadata (title, theme, estimated pages), and the full text content of the report's sections. Right panel: "Grille de Critères de Conformité" (checklist).
    3.  **Vérification Détaillée (Checklist Traçable):**
        *   **Interaction:** Systematically checks each criterion on the checklist (e.g., "Respect de la page de garde", "Présence du résumé", "Bibliographie formatée", "Validité du stage associée"). Selects "Conforme", "Non Conforme", or "Non Applicable" for each.
        *   **UI Element:** Interactive checklist with radio buttons or checkboxes for each criterion.
        *   **System Response:** Each status change per criterion is instantly recorded, building a granular audit trail.
    4.  **Décision Globale et Retour à l'Étudiant:**
        *   **Interaction:** Makes a final decision: "Rapport Conforme" or "Rapport Non Conforme".
        *   **UI Element:** A prominent button for the global decision. If "Non Conforme", a mandatory "Commentaire Précis et Constructif" textarea appears, requiring details on each non-conformity and expected corrections.
        *   **System Response:**
            *   If "Conforme": Report automatically transmitted to the "Commission de Validation". Student status updated, notification sent.
            *   If "Non Conforme": Report is electronically returned to the student. Student receives a notification with comments.
            *   All actions and decisions are meticulously logged in the audit trail.
*   **Interaction Pattern:** Checklist-driven verification; conditional input fields; automated workflow triggers.

**2.2. Responsable Scolarité (RS) (GRP_RS)**

**Objective:** To manage the comprehensive administrative journey of students, from enrollment to final report validation.

*   **Entry Point:** RS logs into "GestionMySoutenance".
*   **Steps:**
    1.  **Tableau de Bord du RS:**
        *   **UI Element:** Personalized dashboard prioritizing key tasks: "Étudiants éligibles à l'activation", "Nouvelles inscriptions / paiements", "Nouveaux enregistrements de stage", "Réclamations étudiantes à traiter", "Pénalités à régulariser".
    2.  **Activation des Comptes Étudiants:**
        *   **Interaction:** Navigates to "Gestion des Accès Étudiants". Reviews list of "entités Étudiant" awaiting account creation.
        *   **UI Element:** Table listing students. Each row displays a visual checklist of prerequisites (e.g., "Scolarité en règle", "Stage validé", "Pénalités réglées"). A "Activer Compte" button (grayed out if prerequisites unmet) or a "Activer en Masse" option.
        *   **System Response:** Upon activation, student credentials are generated and sent automatically. The system logs the activation event.
    3.  **Gestion des Inscriptions et des Stages:**
        *   **Interaction:** Accesses "Gestion Inscriptions" or "Gestion Stages". Enters/updates student enrollment details, payment status. Records new stage information (company, dates, subject, tutor).
        *   **UI Element:** Forms for data entry. Dropdown for academic year. Pre-populated fields for known companies.
        *   **System Response:** New companies are automatically added to the system's referential if not already present. Updates trigger notifications to relevant parties.
    4.  **Gestion des Notes et Génération des Bulletins (Symphonie des Notes):**
        *   **Interaction:** Accesses "Saisie des Notes". Enters grades for each subject/module, ensuring accuracy against official PVs. Triggers "Consolider et Générer les Bulletins".
        *   **UI Element:** Data grid for note entry. Buttons for "Générer Bulletins" (batch). Options to correct notes with mandatory justification.
        *   **System Response:** Batch generation of official PDF bulletins (asynchronous background task). Students receive automatic notifications of new bulletins in their portal. Version control is applied to bulletins (e.g., v1.1).
    5.  **Régularisation des Pénalités:**
        *   **Interaction:** Views students with "Pénalités Dues". After payment/regularization, updates penalty status from "PEN_DUE" to "PEN_REGLEE".
        *   **UI Element:** List of students with penalty status. Button to change status.
        *   **System Response:** This status update is the trigger that makes the student eligible again for report submission or account activation.
    6.  **Traitement des Réclamations Étudiantes:**
        *   **Interaction:** Reviews incoming student claims. Provides responses, updates claim status (e.g., "En cours", "Résolue"), or assigns to another department.
        *   **UI Element:** Inbox-like interface for claims. Text editor for responses. Status dropdown.
    7.  **Génération de Documents Administratifs (On-Demand):**
        *   **Interaction:** Selects a student or a type of document (e.g., "Attestation de scolarité", "Reçu de paiement") and initiates generation.
        *   **UI Element:** Menu for document types. Student search/selection.
        *   **System Response:** Instant PDF generation, with document automatically deposited in the student's personal space.
*   **Interaction Pattern:** Role-based dashboards; multi-step validations; asynchronous batch processing for heavy tasks; comprehensive data management; centralized communication.

***

### 3. User Flow: Membre de Commission (Module Commission de Validation)

**Objective:** To enable pedagogical staff to efficiently evaluate student reports, participate in deliberations, and formalize decisions.

**3.1. Accès, Tableau de Bord et Évaluation des Rapports**

*   **Entry Point:** Commission member logs into "GestionMySoutenance".
*   **Steps:**
    1.  **Tableau de Bord de la Commission:**
        *   **UI Element:** Dedicated dashboard showing "Rapports en attente de mon vote", "PVs en attente de mon approbation", and overall commission activity. Notifications for new sessions or voting reminders.
    2.  **Consultation et Analyse du Rapport:**
        *   **Interaction:** Selects a report assigned for evaluation.
        *   **UI Element:** Integrated viewer displaying the full text content of the report (introduction, development, etc.) alongside contextual information about the student.
    3.  **Émission du Vote:**
        *   **Interaction:** After analysis, chooses a decision from predefined options ("Approuvé en l'état", "Refusé", "Approuvé sous réserve de corrections mineures", "Nécessite une discussion collégiale approfondie"). A mandatory text area appears for "Commentaire circonstancié" if the decision is not a simple approval.
        *   **UI Element:** Radio buttons or dropdown for decision. Expandable text area for comments.
        *   **System Response:** Vote is formally recorded, timestamped, and associated with the specific round of voting. The system prevents duplicate votes for the same report in the same round. The President is updated on vote progress.
*   **Interaction Pattern:** Centralized access to reports; structured voting with mandatory justifications; real-time feedback loop to the President.

**3.2. Processus Collaboratif du Procès-Verbal (PV)**

*   **Entry Point:** After a session is closed and votes are consolidated.
*   **Steps:**
    1.  **Rédaction du PV (Rapporteur/Président):**
        *   **Interaction:** A designated member (rapporteur or President) initiates the PV drafting.
        *   **UI Element:** Rich text editor for the PV. The system pre-fills the document with key information (session details, list of participants, aggregated vote results, and comments from each voter).
        *   **System Response:** The PV draft is created, with the designated member as the "propriétaire-rédacteur".
    2.  **Circuit de Validation Interne:**
        *   **Interaction:** Other commission members receive a notification that a PV is awaiting their approval. They access the draft PV.
        *   **UI Element:** View PV draft. Options: "Approuver formellement" or "Demander des amendements" (with mandatory comment).
        *   **System Response:** Approval or amendment requests are recorded. If amendments are requested, the PV returns to the "propriétaire-rédacteur" for modification.
    3.  **Finalisation et Diffusion:**
        *   **System Response:** Once all required approvals are obtained, the PV is finalized, locked in read-only format. It is automatically made available in the student's personal space and transmitted to the administrative service for archiving. An email copy can also be sent to other stakeholders.
*   **Interaction Pattern:** Collaborative document editing; multi-step approval workflow; automated dissemination upon finalization.

**3.3. Fonctionnalités Spécifiques au Président de Session (Additional)**

*   **Entry Point:** President accesses "Gestion des Sessions de Validation".
*   **Steps:**
    1.  **Création et Gestion des Sessions:**
        *   **Interaction:** Creates a new session, defines its name, provisional start/end dates, and mode (Présentiel, En Ligne Asynchrone, Hybride). Adds reports from the list of eligible submissions. Defines the "nombre de votants requis" for consensus.
        *   **UI Element:** Form with various configuration fields. Drag-and-drop or selection interface for adding reports.
        *   **System Response:** Session created, members assigned, notifications sent. The system prevents starting a session if critical information is missing.
    2.  **Orchestration des Délibérations:**
        *   **Interaction:** Monitors vote progress in real-time for each report within the session. Identifies divergences. If no consensus, can "Lancer un nouveau tour de vote" for a specific report or "Retirer un rapport de la session" for offline discussion.
        *   **UI Element:** Real-time dashboard showing vote counts, "décompte des votes", and a visual indicator for "désaccord" (non-unanimité). Buttons for re-voting or report removal.
        *   **System Response:** New voting round resets individual votes. The system alerts if a session cannot be closed due to ongoing deliberations.
    3.  **Arbitrage et Finalisation du PV:**
        *   **Interaction:** In case of PV approval blockage, can perform "Approbation par Substitution" (with mandatory justification) for a non-responsive member, or "Forcer une Validation avec Quorum" (if regulations allow).
        *   **UI Element:** Special override buttons with confirmation dialogs requiring justification.
        *   **System Response:** Ensures the PV workflow doesn't get stuck, maintaining the process flow.
    4.  **Désignation du Directeur de Mémoire:**
        *   **Interaction:** After a report is definitively validated, the President designates the "directeur de mémoire" from the list of eligible teachers, considering their specialty and workload.
        *   **UI Element:** Teacher selection interface (possibly with filters for specialty). Confirmation action.
        *   **System Response:** Official notification sent to the designated teacher and the student.
*   **Interaction Pattern:** Comprehensive session lifecycle management; real-time monitoring and intervention tools; advanced arbitration features.

***

### 4. User Flow: Administrateur Système (GRP_ADMIN_SYS)

**Objective:** To provide absolute control over the platform's configuration, users, data, and technical health, ensuring its initial setup, continuous operation, and strategic evolution.

**4.1. Connexion et Tableau de Bord Consolidé**

*   **Entry Point:** Administrator logs into "GestionMySoutenance".
*   **Steps:**
    1.  **Accès au Tableau de Bord Global:**
        *   **UI Element:** Consolidated dashboard providing a panoramic view: "Nombre d'utilisateurs actifs", "Volumétrie des données" (reports submitted, statuses), "Alertes potentielles" (database, server performance, automated processes, unclosed academic years). Direct links to frequently used management sections.
*   **Interaction Pattern:** High-level monitoring; quick navigation to critical areas.

**4.2. Gestion Universelle des Entités et des Comptes Utilisateurs (RBAC)**

*   **Entry Point:** "Gestion des Entités et des Comptes Utilisateurs" module.
*   **Steps:**
    1.  **Recherche et Consultation Globale:**
        *   **Interaction:** Searches and consults any entity (student, teacher, admin staff) or user account.
        *   **UI Element:** Comprehensive list with advanced search and filtering options (by role, status, etc.).
    2.  **Création et Modification d'Entités et Comptes:**
        *   **Interaction:** Creates new entities (student, teacher, admin staff) and generates associated user accounts. Modifies profile information, manages account status (activation, deactivation, blocking, archiving), resets passwords, and assigns/changes user groups/roles.
        *   **UI Element:** Forms for creating/editing. Dropdowns for roles and statuses.
        *   **System Response:** Changes to user permissions are applied in real-time to active sessions, thanks to the database session handler.
    3.  **Importation en Masse des Étudiants:**
        *   **Interaction:** Uploads CSV/Excel files for student mass import. Uses an interactive mapping interface to align file columns with system fields. Previews data, corrects errors directly online, then launches asynchronous import.
        *   **UI Element:** File upload, interactive column mapping (drag-and-drop or dropdowns), dynamic preview table with inline error editing, "Lancer l'importation" button.
        *   **System Response:** Asynchronous processing of large files, detailed reports on import success/failure with downloadable error files.
    4.  **Configuration du RBAC (Types, Groupes, Traitements):**
        *   **Interaction:** Defines, creates, modifies, and deletes "Types d'Utilisateurs", "Groupes d'Utilisateurs" (roles), and "Traitements" (atomic permissions). Assigns or removes permissions from groups using a matrix.
        *   **UI Element:** Dedicated CRUD interfaces for each RBAC component. Matrix view for permission assignment.
        *   **System Response:** Granular control over system access and functionalities.
    5.  **Gestion des Transitions de Rôles et Délégations:**
        *   **Interaction:** When a user's role changes or they depart, the administrator identifies and reassigns "tâches orphelines" (e.g., reports awaiting review, PVs in draft). Can also set up temporary "Délégations de Responsabilités Spécifiques".
        *   **UI Element:** "Tableau de bord des tâches orphelines". Delegation setup form (beneficiary, delegated tasks, optional perimeter, mandatory start/end dates).
        *   **System Response:** Ensures continuity of critical processes. All reassignments and delegations are auditable.
*   **Interaction Pattern:** CRUD operations; role-based access control setup; interactive data import; live permission updates.

**4.3. Configuration Intégrale du Système et des Règles Métier**

*   **Entry Point:** "Configuration Système" module.
*   **Steps:**
    1.  **Paramètres Généraux:**
        *   **Interaction:** Updates system-wide settings like `MAX_LOGIN_ATTEMPTS`, `LOCKOUT_TIME_MINUTES`, `PASSWORD_MIN_LENGTH`, security token validity.
        *   **UI Element:** Configuration forms with input fields and toggles.
    2.  **Gestion des Années Académiques:**
        *   **Interaction:** Creates, modifies, or deletes academic years, and designates the "année académique active".
        *   **UI Element:** CRUD table for academic years. Selector for active year.
    3.  **Gestion des Référentiels:**
        *   **Interaction:** Manages all standardized lists of values (Niveaux d'Étude, Spécialités, Grades/Fonctions des enseignants, Types de documents, all workflow statuses, vote decisions, UE/ECUE).
        *   **UI Element:** Dedicated CRUD interfaces for each reference table.
        *   **System Response:** Ensures data consistency and adherence to institutional standards.
    4.  **Configuration des Règles Métier:**
        *   **Interaction:** Configures specific business rules, such as progressive penalty thresholds and amounts, critical submission deadlines, and validation criteria.
        *   **UI Element:** Specific forms or rule builders for each rule type.
*   **Interaction Pattern:** Centralized policy management; impact on system behavior.

**4.4. Supervision Technique, Maintenance et Audit**

*   **Entry Point:** "Supervision et Audit" module.
*   **Steps:**
    1.  **Consultation de la Piste d'Audit:**
        *   **Interaction:** Accesses a complete audit log of all sensitive actions. Filters by user, date, action type, or entity. Reconstitutes historical events for any report, user, or PV.
        *   **UI Element:** Audit log table with advanced filtering and search capabilities. Detailed event view (including JSON payload for `details_action`).
    2.  **Gestion des Journaux et des Tâches Asynchrones:**
        *   **Interaction:** Consults application (PHP) and server error logs. Purges old logs. Monitors the asynchronous task queue (`queue`), viewing pending, in-progress, successful, or failed tasks. Can force re-execution of failed tasks.
        *   **UI Element:** Log viewers, queue monitoring dashboard with task details.
    3.  **Maintenance et Sauvegarde de la Base de Données:**
        *   **Interaction:** Manages database backup strategies. Can initiate a database restoration process in case of major incidents. Accesses tools for database maintenance (e.g., archiving old data).
        *   **UI Element:** Interface for backup/restore operations.
    4.  **Déploiement des Mises à Jour:**
        *   **Interaction:** Involved in the deployment process for new versions or patches.
*   **Interaction Pattern:** Forensic analysis; system health monitoring; operational maintenance.

**4.5. Pilotage Stratégique, Reporting et Exports**

*   **Entry Point:** "Reporting et Pilotage" module.
*   **Steps:**
    1.  **Génération de Rapports et Statistiques:**
        *   **Interaction:** Generates reports on various metrics (e.g., validation rates, average processing times, platform usage, penalty trends, thesis topics).
        *   **UI Element:** Report generation forms with customizable parameters.
    2.  **Accès aux Tableaux de Bord Analytiques:**
        *   **Interaction:** Views operational dashboards (for RS, Commission President) and strategic dashboards (for direction, aggregating data over longer periods).
        *   **UI Element:** Interactive dashboards with charts and KPIs.
    3.  **Exportation des Données:**
        *   **Interaction:** Exports any list of data (e.g., students, enrollments) to PDF or CSV format.
        *   **UI Element:** Export buttons on various data listing screens.
*   **Interaction Pattern:** Data visualization; strategic insights; customizable data extraction.

**4.6. Gestion de l'Environnement de l'Application (Technical)**

*   **Entry Point:** Typically command-line interface (CLI) or a dedicated "Paramètres Techniques" section for deep configuration.
*   **Steps:**
    1.  **Configuration des Variables d'Environnement:** Manages `.env` files in production.
    2.  **Configuration SMTP:** Sets up email server parameters.
    3.  **Chemins de Stockage:** Defines file upload and storage paths.
    4.  **Durée des Sessions:** Adjusts user session lifetimes.
    5.  **Dépendances PHP:** Supervises project dependencies via `composer.json`.
    6.  **Configuration Serveur Web/PHP:** Adjusts Nginx/Apache configurations and `php.ini` settings for performance or limits.
    7.  **Schéma de la Base de Données:** Applies database migrations and schema updates.
    8.  **Initialisation des Données:** Can run seeding scripts for initial database population.
    9.  **Tâches Planifiées (CRON):** Configures CRON jobs on the server for automated operations (e.g., penalty detection, academic year rollover).
*   **Interaction Pattern:** Direct server/configuration file manipulation; highly technical tasks.

## Styling Guidelines
STYLING

This document outlines the styling guidelines for "GestionMySoutenance", ensuring a consistent, professional, and user-friendly experience across the entire platform. These guidelines are rooted in the project's core values of transparency, efficiency, and academic integrity, and are designed to foster clarity, trust, and ease of use for all stakeholders.

**1. Design Philosophy & Principles (Principes de Conception UI/UX)**
"GestionMySoutenance" aims to provide an exemplary user experience, characterized by:

*   **Clarity and Simplicity (Clarté et Simplicité):** Interfaces should be intuitive and easy to understand at a glance, minimizing cognitive load. Information is presented logically, with clear hierarchy and actionable elements.
*   **Consistency (Cohérence):** A uniform visual language and interaction patterns are applied throughout the application. This ensures predictability, reduces learning curves, and reinforces the system's professionalism.
*   **User-Centricity (Centricité Utilisateur):** Design decisions prioritize the needs and workflows of students, administrative staff, commission members, and administrators. Personalization, clear feedback, and error prevention are key.
*   **Efficiency (Efficacité):** Streamlined workflows, direct access to critical functions, and minimized steps contribute to an efficient user experience, respecting users' time.
*   **Trust and Professionalism (Confiance et Professionnalisme):** The visual design reflects the academic rigor and institutional integrity of the establishment. It should convey reliability and authority without being overly formal or sterile.
*   **Accessibility (Accessibilité):** Adherence to Web Content Accessibility Guidelines (WCAG 2.1 AA) is a fundamental principle, ensuring the platform is usable by individuals with disabilities. This includes proper color contrast, keyboard navigation, clear labeling, and screen reader compatibility.
*   **Responsiveness (Adaptabilité):** The platform is designed to provide an optimal viewing and interaction experience across a wide range of devices, from desktops to tablets and mobile phones. Layouts and components adapt seamlessly to different screen sizes.

**2. Design System & Component Library (Système de Design et Bibliothèque de Composants)**

"GestionMySoutenance" leverages a robust design system to ensure consistency and accelerate development.

*   **FilamentPHP Design System:** As the application is built with FilamentPHP, its inherent design system serves as the foundational component library. This includes standardized UI elements (buttons, forms, tables, notifications, modals, navigation components like "steppers" for progress tracking), ensuring a cohesive look and feel.
*   **Custom Components:** Where Filament's standard components do not fully meet specific functional or aesthetic requirements, custom components will be developed following the established design principles and visual language.
*   **Icons:** A consistent icon set (e.g., Heroicons or Font Awesome) will be used to visually represent actions, statuses, and categories, enhancing clarity and intuitiveness.

**3. Color Palette (Palette de Couleurs)**

The color palette is chosen to be professional, clean, and institutionally aligned, while also providing clear visual cues for user feedback.

*   **Primary Brand Color:** A dominant color reflecting the institution's identity (e.g., a specific shade of blue or green). Used for key interactive elements, primary headers, and branding accents.
    *   `--color-primary-base`: #2C528C (e.g., a deep academic blue)
    *   `--color-primary-light`: #426DA9 (for hover states, lighter backgrounds)
    *   `--color-primary-dark`: #1A345C (for active states, strong contrasts)

*   **Secondary Accent Color:** A complementary color used sparingly to highlight secondary actions, important notifications, or distinct sections.
    *   `--color-secondary-base`: #A3B18A (e.g., a subtle complementary green or a more vibrant accent)

*   **Neutral Palette:** For text, backgrounds, borders, and disabled states. Ensures readability and a clean aesthetic.
    *   `--color-text-dark`: #212529 (for main body text)
    *   `--color-text-light`: #6c757d (for secondary text, labels)
    *   `--color-background-light`: #f8f9fa (for main page backgrounds)
    *   `--color-background-dark`: #e9ecef (for section backgrounds, alternating rows)
    *   `--color-border`: #dee2e6 (for component borders, dividers)

*   **Semantic Colors (Couleurs Sémantiques):** Used consistently for status indications and feedback messages.
    *   `--color-success`: #28a745 (for successful operations, validation)
    *   `--color-warning`: #ffc107 (for alerts, pending actions)
    *   `--color-error`: #dc3545 (for errors, denied actions, critical alerts)
    *   `--color-info`: #17a2b8 (for informative messages, general notices)

**4. Typography (Typographie)**

Typography selection prioritizes readability across all screen sizes and user groups, while maintaining a professional and academic tone.

*   **Font Family (Police de Caractères):**
    *   **Primary Font:** `Inter`, or `system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif`. Used for all body text, labels, and general UI elements.
    *   **Heading Font (Optional):** If a distinct heading font is desired, it should complement the primary font, e.g., `Montserrat` or `Lato`, ensuring legibility and professionalism. Otherwise, the primary font with varying weights and sizes will be used for headings.

*   **Font Sizes (Tailles de Police):** A consistent scaling system will be used (e.g., `rem` units) to ensure responsiveness and hierarchy.
    *   `H1`: 2.5rem (Page Titles)
    *   `H2`: 2rem (Section Titles)
    *   `H3`: 1.75rem (Subsection Titles)
    *   `H4`: 1.5rem
    *   `H5`: 1.25rem
    *   `H6`: 1rem
    *   `Body Text`: 1rem (Base text size for optimal readability)
    *   `Small Text`: 0.875rem (for captions, metadata, disclaimers)

*   **Font Weights (Graisses de Police):** Standard weights will be used to create visual hierarchy and emphasis.
    *   Light (300)
    *   Regular (400)
    *   Medium (500) - for stronger emphasis
    *   Semi-Bold (600) - for labels, important text
    *   Bold (700) - for strong headings, calls to action

*   **Line Height (Hauteur de Ligne) & Letter Spacing (Espacement des Lettres):** Optimized for readability across different font sizes.
    *   `Line Height`: Approximately 1.5 for body text.
    *   `Letter Spacing`: Standard, with minor adjustments for large headings if necessary.

**5. UI/UX Elements & Interaction Patterns (Éléments UI/UX et Modèles d'Interaction)**

*   **Layout & Grid (Mise en Page et Grille):** A responsive grid system will be used to ensure consistent spacing, alignment, and adaptability across various screen sizes. Content will be well-organized within defined containers.
*   **Navigation (Navigation):** Clear and consistent navigation menus (sidebar for main modules, top bar for user profile/notifications). Breadcrumbs will be used to indicate location within the application structure, facilitating user orientation.
*   **Forms & Inputs (Formulaires et Champs de Saisie):**
    *   Labels are always visible and clearly associated with their input fields.
    *   Clear validation feedback (success/error states) is provided in real-time or upon submission, guiding the user.
    *   Placeholder text is used minimally and only as an example, not as a substitute for labels, ensuring information permanence.
*   **Buttons & Calls to Action (Boutons et Appels à l'Action):** Differentiated by primary, secondary, and tertiary styles, based on their importance and destructive nature. Clearly defined hover and active states provide immediate visual feedback.
*   **Data Presentation (Présentation des Données):**
    *   **Tables:** Used for presenting structured data (lists of students, reports). Tables will be designed to be sortable, filterable, and readable, with clear headers and alternating row colors for improved legibility.
    *   **Dashboards:** Provide a consolidated, high-level overview with visual indicators (charts, progress bars, KPIs). They should be easily customizable or filterable to meet specific user needs for strategic piloting.
    *   **Progress Indicators:** Use of "steppers" or progress bars for multi-step processes (e.g., report submission workflow) to provide clear visual feedback on the current stage and overall progress, reducing user anxiety.
*   **Feedback & Notifications (Retour et Notifications):**
    *   **Toast Notifications:** For transient, non-critical messages (success, info) that fade away automatically.
    *   **Alert Banners:** For persistent or more critical messages (warnings, errors) that require user attention and dismissal.
    *   **In-app Notifications:** A dedicated notification center will aggregate important system alerts and communications for easy access and review.
*   **Imagery & Illustrations (Imagerie et Illustrations):** Minimalist and functional, primarily used for clarity (e.g., icons, charts). If illustrative imagery is used, it should be professional, inclusive, and align with the institution's values, avoiding excessive ornamentation.

This styling documentation serves as a foundational guide. It will be complemented by detailed design specifications for specific components and screens as the project progresses, ensuring that "GestionMySoutenance" not only functions flawlessly but also provides an aesthetically pleasing and highly usable experience.

